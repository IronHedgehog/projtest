{"mappings":"AACA,SAASA,EAAMC,EAAIC,GAEjB,OAAO,IAAIF,EAAMG,UAAUF,EAAIC,E,CCFjC,SAASE,EAASC,GAChB,MAAsB,iBAARA,GAAoBA,aAAeC,M,CAInD,SAASC,EAASC,GAChB,IAAIC,EACJ,MAAsB,iBAARD,GAA2B,MAAPA,GAAkH,YAA3F,MAAPA,GAAuD,OAAvCC,EAAmBD,EAAIE,kBAAuB,EAASD,EAAiBE,K,CAE5I,SAASC,EAAKJ,EAAKK,GACjB,OAAIC,MAAMC,QAAQF,GAAcD,EAAKJ,GAAK,CAACQ,EAAGC,IAAMJ,EAAKK,SAASD,KAC3DE,OAAOC,QAAQZ,GAAKa,QAAO,CAACC,EAAKC,KACtC,IAAKN,EAAGO,GAAKD,EAEb,OADIV,EAAKW,EAAGP,KAAIK,EAAIL,GAAKO,GAClBF,CAAG,GACT,G,CAIL,MAAMG,EAAY,CAChBC,KAAM,OACNC,KAAM,OACNC,WAAY,aACZC,MAAO,QACPC,YAAa,eAKf,SAASC,EAAeC,GACtB,OAAQA,GACN,KAAKP,EAAUE,KACb,OAAOF,EAAUG,WACnB,KAAKH,EAAUI,MACb,OAAOJ,EAAUK,YACnB,QACE,OAAOE,E,CAKb,SAASC,EAAa5B,GACpB,OAAOA,EAAI6B,QAAO,4BAA8B,O,CAIlD,SAASC,EAAeC,EAAGC,GACzB,GAAIA,IAAMD,EAAG,OAAO,EACpB,MAAME,EAAOxB,MAAMC,QAAQsB,GACzBE,EAAOzB,MAAMC,QAAQqB,GACvB,IAAII,EACJ,GAAIF,GAAQC,EAAM,CAChB,GAAIF,EAAEI,QAAUL,EAAEK,OAAQ,OAAO,EACjC,IAAKD,EAAI,EAAGA,EAAIH,EAAEI,OAAQD,IAAK,IAAKL,EAAeE,EAAEG,GAAIJ,EAAEI,IAAK,OAAO,EACvE,OAAO,C,CAET,GAAIF,GAAQC,EAAM,OAAO,EACzB,GAAIF,GAAKD,GAAkB,iBAANC,GAA+B,iBAAND,EAAgB,CAC5D,MAAMM,EAAQL,aAAaM,KACzBC,EAAQR,aAAaO,KACvB,GAAID,GAASE,EAAO,OAAOP,EAAEQ,WAAaT,EAAES,UAC5C,GAAIH,GAASE,EAAO,OAAO,EAC3B,MAAME,EAAUT,aAAaU,OAC3BC,EAAUZ,aAAaW,OACzB,GAAID,GAAWE,EAAS,OAAOX,EAAEY,YAAcb,EAAEa,WACjD,GAAIH,GAAWE,EAAS,OAAO,EAC/B,MAAMnC,EAAOM,OAAON,KAAKwB,GAGzB,IAAKG,EAAI,EAAGA,EAAI3B,EAAK4B,OAAQD,IAAK,IAAKrB,OAAO+B,UAAUC,eAAeC,KAAKhB,EAAGvB,EAAK2B,IAAK,OAAO,EAChG,IAAKA,EAAI,EAAGA,EAAI3B,EAAK4B,OAAQD,IAAK,IAAKL,EAAeC,EAAEvB,EAAK2B,IAAKH,EAAExB,EAAK2B,KAAM,OAAO,EACtF,OAAO,C,CACF,SAAIH,IAAKD,GAAkB,mBAANC,GAAiC,mBAAND,IAC9CC,EAAEY,aAAeb,EAAEa,U,CCvE9B,MAAMI,EAwBAC,qBACF,OAAOC,KAAKC,IAAIC,KAAKC,UAAWD,KAAKE,aAAaC,M,CAIhDC,oBACF,OAAOJ,KAAKC,UAAYD,KAAKH,c,CAI3BQ,eACF,OAAOL,KAAKM,MAAMC,OAAOP,KAAKH,eAAgBG,KAAKI,c,CAIjDI,mBAEF,OAAOV,KAAKW,IAAIT,KAAKE,aAAaQ,IAAMV,KAAKH,gBAE7CG,KAAKW,SAAS3B,OAASgB,KAAKM,MAAMtB,OAAQ,E,CAIxC4B,cACF,OAAOZ,KAAKW,SAASJ,OAAOP,KAAKH,eAAgBG,KAAKQ,a,CAIpDK,WACF,OAAOb,KAAKM,MAAMQ,UAAU,EAAGd,KAAKH,e,CAIlCkB,WACF,OAAOf,KAAKM,MAAMQ,UAAUd,KAAKH,eAAiBG,KAAKI,c,CAIrDY,sBACF,OAAKhB,KAAKQ,cAAgBR,KAAKI,cAAsBpC,EAAUC,KAGvD+B,KAAKE,aAAaQ,MAAQV,KAAKC,WAAaD,KAAKE,aAAaC,QAAUH,KAAKC,WAErFD,KAAKE,aAAaQ,MAAQV,KAAKE,aAAaC,MAA0BnC,EAAUE,KAA5BF,EAAUI,K,CA3DhEnB,YAAYR,GAIV,IAHAiB,OAAOuD,OAAOjB,KAAMvD,GAGbuD,KAAKM,MAAMY,MAAM,EAAGlB,KAAKH,kBAAoBG,KAAKW,SAASO,MAAM,EAAGlB,KAAKH,mBAC5EG,KAAKE,aAAaC,MAItB,KAAOH,KAAKM,MAAMY,MAAMlB,KAAKC,aAAeD,KAAKW,SAASO,MAAMlB,KAAKE,aAAaQ,MAC5EV,KAAKM,MAAMtB,OAASgB,KAAKC,UAAYD,KAAKW,SAAS3B,OAASgB,KAAKE,aAAaQ,MAAOV,KAAKE,aAAaQ,MAAWV,KAAKC,S,ECtBjI,MAAMkB,EAKAC,mBACF,OAAOpB,KAAKqB,OAAOrB,KAAKsB,a,CAEtBC,cACF,OAA8B,IAAvBvB,KAAKqB,OAAOrC,M,CAErBwC,KAAKC,GAECzB,KAAKsB,aAAetB,KAAKqB,OAAOrC,OAAS,IAAGgB,KAAKqB,OAAOrC,OAASgB,KAAKsB,aAAe,GACzFtB,KAAKqB,OAAOG,KAAKC,GACbzB,KAAKqB,OAAOrC,OAASmC,EAAaO,YAAY1B,KAAKqB,OAAOM,QAC9D3B,KAAKsB,aAAetB,KAAKqB,OAAOrC,OAAS,C,CAE3C4C,GAAGC,GAED,OADA7B,KAAKsB,aAAexB,KAAKC,IAAID,KAAKW,IAAIT,KAAKsB,aAAeO,EAAO,GAAI7B,KAAKqB,OAAOrC,OAAS,GACnFgB,KAAKoB,Y,CAEdU,OACE,OAAO9B,KAAK4B,IAAG,E,CAEjBG,OACE,OAAO/B,KAAK4B,GAAG,E,CAEjBI,QACEhC,KAAKqB,OAAOrC,OAAS,EACrBgB,KAAKsB,aAAe,C,CA7BtBrE,cACE+C,KAAKqB,OAAS,GACdrB,KAAKsB,aAAe,C,EA8BxBH,EAAaO,WAAa,IChC1B,MAAMO,EAkBJzC,WACE,OAAOQ,KAAKM,K,CAEd4B,OAAOnB,GACLf,KAAKM,OAASzD,OAAOkE,E,CAEvBoB,SAASC,GACP,OAAOA,EAAOC,OAAOrC,KAAKR,WAAY,CACpCuB,MAAM,IACLuB,UAAUF,EAAOG,qB,CAElBd,YACF,MAAO,CACLnB,MAAON,KAAKM,MACZkC,KAAMxC,KAAKwC,KACXC,KAAMzC,KAAKyC,K,CAGXhB,UAAMA,GACR/D,OAAOuD,OAAOjB,KAAMyB,E,CAEtBiB,QAAQC,GACN,IAAK3C,KAAKM,MAAMtB,QAAuB,MAAb2D,GAAqB3C,KAAKwC,MAAQG,EAAW,MAAO,GAC9E,MAAMC,EAAY5C,KAAKM,MAAM,GAE7B,OADAN,KAAKM,MAAQN,KAAKM,MAAMY,MAAM,GACvB0B,C,CAETjB,QACE,IAAK3B,KAAKM,MAAMtB,OAAQ,MAAO,GAC/B,MAAM4D,EAAY5C,KAAKM,MAAMN,KAAKM,MAAMtB,OAAS,GAEjD,OADAgB,KAAKM,MAAQN,KAAKM,MAAMY,MAAM,GAAG,GAC1B0B,C,CA1CT3F,YAAYqD,EAAOkC,EAAMC,QACT,IAAVnC,IACFA,EAAQ,SAEG,IAATkC,IACFA,EAAO,GAETxC,KAAKM,MAAQA,EACbN,KAAKwC,KAAOA,EACZxC,KAAKyC,KAAOA,C,ECfhB,MAAMI,EAsBAC,YACF,OAAO9C,KAAKoC,OAAOW,QAAQ/C,KAAKgD,M,CAE9BC,UACF,OAAOjD,KAAKoC,OAAOc,eAAelD,KAAKgD,OAAShD,KAAKmD,M,CAEnD1B,YACF,MAAO,CACLuB,MAAOhD,KAAKgD,MACZG,OAAQnD,KAAKmD,OACbC,GAAIpD,KAAKoD,G,CAGT3B,UAAM4B,GACR3F,OAAOuD,OAAOjB,KAAMqD,E,CAEtBC,YACEtD,KAAKuD,KAAK/B,KAAKxB,KAAKyB,M,CAEtB+B,WACE,MAAMH,EAAIrD,KAAKuD,KAAKE,MAEpB,OADIJ,IAAGrD,KAAKyB,MAAQ4B,GACbA,C,CAETK,YACM1D,KAAK8C,QACL9C,KAAKgD,MAAQ,IACfhD,KAAKgD,MAAQ,EACbhD,KAAKmD,OAAS,GAEZnD,KAAKgD,OAAShD,KAAKoC,OAAOW,QAAQ/D,SACpCgB,KAAKgD,MAAQhD,KAAKoC,OAAOW,QAAQ/D,OAAS,EAC1CgB,KAAKmD,OAASnD,KAAK8C,MAAMa,aAAa3E,Q,CAG1C4E,UAAUC,GAER,IADA7D,KAAKsD,YACAtD,KAAK0D,YAAa,GAAK1D,KAAKgD,QAAShD,KAAKgD,MAAOhD,KAAKmD,QAAwC,OAA7BW,EAAc9D,KAAK8C,YAAiB,EAASgB,EAAYH,aAAa3E,SAAW,EAAG,CACxJ,IAAI8E,EACJ,GAAID,IAAM,OAAO7D,KAAKoD,IAAK,C,CAE7B,OAAOpD,KAAKoD,IAAK,C,CAEnBW,WAAWF,GAET,IADA7D,KAAKsD,YACAtD,KAAK0D,YAAa1D,KAAKgD,MAAQhD,KAAKoC,OAAOW,QAAQ/D,SAAUgB,KAAKgD,MAAOhD,KAAKmD,OAAS,EAC1F,GAAIU,IAAM,OAAO7D,KAAKoD,IAAK,EAE7B,OAAOpD,KAAKoD,IAAK,C,CAEnBY,uBACE,OAAOhE,KAAK4D,WAAU,KACpB,IAAI5D,KAAK8C,MAAMmB,SAAYjE,KAAK8C,MAAMxC,MAEtC,OADAN,KAAKmD,OAASnD,KAAK8C,MAAMoB,gBAAgBlE,KAAKmD,OAAQnF,EAAUG,YAC5C,IAAhB6B,KAAKmD,aAAT,CAAkC,G,CAGtCgB,sBAKE,OAAOnE,KAAK4D,WAAU,KACpB,IAAI5D,KAAK8C,MAAMmB,QAEf,OADAjE,KAAKmD,OAASnD,KAAK8C,MAAMoB,gBAAgBlE,KAAKmD,OAAQnF,EAAUE,OACzD,CAAI,G,CAGfkG,yBACE,OAAOpE,KAAK4D,WAAU,KACpB,KAAI5D,KAAK8C,MAAMmB,SAAWjE,KAAK8C,MAAMuB,aAAerE,KAAK8C,MAAMxC,OAE/D,OADAN,KAAKmD,OAASnD,KAAK8C,MAAMoB,gBAAgBlE,KAAKmD,OAAQnF,EAAUE,OACzD,CAAI,G,CAGfoG,wBACE,OAAOtE,KAAK+D,YAAW,KACrB,IAAI/D,KAAK8C,MAAMmB,SAAYjE,KAAK8C,MAAMxC,MAEtC,OADAN,KAAKmD,OAASnD,KAAK8C,MAAMoB,gBAAgBlE,KAAKmD,OAAQnF,EAAUK,aAC5D2B,KAAKmD,SAAWnD,KAAK8C,MAAMxC,MAAMtB,aAArC,CAAwD,G,CAG5DuF,uBACE,OAAOvE,KAAK+D,YAAW,KACrB,IAAI/D,KAAK8C,MAAMmB,QAQf,OALAjE,KAAKmD,OAASnD,KAAK8C,MAAMoB,gBAAgBlE,KAAKmD,OAAQnF,EAAUC,OAKzD,CAAI,G,CAGfuG,0BACE,OAAOxE,KAAK+D,YAAW,KACrB,KAAI/D,KAAK8C,MAAMmB,SAAWjE,KAAK8C,MAAMuB,aAAerE,KAAK8C,MAAMxC,OAI/D,OADAN,KAAKmD,OAASnD,KAAK8C,MAAMoB,gBAAgBlE,KAAKmD,OAAQnF,EAAUC,OACzD,CAAI,G,CA1HfhB,YAAYmF,EAAQa,GAClBjD,KAAKoC,OAASA,EACdpC,KAAKuD,KAAO,GACZ,MAAMJ,OACJA,EAAMH,MACNA,GACEZ,EAAOqC,eAAexB,KAASA,EAAM,EAEzC,CACED,MAAO,EACPG,OAAQ,GAGV,CACEH,MAAOhD,KAAKoC,OAAOW,QAAQ/D,OAC3BmE,OAAQ,IAEVnD,KAAKmD,OAASA,EACdnD,KAAKgD,MAAQA,EACbhD,KAAKoD,IAAK,C,ECSd,SAASsB,EAAYC,GACnB,GAAY,MAARA,EAAc,MAAM,IAAIC,MAAM,mCAClC,OAAID,aAAgBrF,OAAe/C,EAAMsI,aACrClI,EAASgI,GAAcpI,EAAMuI,cAC7BH,IAASzF,KAAa3C,EAAMwI,WAC5BJ,IAASK,OAAezI,EAAM0I,aAC9B5H,MAAMC,QAAQqH,IAASA,IAAStH,MAAcd,EAAM2I,cACpD3I,EAAM4I,QAAUR,EAAKlF,qBAAqBlD,EAAM4I,OAAeR,EAC/DpI,EAAM4I,QAAUR,aAAgBpI,EAAM4I,OAAeR,EAAK1H,YAC1D0H,aAAgBS,SAAiB7I,EAAM8I,gBAC3CC,QAAQC,KAAK,0BAA2BZ,GACjCpI,EAAM4I,O,CAEf,SAASK,EAAc/I,GACrB,IAAKA,EAAM,MAAM,IAAImI,MAAM,0BAC3B,GAAIrI,EAAM4I,OAAQ,CAChB,GAAI1I,EAAKgD,qBAAqBlD,EAAM4I,OAAQ,MAAO,CACjDR,KAAMlI,GAQR,MAAMkI,KACJA,KACGc,GACDhJ,aAAgBF,EAAM4I,OAAS,CACjCR,KAAMlI,GACJK,EAASL,IAASA,EAAKkI,gBAAgBpI,EAAM4I,OAAS1I,EAAO,GACjE,GAAIkI,EAAM,CACR,MAAMe,EAAQf,EAAKA,KACnB,MAAO,IACFxH,EAAKwH,GAAM,CAACpH,EAAGC,KAAOA,EAAEmI,WAAW,OACtChB,KAAMA,EAAK1H,Y,MACXyI,KACGD,E,EAIT,OAAK3I,EAASL,GAGP,IACFA,GAJuB,CAC1BkI,KAAMlI,E,CAiCV,SAASmJ,EAAWnJ,GAClB,GAAIF,EAAM4I,QAAU1I,aAAgBF,EAAM4I,OAAQ,OAAO1I,EACzD,MAAMoJ,EAAQL,EAAc/I,GACtBqJ,EAAcpB,EAAYmB,EAAMlB,MACtC,IAAKmB,EAAa,MAAM,IAAIlB,MAAM,+CAAiDiB,EAAMlB,KAAO,4EAMhG,OALIkB,EAAMlB,OAASmB,UAAoBD,EAAMlB,KACzCkB,EAAMH,QACRG,EAAMlB,KAAOkB,EAAMH,aACZG,EAAMH,OAER,IAAII,EAAYD,E,CAEzBtJ,EAAMwJ,WAAaH,ECnHnB,MAAMI,EAQAC,qBACF,IAAI9F,EACJ,IACEA,EAAQH,KAAKkG,qBACP,CAAN,MAAM,CACR,OAAgB,MAAT/F,EAAgBA,EAAQH,KAAKM,MAAMtB,M,CAIxCmH,mBACF,IAAIzF,EACJ,IACEA,EAAMV,KAAKoG,mBACL,CAAN,MAAM,CACR,OAAc,MAAP1F,EAAcA,EAAMV,KAAKM,MAAMtB,M,CAIxCqH,OAAOlG,EAAOO,GACZ,GAAa,MAATP,GAAwB,MAAPO,IAAeP,IAAUH,KAAKiG,gBAAkBvF,IAAQV,KAAKmG,cAClF,IACEnG,KAAKsG,cAAcnG,EAAOO,EACpB,CAAN,MAAM,C,CAIN6F,eACF,OAAO,C,EAQXhK,EAAMiK,YAAcR,ECvCpB,MAAMS,UAAwBT,EAWxBU,kBACF,IAAIC,EAAuBC,EAAwBC,EACnD,OAAkK,OAA1JF,EAA6F,OAApEC,GAA0BC,EAAc7G,KAAK8G,OAAOC,kBAAuB,EAASH,EAAuBjH,KAAKkH,IAAwBF,EAAwBK,Q,CAI/LT,eACF,OAAOvG,KAAK8G,QAAU9G,KAAK0G,YAAYO,a,CAIzCC,WAAWC,GACTnH,KAAK8G,MAAMM,iBAAiB,UAAWpH,KAAKqH,YAC5CrH,KAAK8G,MAAMM,iBAAiB,QAASpH,KAAKsH,UAC1CtH,KAAK8G,MAAMM,iBAAiB,cAAepH,KAAKuH,gBAChDvH,KAAK8G,MAAMM,iBAAiB,iBAAkBpH,KAAKwH,mBACnDxH,KAAK8G,MAAMM,iBAAiB,OAAQD,EAASM,MAC7CzH,KAAK8G,MAAMM,iBAAiB,QAASD,EAASO,OAC9C1H,KAAK8G,MAAMM,iBAAiB,QAASD,EAASQ,OAC9C3H,KAAK8G,MAAMM,iBAAiB,OAAQD,EAASS,QAC7C5H,KAAK6H,UAAYV,C,CAEnBE,WAAWS,GACT,OAAI9H,KAAK6H,UAAU9F,OAtCT,KAsCkB+F,EAAEC,SAAqBD,EAAEE,WAAaF,EAAEG,SAAWH,EAAEI,UArCvE,KAqCmFJ,EAAEC,SAAqBD,EAAEI,UACpHJ,EAAEK,iBACKnI,KAAK6H,UAAU9F,KAAK+F,IAEzB9H,KAAK6H,UAAU/F,MA1CT,KA0CiBgG,EAAEC,UAAsBD,EAAEG,SAAWH,EAAEI,UAChEJ,EAAEK,iBACKnI,KAAK6H,UAAU/F,KAAKgG,SAExBA,EAAEM,aAAapI,KAAK6H,UAAUQ,gBAAgBP,G,CAErDP,eAAeO,GACb,MAAoB,gBAAhBA,EAAEQ,WAA+BtI,KAAK6H,UAAU/F,MAClDgG,EAAEK,iBACKnI,KAAK6H,UAAU/F,KAAKgG,IAET,gBAAhBA,EAAEQ,WAA+BtI,KAAK6H,UAAU9F,MAClD+F,EAAEK,iBACKnI,KAAK6H,UAAU9F,KAAK+F,SAF7B,C,CAKFN,kBAAkBM,GAChB9H,KAAK6H,UAAUf,MAAMgB,E,CAEvBR,SAASQ,GACFA,EAAEM,aAAapI,KAAK6H,UAAUf,MAAMgB,E,CAI3CS,eACEvI,KAAK8G,MAAM0B,oBAAoB,UAAWxI,KAAKqH,YAC/CrH,KAAK8G,MAAM0B,oBAAoB,QAASxI,KAAKsH,UAC7CtH,KAAK8G,MAAM0B,oBAAoB,cAAexI,KAAKuH,gBACnDvH,KAAK8G,MAAM0B,oBAAoB,iBAAkBxI,KAAKwH,mBACtDxH,KAAK8G,MAAM0B,oBAAoB,OAAQxI,KAAK6H,UAAUJ,MACtDzH,KAAK8G,MAAM0B,oBAAoB,QAASxI,KAAK6H,UAAUH,OACvD1H,KAAK8G,MAAM0B,oBAAoB,QAASxI,KAAK6H,UAAUF,OACvD3H,KAAK8G,MAAM0B,oBAAoB,OAAQxI,KAAK6H,UAAUD,QACtD5H,KAAK6H,UAAY,E,CApEnB5K,YAAY6J,GACV2B,QACAzI,KAAK8G,MAAQA,EACb9G,KAAKqH,WAAarH,KAAKqH,WAAWqB,KAAK1I,MACvCA,KAAKsH,SAAWtH,KAAKsH,SAASoB,KAAK1I,MACnCA,KAAKuH,eAAiBvH,KAAKuH,eAAemB,KAAK1I,MAC/CA,KAAKwH,kBAAoBxH,KAAKwH,kBAAkBkB,KAAK1I,K,EAiEzDzD,EAAMoM,gBAAkBlC,EC5ExB,MAAMmC,UAA6BnC,EAS7BP,4BACF,OAAoC,MAA7BlG,KAAK8G,MAAMb,eAAyBjG,KAAK8G,MAAMb,eAAiBjG,KAAKM,MAAMtB,M,CAIhFoH,0BACF,OAAOpG,KAAK8G,MAAMX,Y,CAIpBG,cAAcnG,EAAOO,GACnBV,KAAK8G,MAAM+B,kBAAkB1I,EAAOO,E,CAElCJ,YACF,OAAON,KAAK8G,MAAMxG,K,CAEhBA,UAAMA,GACRN,KAAK8G,MAAMxG,MAAQA,C,CAvBrBrD,YAAY6J,GACV2B,MAAM3B,GACN9G,KAAK8G,MAAQA,C,EAwBjBvK,EAAMoM,gBAAkBlC,EC9BxB,MAAMqC,UAAuCrC,EAEvCP,4BACF,MAAM6C,EAAO/I,KAAK0G,YACZsC,EAAYD,EAAKE,cAAgBF,EAAKE,eACtCC,EAAeF,GAAaA,EAAUE,aACtCC,EAAcH,GAAaA,EAAUG,YAC3C,OAAmB,MAAfA,GAAuC,MAAhBD,GAAwBA,EAAeC,EACzDD,EAEFC,C,CAIL/C,0BACF,MAAM2C,EAAO/I,KAAK0G,YACZsC,EAAYD,EAAKE,cAAgBF,EAAKE,eACtCC,EAAeF,GAAaA,EAAUE,aACtCC,EAAcH,GAAaA,EAAUG,YAC3C,OAAmB,MAAfA,GAAuC,MAAhBD,GAAwBA,EAAeC,EACzDD,EAEFC,C,CAIT7C,cAAcnG,EAAOO,GACnB,IAAKV,KAAK0G,YAAY0C,YAAa,OACnC,MAAMC,EAAQrJ,KAAK0G,YAAY0C,cAC/BC,EAAMC,SAAStJ,KAAK8G,MAAMyC,YAAcvJ,KAAK8G,MAAO3G,GACpDkJ,EAAMG,OAAOxJ,KAAK8G,MAAM2C,WAAazJ,KAAK8G,MAAOpG,GACjD,MAAMqI,EAAO/I,KAAK0G,YACZsC,EAAYD,EAAKE,cAAgBF,EAAKE,eACxCD,IACFA,EAAUU,kBACVV,EAAUW,SAASN,G,CAKnB/I,YACF,OAAON,KAAK8G,MAAM8C,aAAe,E,CAE/BtJ,UAAMA,GACRN,KAAK8G,MAAM8C,YAActJ,C,EAG7B/D,EAAMsN,+BAAiCf,ECwSvCvM,EAAMG,UAhVN,MA+BEoN,WAAWnF,GACT,IAAIoF,EACJ,OAAe,MAARpF,IAAiD,OAA/BoF,EAAe/J,KAAKoC,aAAkB,EAAS2H,EAAaD,WAAWnF,G,CAI9FA,WACF,OAAO3E,KAAKoC,OAAOuC,I,CAEjBA,SAAKA,GACP,GAAI3E,KAAK8J,WAAWnF,GAAO,OAC3B,KAAMA,aAAgBpI,EAAM4I,SAAWnF,KAAKoC,OAAOnF,cAAgByH,EAAYC,GAK7E,YAHA3E,KAAKoC,OAAO4H,cAAc,C,KACxBrF,IAIJ,MAAMvC,EAASuC,aAAgBpI,EAAM4I,OAASR,EAAOiB,EAAW,C,KAC9DjB,IAEFvC,EAAO6H,cAAgBjK,KAAKoC,OAAO6H,cACnCjK,KAAKoC,OAASA,C,CAIZ9B,YACF,OAAON,KAAKkK,M,CAEV5J,UAAM1D,GACJoD,KAAKM,QAAU1D,IACnBoD,KAAKoC,OAAO9B,MAAQ1D,EACpBoD,KAAKmK,cAAc,Q,CAIjBF,oBACF,OAAOjK,KAAKoK,c,CAEVH,kBAAcrN,GACZoD,KAAKiK,gBAAkBrN,IAC3BoD,KAAKoC,OAAO6H,cAAgBrN,EAC5BoD,KAAKmK,cAAc,Q,CAIjBE,oBACF,OAAOrK,KAAKsK,c,CAEVD,kBAAczN,GACZoD,KAAKqK,gBAAkBzN,IAC3BoD,KAAKoC,OAAOiI,cAAgBzN,EAC5BoD,KAAKmK,gBACLnK,KAAKuK,c,CAIHC,iBACF,OAAOxK,KAAKoC,OAAOoI,U,CAEjBA,eAAWC,GACTzK,KAAKoC,OAAOsI,iBAAiBD,KACjCzK,KAAKoC,OAAOoI,WAAaC,EACzBzK,KAAKmK,cAAc,Q,CAIjBxG,mBACF,OAAO3D,KAAKoC,OAAOuB,Y,CAIrBgH,cACE3K,KAAKxD,GAAG0K,WAAW,CACjBmB,gBAAiBrI,KAAK4K,eACtB9D,MAAO9G,KAAKsH,SACZG,KAAMzH,KAAK6K,QACXnD,MAAO1H,KAAK8K,SACZnD,MAAO3H,KAAK+K,SACZnD,OAAQ5H,KAAKgL,UACblJ,KAAM9B,KAAKiL,QACXlJ,KAAM/B,KAAKkL,S,CAKfC,gBACMnL,KAAKxD,IAAIwD,KAAKxD,GAAG+L,c,CAIvB6C,WAAWC,EAAIvD,GACb,MAAMwD,EAAYtL,KAAKuL,WAAWF,GAC7BC,GACLA,EAAUE,SAAQC,GAAKA,EAAE3D,I,CAIvB7B,qBACF,OAAOjG,KAAK0L,gBAAkB1L,KAAK2L,mBAAqB3L,KAAKxD,GAAGyJ,c,CAI9DhG,gBACF,OAAOD,KAAK0L,gBAAkB1L,KAAK2L,mBAAqB3L,KAAKxD,GAAG2J,Y,CAE9DlG,cAAUgD,GACPjD,KAAKxD,IAAOwD,KAAKxD,GAAG+J,WACzBvG,KAAKxD,GAAG6J,OAAOpD,EAAKA,GACpBjD,KAAK4K,iB,CAIPA,iBAEM5K,KAAK2D,eAAiB3D,KAAKxD,GAAG8D,OAChCgF,QAAQC,KAAK,2GAEfvF,KAAK4L,WAAa,CAChBzL,MAAOH,KAAKiG,eACZvF,IAAKV,KAAKC,U,CAKd4L,cACE7L,KAAKoC,OAAO9B,MAAQN,KAAKxD,GAAG8D,MAC5BN,KAAKkK,OAASlK,KAAKoC,OAAO9B,K,CAI5B6J,cAAclK,GACZ,MAAM6L,EAAmB9L,KAAKoC,OAAO6H,cAC/B8B,EAAW/L,KAAKoC,OAAO9B,MACvB0L,EAAmBhM,KAAKoC,OAAOiI,cAC/B4B,EAAkBjM,KAAK2D,aACvBuI,EAAYlM,KAAKiK,gBAAkB6B,GAAoB9L,KAAKM,QAAUyL,GAAY/L,KAAKsK,iBAAmB0B,EAChHhM,KAAKoK,eAAiB0B,EACtB9L,KAAKkK,OAAS6B,EACd/L,KAAKsK,eAAiB0B,EAClBhM,KAAKxD,GAAG8D,QAAU2L,IAAiBjM,KAAKxD,GAAG8D,MAAQ2L,GACrC,SAAdhM,EAAsBD,KAAKuK,cAAoC,MAAbtK,IAAmBD,KAAKC,UAAYA,GACtFiM,GAAWlM,KAAKmM,oBACfnM,KAAKoM,mBAAqBF,IAAalM,KAAKqM,QAAQ9K,SAAUvB,KAAKqM,QAAQ7K,KAAK,CACnFyI,cAAe6B,EACf9C,UAAW,CACT7I,MAAOH,KAAKiG,eACZvF,IAAKV,KAAKC,Y,CAMhB+J,cAAcvN,GACZ,MAAMkI,KACJA,KACG2H,GACD7P,EAEE8P,GAAcvM,KAAK8J,WAAWnF,GAC9B6H,EAAaxM,KAAKoC,OAAOqK,iBAAiBH,GAC5CC,IAAYvM,KAAK2E,KAAOA,GACxB6H,GAAYxM,KAAKoC,OAAO4H,cAAcsC,IAEtCC,GAAcC,IAAYxM,KAAKmK,e,CAIrCuC,aAAazM,GACM,MAAbA,IACJD,KAAKC,UAAYA,EAGjBD,KAAK2M,mBAAmB1M,G,CAI1B0M,mBAAmB1M,GACjBD,KAAK4M,qBACL5M,KAAK2L,mBAAqB1L,EAC1BD,KAAK0L,gBAAkBmB,YAAW,KAC3B7M,KAAKxD,KACVwD,KAAKC,UAAYD,KAAK2L,mBACtB3L,KAAK4M,qBAAoB,GACxB,G,CAILT,oBACEnM,KAAKoL,WAAW,SAAUpL,KAAK8M,aAC3B9M,KAAKoC,OAAO2K,YAAY/M,KAAKoL,WAAW,WAAYpL,KAAK8M,Y,CAI/DF,qBACM5M,KAAK0L,kBACPsB,aAAahN,KAAK0L,wBACX1L,KAAK0L,gB,CAKhBnB,cACEvK,KAAKC,UAAYD,KAAKoC,OAAO8B,gBAAgBlE,KAAKoC,OAAO8B,gBAAgBlE,KAAKC,UAAWjC,EAAUE,M,CAIrG+O,sBACMjN,KAAKiG,iBAAmBjG,KAAKC,WACjCD,KAAKuK,a,CAIP2C,GAAG7B,EAAI8B,GAGL,OAFKnN,KAAKuL,WAAWF,KAAKrL,KAAKuL,WAAWF,GAAM,IAChDrL,KAAKuL,WAAWF,GAAI7J,KAAK2L,GAClBnN,I,CAIToN,IAAI/B,EAAI8B,GACN,IAAKnN,KAAKuL,WAAWF,GAAK,OAAOrL,KACjC,IAAKmN,EAEH,cADOnN,KAAKuL,WAAWF,GAChBrL,KAET,MAAMqN,EAASrN,KAAKuL,WAAWF,GAAIiC,QAAQH,GAE3C,OADIE,GAAU,GAAGrN,KAAKuL,WAAWF,GAAIkC,OAAOF,EAAQ,GAC7CrN,I,CAITsH,SAASQ,GACP9H,KAAK8M,YAAchF,EACnB9H,KAAK4M,qBACL,MAAMY,EAAU,IAAI5N,EAAc,CAEhCU,MAAON,KAAKxD,GAAG8D,MACfL,UAAWD,KAAKC,UAEhBU,SAAUX,KAAK2D,aACfzD,aAAcF,KAAK4L,aAEf6B,EAAczN,KAAKoC,OAAOiI,cAC1BlH,EAASnD,KAAKoC,OAAOmL,OAAOC,EAAQ3N,eAAgB2N,EAAQ5M,QAAQ5B,OAAQwO,EAAQnN,SAAUmN,EAAQxM,gBAAiB,CAC3H8F,OAAO,EACP4G,KAAK,IACJvK,OAIGnC,EAAkByM,IAAgBzN,KAAKoC,OAAOiI,cAAgBmD,EAAQxM,gBAAkBhD,EAAUC,KACxG,IAAIgC,EAAYD,KAAKoC,OAAO8B,gBAAgBsJ,EAAQ3N,eAAiBsD,EAAQnC,GACzEA,IAAoBhD,EAAUC,OAAMgC,EAAYD,KAAKoC,OAAO8B,gBAAgBjE,EAAWjC,EAAUC,OACrG+B,KAAKmK,cAAclK,UACZD,KAAK8M,W,CAId9B,YACMhL,KAAK2D,eAAiB3D,KAAKxD,GAAG8D,OAChCN,KAAK6L,cAEP7L,KAAKoC,OAAOuL,WACZ3N,KAAKmK,gBACLnK,KAAK4K,gB,CAIPC,QAAQQ,GACNA,EAAGlD,iBACHkD,EAAGuC,iB,CAIL7C,SAASM,GACPrL,KAAKiN,qB,CAIPnC,SAASO,GACPrL,KAAKiN,qB,CAEPhC,UACEjL,KAAK6N,mBAAmB7N,KAAKqM,QAAQvK,O,CAEvCoJ,UACElL,KAAK6N,mBAAmB7N,KAAKqM,QAAQtK,O,CAEvC8L,mBAAmBpM,GACZA,IACLzB,KAAKoM,kBAAmB,EACxBpM,KAAKiK,cAAgBxI,EAAMwI,cAC3BjK,KAAKxD,GAAG6J,OAAO5E,EAAMuH,UAAU7I,MAAOsB,EAAMuH,UAAUtI,KACtDV,KAAK4K,iBACL5K,KAAKoM,kBAAmB,E,CAI1B0B,UACE9N,KAAKmL,gBACLnL,KAAKuL,WAAWvM,OAAS,SAClBgB,KAAKxD,E,CAtUdS,YAAYT,EAAIC,GACduD,KAAKxD,GAAKA,aAAcwJ,EAAcxJ,EAAKA,EAAGuR,mBAAoC,UAAfvR,EAAGwR,SAAsC,aAAfxR,EAAGwR,QAAyB,IAAIlF,EAA+BtM,GAAM,IAAIoM,EAAqBpM,GAC3LwD,KAAKoC,OAASwD,EAAWnJ,GACzBuD,KAAKuL,WAAa,GAClBvL,KAAKkK,OAAS,GACdlK,KAAKoK,eAAiB,GACtBpK,KAAKsK,eAAiB,GACtBtK,KAAKqM,QAAU,IAAIlL,EACnBnB,KAAK4K,eAAiB5K,KAAK4K,eAAelC,KAAK1I,MAC/CA,KAAKsH,SAAWtH,KAAKsH,SAASoB,KAAK1I,MACnCA,KAAKgL,UAAYhL,KAAKgL,UAAUtC,KAAK1I,MACrCA,KAAK6K,QAAU7K,KAAK6K,QAAQnC,KAAK1I,MACjCA,KAAK+K,SAAW/K,KAAK+K,SAASrC,KAAK1I,MACnCA,KAAK8K,SAAW9K,KAAK8K,SAASpC,KAAK1I,MACnCA,KAAKiL,QAAUjL,KAAKiL,QAAQvC,KAAK1I,MACjCA,KAAKkL,QAAUlL,KAAKkL,QAAQxC,KAAK1I,MACjCA,KAAKuK,YAAcvK,KAAKuK,YAAY7B,KAAK1I,MACzCA,KAAKiN,oBAAsBjN,KAAKiN,oBAAoBvE,KAAK1I,MACzDA,KAAK2K,cAGL3K,KAAK6L,cACL7L,KAAKgL,W,GCrCT,MAAMiD,EASJC,iBAAiBC,GACf,OAAO9Q,MAAMC,QAAQ6Q,GAAQA,EAAO,CAACA,EAAM,IAAIF,E,CAYjD3L,UAAUkL,GAKR,OAJAxN,KAAKK,UAAYmN,EAAQnN,SACzBL,KAAKoO,aAAeZ,EAAQY,YAC5BpO,KAAKqO,WAAab,EAAQa,UAC1BrO,KAAKsO,KAAOtO,KAAKsO,MAAQd,EAAQc,KAC1BtO,I,CAILmD,aACF,OAAOnD,KAAKqO,UAAYrO,KAAKK,SAASrB,M,CAEpCuP,eACF,OAAOC,QAAQxO,KAAKoO,cAAgBpO,KAAKsO,I,CAvB3CrR,YAAYuQ,GACV9P,OAAOuD,OAAOjB,KAAM,CAClBK,SAAU,GACV+N,YAAa,GACbC,UAAW,EACXC,MAAM,GACLd,E,EAoBPjR,EAAMkS,cAAgBR,EC7BtB,MAAMS,EAmCJ1E,cAAcvN,GACPuD,KAAKyM,iBAAiBhQ,IAC3BuD,KAAK2O,iBAAiB3O,KAAK4O,QAAQlG,KAAK1I,KAAMvD,G,CAIhDmS,QAAQnS,GACNiB,OAAOuD,OAAOjB,KAAMvD,E,CAIlBgF,YACF,MAAO,CACLyI,OAAQlK,KAAKM,MACbgK,eAAgBtK,KAAKqK,c,CAGrB5I,UAAMA,GACRzB,KAAKkK,OAASzI,EAAMyI,M,CAItB2E,QACE7O,KAAKkK,OAAS,E,CAEZ5J,YACF,OAAON,KAAKkK,M,CAEV5J,UAAMA,GACRN,KAAK8O,QAAQxO,EAAO,CAClBwG,OAAO,G,CAKXgI,QAAQxO,EAAOyO,QACC,IAAVA,IACFA,EAAQ,CACNjI,OAAO,IAGX9G,KAAK6O,QACL7O,KAAKqC,OAAO/B,EAAOyO,EAAO,IAC1B/O,KAAK2N,U,CAEH1D,oBACF,OAAOjK,KAAKM,K,CAEV2J,kBAAc3J,GAChBN,KAAK8O,QAAQxO,EAAO,G,CAElBkK,iBACF,OAAOxK,KAAKgP,MAAQhP,KAAKgP,MAAMhP,KAAKM,MAAON,MAAQA,KAAKiK,a,CAEtDO,eAAWlK,GACTN,KAAKiP,OACPjP,KAAKM,MAAQN,KAAKiP,OAAO3O,EAAON,MAEhCA,KAAKiK,cAAgBpN,OAAOyD,E,CAK5B+J,oBACF,OAAOrK,KAAKkP,aAAa,EAAGlP,KAAK2D,aAAa3E,OAAQ,CACpD0O,KAAK,G,CAGLrD,kBAAc/J,GAChBN,KAAK8O,QAAQxO,EAAO,CAClBoN,KAAK,G,CAGL/J,mBACF,OAAO3D,KAAKM,K,CAEVyM,iBACF,OAAO,C,CAELoC,eACF,OAAOnP,KAAK+M,U,CAId7I,gBAAgBjE,EAAW1B,GACzB,OAAO0B,C,CAETmP,oBAAoBC,EAASC,GAO3B,YANgB,IAAZD,IACFA,EAAU,QAEE,IAAVC,IACFA,EAAQtP,KAAK2D,aAAa3E,QAErBc,KAAKC,IAAIC,KAAK2D,aAAa3E,OAAQsQ,EAAQD,E,CAIpDH,aAAaG,EAASC,EAAOP,GAO3B,YANgB,IAAZM,IACFA,EAAU,QAEE,IAAVC,IACFA,EAAQtP,KAAK2D,aAAa3E,QAErBgB,KAAK2D,aAAazC,MAAMmO,EAASC,E,CAI1CC,YAAYF,EAASC,GAOnB,YANgB,IAAZD,IACFA,EAAU,QAEE,IAAVC,IACFA,EAAQtP,KAAK2D,aAAa3E,QAErB,IAAIiD,EAAsBjC,KAAKkP,aAAaG,EAASC,GAAQD,E,CAItEG,WAAWzO,GAET,OADIpE,EAASoE,KAAOA,EAAO,IAAIkB,EAAsBpF,OAAOkE,KACrDA,EAAKoB,SAASnC,K,CAIvByP,eAAeC,EAAIX,GACjB,OAAKW,GACL1P,KAAKkK,QAAUwF,EACR,IAAIzB,EAAc,CACvB5N,SAAUqP,EACVtB,YAAasB,KAJC,IAAIzB,C,CAStB0B,YAAYD,EAAIX,EAAOa,QACP,IAAVb,IACFA,EAAQ,IAEV,MAAMc,EAAkB7P,KAAKyB,MAC7B,IAAI+L,EAGJ,IAFCkC,EAAIlC,GAAWxN,KAAK8P,cAAcJ,EAAIX,GACnCW,IAAIlC,EAAUA,EAAQlL,UAAUtC,KAAKyP,eAAeC,EAAIX,KACxDvB,EAAQnN,SAAU,CACpB,IAAI0P,EACAC,GAAsC,IAA3BhQ,KAAKiQ,WAAWlB,GAC/B,GAAIiB,GAAyB,MAAbJ,EAAmB,CAEjC,MAAMM,EAAkBlQ,KAAKyB,MAC7B,IAAuB,IAAnBzB,KAAKmQ,UAAoB,CAC3BJ,EAAiBH,EAAUnO,MAC3B,IAAK,IAAI1C,EAAI,EAAGA,EAAIyO,EAAQY,YAAYpP,SAAUD,EAChD6Q,EAAUlN,QAAQ1C,KAAK2D,aAAa3E,OAASwO,EAAQa,U,CAGzD,IAAI+B,EAAcpQ,KAAKwP,WAAWI,GAIlC,GAHAI,EAAWI,EAAYhC,YAAYpP,SAAW4Q,EAAUpQ,WAAWR,SAG7DgR,GAAYI,EAAY/P,UAAgC,UAAnBL,KAAKmQ,WAAuB,CACrEnQ,KAAKyB,MAAQyO,EACbH,EAAiBH,EAAUnO,MAC3B,IAAK,IAAI1C,EAAI,EAAGA,EAAIyO,EAAQY,YAAYpP,SAAUD,EAChD6Q,EAAUjO,QAEZyO,EAAcpQ,KAAKwP,WAAWI,GAC9BI,EAAWI,EAAYhC,YAAYpP,SAAW4Q,EAAUpQ,WAAWR,M,CAIjEgR,GAAYI,EAAY/P,WAAUL,KAAKyB,MAAQyO,E,CAIhDF,IACHxC,EAAU,IAAIS,EACdjO,KAAKyB,MAAQoO,EACTD,GAAaG,IAAgBH,EAAUnO,MAAQsO,G,CAGvD,OAAOvC,C,CAITjL,qBACE,OAAO,IAAI0L,C,CAIboC,eACE,OAAO,IAAIpC,C,CAIb5L,OAAOzF,EAAKmS,EAAOhO,GACjB,IAAKpE,EAASC,GAAM,MAAM,IAAIgI,MAAM,0BACpC,MAAMgL,EAAYjT,EAASoE,GAAQ,IAAIkB,EAAsBpF,OAAOkE,IAASA,EAE7E,IAAIyM,EADS,MAATuB,GAAiBA,EAAMhO,OAAMgO,EAAMuB,iBAAmBtQ,KAAKyB,QAE9D7E,EAAK4Q,GAAWxN,KAAKuQ,UAAU3T,EAAKmS,GACrC,IAAK,IAAIyB,EAAK,EAAGA,EAAK5T,EAAIoC,SAAUwR,EAAI,CACtC,MAAMC,EAAIzQ,KAAK2P,YAAY/S,EAAI4T,GAAKzB,EAAOa,GAC3C,IAAKa,EAAErC,cAAgBpO,KAAK0Q,cAAc9T,EAAI4T,GAAKzB,EAAOa,GAAY,MACtEpC,EAAQlL,UAAUmO,E,CAapB,QAXoB,IAAfzQ,KAAK2Q,OAAiC,WAAf3Q,KAAK2Q,QAAgC,MAAT5B,GAAiBA,EAAMjI,OAASlK,GACtF4Q,EAAQlL,UAAUtC,KAAKqQ,gBAIR,MAAbT,IACFpC,EAAQa,WAAarO,KAAKwP,WAAWI,GAAWvB,WAK3Cb,C,CAEToD,OAAOvB,EAASC,GAQd,YAPgB,IAAZD,IACFA,EAAU,QAEE,IAAVC,IACFA,EAAQtP,KAAK2D,aAAa3E,QAE5BgB,KAAKkK,OAASlK,KAAK2D,aAAazC,MAAM,EAAGmO,GAAWrP,KAAK2D,aAAazC,MAAMoO,GACrE,IAAIrB,C,CAIbU,iBAAiB9K,GACf,GAAI7D,KAAK6Q,cAAgB7Q,KAAK8Q,aAAc,OAAOjN,IACnD7D,KAAK6Q,aAAc,EACnB,MAAME,EAAW/Q,KAAKqK,cAChB/J,EAAQN,KAAKM,MACb0Q,EAAMnN,IAQZ,OAPA7D,KAAKqK,cAAgB0G,EAEjB/Q,KAAKM,OAASN,KAAKM,QAAUA,GAAuC,IAA9BA,EAAMgN,QAAQtN,KAAKM,SAC3DN,KAAKqC,OAAO/B,EAAMY,MAAMlB,KAAK2D,aAAa3E,QAAS,GAAI,IACvDgB,KAAK2N,mBAEA3N,KAAK6Q,YACLG,C,CAETC,YAAYpN,GACV,GAAI7D,KAAKkR,YAAclR,KAAK8Q,aAAc,OAAOjN,EAAG7D,MACpDA,KAAKkR,WAAY,EACjB,MAAMzP,EAAQzB,KAAKyB,MACbuP,EAAMnN,EAAG7D,MAGf,OAFAA,KAAKyB,MAAQA,SACNzB,KAAKkR,UACLF,C,CAETN,cAAchB,EAAIX,EAAOa,GACvB,OAAOpB,QAAQxO,KAAKmR,Y,CAItBZ,UAAU3T,EAAKmS,GAIb,YAHc,IAAVA,IACFA,EAAQ,IAEHd,EAAcmD,UAAUpR,KAAKqR,QAAUrR,KAAKqR,QAAQzU,EAAKoD,KAAM+O,GAASnS,E,CAIjFkT,cAAclT,EAAKmS,GAIjB,YAHc,IAAVA,IACFA,EAAQ,IAEHd,EAAcmD,UAAUpR,KAAKsR,YAActR,KAAKsR,YAAY1U,EAAKoD,KAAM+O,GAASnS,E,CAIzFqT,WAAWlB,GACT,QAAS/O,KAAKuR,UAAYvR,KAAKuR,SAASvR,KAAKM,MAAON,KAAM+O,OAAa/O,KAAKwR,QAAUxR,KAAKwR,OAAOvB,WAAWlB,G,CAI/GpB,WACM3N,KAAK4H,QAAQ5H,KAAK4H,OAAO5H,KAAKM,MAAON,K,CAE3CuN,OAAOpN,EAAOsR,EAAapR,EAAUW,EAAiB+N,QAC5B,IAApB/N,IACFA,EAAkBhD,EAAUC,WAEhB,IAAV8Q,IACFA,EAAQ,CACNjI,OAAO,IAGX,MAAM4K,EAAUvR,EAAQsR,EAClB1Q,EAAOf,KAAKuP,YAAYmC,GACxBC,GAA6B,IAAf3R,KAAK2Q,OAAiC,WAAf3Q,KAAK2Q,MAChD,IAAIlD,EACAkE,IACF3Q,EAAkB1C,EAAe0C,GACjCyM,EAAczN,KAAKkP,aAAa,EAAGwC,EAAS,CAC1ChE,KAAK,KAGT,IAAI7N,EAAiBM,EACrB,MAAMqN,EAAU,IAAIS,EAUpB,GAPIjN,IAAoBhD,EAAUC,OAChC4B,EAAiBG,KAAKkE,gBAAgB/D,EAAOsR,EAAc,GAAe,IAAVtR,IAAgBwR,EAAc3T,EAAUC,KAAO+C,GAG/GwM,EAAQa,UAAYxO,EAAiBM,GAEvCqN,EAAQlL,UAAUtC,KAAK4Q,OAAO/Q,IAC1B8R,GAAe3Q,IAAoBhD,EAAUC,MAAQwP,IAAgBzN,KAAKqK,cAC5E,GAAIrJ,IAAoBhD,EAAUG,WAAY,CAC5C,IAAIyT,EACJ,KAAOnE,IAAgBzN,KAAKqK,gBAAkBuH,EAAY5R,KAAK2D,aAAa3E,SAC1EwO,EAAQlL,UAAU,IAAI2L,EAAc,CAClCI,WAAW,KACT/L,UAAUtC,KAAK4Q,OAAOgB,EAAY,G,MAE/B5Q,IAAoBhD,EAAUK,aACvC0C,EAAK2B,UAGT,OAAO8K,EAAQlL,UAAUtC,KAAKqC,OAAOhC,EAAU0O,EAAOhO,G,CAExD+I,WAAWnF,GACT,OAAO3E,KAAK2E,OAASA,C,CAEvB8H,iBAAiBhQ,GACf,OAAQiC,EAAesB,KAAMvD,E,CAE/BiO,iBAAiBpK,GACf,MAAMuR,EAAO7R,KAAKwK,WAClB,OAAOlK,IAAUuR,GAAQnD,EAAOoD,aAAarU,SAAS6C,IAAUoO,EAAOoD,aAAarU,SAASoU,MAAU7R,KAAKiP,QAASjP,KAAKiP,OAAO3O,EAAON,QAAUA,KAAKiP,OAAOjP,KAAKwK,WAAYxK,K,CA1VjL/C,YAAYR,GACVuD,KAAKkK,OAAS,GACdlK,KAAK4O,QAAQ,IACRF,EAAOqD,YACPtV,IAELuD,KAAK8Q,cAAe,C,EAuVxBpC,EAAOqD,SAAW,CAChBZ,aAAa,GAEfzC,EAAOoD,aAAe,MAACE,EAAW,KAAM,IACxCzV,EAAM4I,OAASuJ,ECjYf,MAAMuD,EAaJzS,WACE,OAAOQ,KAAKkS,OAAOC,IAAItV,QAAQuV,KAAK,G,CAEtClQ,OAAOmQ,GACL,IAAKxV,OAAOwV,GAAY,OACxBA,EAAY1V,EAAS0V,GAAa,IAAIpQ,EAAsBpF,OAAOwV,IAAcA,EACjF,MAAMC,EAAYtS,KAAKkS,OAAOlS,KAAKkS,OAAOlT,OAAS,GAC7CuT,EAAaD,IAEnBA,EAAU7P,OAAS4P,EAAU5P,MAA0B,MAAlB4P,EAAU5P,OAE/C4P,EAAU7P,OAAS8P,EAAU9P,KAAO8P,EAAU9S,WAAWR,OACzD,GAAIqT,aAAqBpQ,EAEnBsQ,EAEFD,EAAUpQ,OAAOmQ,EAAU7S,YAG3BQ,KAAKkS,OAAO1Q,KAAK6Q,QAEd,GAAIA,aAAqBJ,EAAmB,CACjD,GAAsB,MAAlBI,EAAU5P,KAAc,CAE1B,IAAI+P,EACJ,KAAOH,EAAUH,OAAOlT,QAAsC,MAA5BqT,EAAUH,OAAO,GAAGzP,MACpD+P,EAAiBH,EAAUH,OAAOvQ,QAClC6Q,EAAehQ,MAAQ6P,EAAU7P,KACjCxC,KAAKkC,OAAOsQ,E,CAKZH,EAAU7S,aAEZ6S,EAAU5P,KAAO4P,EAAUI,WAC3BzS,KAAKkS,OAAO1Q,KAAK6Q,G,EAIvBlQ,SAASC,GACP,KAAMA,aAAkB7F,EAAMuI,eAAgB,CAE5C,OADa,IAAI7C,EAAsBjC,KAAKR,YAChC2C,SAASC,E,CAEvB,MAAMoL,EAAU,IAAIS,EACpB,IAAK,IAAIuC,EAAK,EAAGA,EAAKxQ,KAAKkS,OAAOlT,SAAUwR,EAAI,CAC9C,MAAMkC,EAAQ1S,KAAKkS,OAAO1B,GACpBmC,EAAgBvQ,EAAOqC,eAAerC,EAAOuB,aAAa3E,QAC1DyD,EAAOiQ,EAAMjQ,KACnB,IAAImQ,EAWJ,GAVY,MAARnQ,KAEHkQ,GAAiBA,EAAc3P,OAASP,MACnCiQ,aAAiBT,GAErB7P,EAAOyQ,OAAOvF,QAAQ7K,IAAS,IAC7B+K,EAAQlL,UAAUF,EAAOG,mBAAmBE,IAE9CmQ,EAAaF,aAAiBT,GAAqB7P,EAAOW,QAAQN,IAEhEmQ,EAAY,CACd,MAAMxC,EAAcwC,EAAWpD,WAAWkD,GAC1ClF,EAAQlL,UAAU8N,GAGlB,MAAM0C,EAAcJ,EAAMlT,WAAW0B,MAAMkP,EAAYhC,YAAYpP,QAC/D8T,GAAatF,EAAQlL,UAAUF,EAAOC,OAAOyQ,EAAa,CAC5D/R,MAAM,I,MAGRyM,EAAQlL,UAAUF,EAAOC,OAAOqQ,EAAMlT,WAAY,CAChDuB,MAAM,I,CAIZ,OAAOyM,C,CAEL/L,YACF,MAAO,CACLyQ,OAAQlS,KAAKkS,OAAOC,KAAIY,GAAKA,EAAEtR,QAC/Be,KAAMxC,KAAKwC,KACXC,KAAMzC,KAAKyC,KACXgQ,WAAYzS,KAAKyS,W,CAGjBhR,UAAMA,GACR,MAAMyQ,OACJA,KACGc,GACDvR,EACJ/D,OAAOuD,OAAOjB,KAAMgT,GACpBhT,KAAKkS,OAASA,EAAOC,KAAIc,IACvB,MAAMP,EAAQ,WAAYO,EAAS,IAAIhB,EAAsB,IAAIhQ,EAEjE,OADAyQ,EAAMjR,MAAQwR,EACPP,CAAK,G,CAGhBhQ,QAAQC,GACN,IAAK3C,KAAKkS,OAAOlT,QAAuB,MAAb2D,GAAqB3C,KAAKwC,MAAQG,EAAW,MAAO,GAC/E,MAAMuQ,EAA6B,MAAbvQ,EAAoBA,EAAY3C,KAAKwC,KAAOG,EAClE,IAAI6N,EAAK,EACT,KAAOA,EAAKxQ,KAAKkS,OAAOlT,QAAQ,CAC9B,MAAM0T,EAAQ1S,KAAKkS,OAAO1B,GACpB5N,EAAY8P,EAAMhQ,QAAQwQ,GAChC,GAAIR,EAAMlT,WAAY,CAGpB,IAAKoD,EAAW,QACd4N,C,MAGFxQ,KAAKkS,OAAO3E,OAAOiD,EAAI,GAEzB,GAAI5N,EAAW,OAAOA,C,CAExB,MAAO,E,CAETjB,QACE,IAAK3B,KAAKkS,OAAOlT,OAAQ,MAAO,GAChC,IAAIwR,EAAKxQ,KAAKkS,OAAOlT,OAAS,EAC9B,KAAO,GAAKwR,GAAI,CACd,MAAMkC,EAAQ1S,KAAKkS,OAAO1B,GACpB5N,EAAY8P,EAAM/Q,QACxB,GAAI+Q,EAAMlT,WAAY,CAGpB,IAAKoD,EAAW,QACd4N,C,MAGFxQ,KAAKkS,OAAO3E,OAAOiD,EAAI,GAEzB,GAAI5N,EAAW,OAAOA,C,CAExB,MAAO,E,CAjJT3F,YAAYiV,EAAQ1P,QACH,IAAX0P,IACFA,EAAS,SAEE,IAAT1P,IACFA,EAAO,GAETxC,KAAKkS,OAASA,EACdlS,KAAKwC,KAAOA,C,ECXhB,MAAM2Q,EAkBA7S,YACF,OAAON,KAAKkK,M,CAEVD,oBACF,OAAOjK,KAAKoT,YAAcpT,KAAKM,MAAQ,E,CAErC+J,oBACF,OAAOrK,KAAKqT,YAAcrT,KAAKM,MAAQ,E,CAErCqD,mBACF,OAAO3D,KAAKM,K,CAEduO,QACE7O,KAAKqT,aAAc,EACnBrT,KAAKkK,OAAS,E,CAEhB0G,OAAOvB,EAASC,GASd,YARgB,IAAZD,IACFA,EAAU,QAEE,IAAVC,IACFA,EAAQtP,KAAKkK,OAAOlL,QAEtBgB,KAAKkK,OAASlK,KAAKkK,OAAOhJ,MAAM,EAAGmO,GAAWrP,KAAKkK,OAAOhJ,MAAMoO,GAC3DtP,KAAKkK,SAAQlK,KAAKqT,aAAc,GAC9B,IAAIpF,C,CAEb/J,gBAAgBjE,EAAW1B,QACP,IAAdA,IACFA,EAAYP,EAAUC,MAExB,MACMqV,EAAStT,KAAKkK,OAAOlL,OAC3B,OAAQT,GACN,KAAKP,EAAUE,KACf,KAAKF,EAAUG,WACb,OALW,EASb,QACE,OAAOmV,E,CAGblE,oBAAoBC,EAASC,GAO3B,YANgB,IAAZD,IACFA,EAAU,QAEE,IAAVC,IACFA,EAAQtP,KAAKkK,OAAOlL,QAEfgB,KAAKqT,YAAc/D,EAAQD,EAAU,C,CAE9CH,aAAaG,EAASC,EAAOP,GAU3B,YATgB,IAAZM,IACFA,EAAU,QAEE,IAAVC,IACFA,EAAQtP,KAAKkK,OAAOlL,aAER,IAAV+P,IACFA,EAAQ,IAEHA,EAAMrB,KAAO1N,KAAKqT,aAAerT,KAAKkK,OAAOhJ,MAAMmO,EAASC,IAAU,E,CAE3EvC,iBACF,OAAO,C,CAELoC,eACF,OAAOX,QAAQxO,KAAKkK,O,CAEtByF,YAAYD,EAAIX,GAId,QAHc,IAAVA,IACFA,EAAQ,IAEN/O,KAAKmP,SAAU,OAAO,IAAIlB,EAC9B,MAAMsF,GAA6B,IAAfvT,KAAK2Q,OAAiC,WAAf3Q,KAAK2Q,MAE1C6C,EADWxT,KAAKyT,OAAS/D,IACC1P,KAAKoT,aAAerE,EAAMjI,OAASiI,EAAMrB,QAAUqB,EAAMrB,MAAQ6F,KAAiBxE,EAAMhO,KAClHyM,EAAU,IAAIS,EAAc,CAChC5N,SAAUL,KAAKyT,KACfrF,YAAaoF,EAAaxT,KAAKyT,KAAO,KAIxC,OAFAzT,KAAKkK,OAASlK,KAAKyT,KACnBzT,KAAKqT,YAAcG,IAAezE,EAAMrB,KAAOqB,EAAMjI,OAC9C0G,C,CAET6C,eACE,OAAOrQ,KAAK2P,YAAY3P,KAAKyT,KAAM,CACjC1S,MAAM,G,CAGVwB,qBACE,MAAMiL,EAAU,IAAIS,EACpB,OAAIjO,KAAKmP,WACTnP,KAAKkK,OAASsD,EAAQnN,SAAWL,KAAKyT,MADZjG,C,CAI5B+B,cACE,OAAO,IAAItN,EAAsB,G,CAEnCuN,WAAWzO,GAET,OADIpE,EAASoE,KAAOA,EAAO,IAAIkB,EAAsBpF,OAAOkE,KACrDA,EAAKoB,SAASnC,K,CAEvBqC,OAAOzF,EAAKmS,EAAOhO,GACjB,MAAMyM,EAAUxN,KAAK2P,YAAY/S,EAAI,GAAImS,GAIzC,OAHY,MAARhO,IACFyM,EAAQa,WAAarO,KAAKwP,WAAWzO,GAAMsN,WAEtCb,C,CAETG,WAAW,CACPlM,YACF,MAAO,CACLyI,OAAQlK,KAAKkK,OACbI,eAAgBtK,KAAKqK,c,CAGrB5I,UAAMA,GACRzB,KAAKkK,OAASzI,EAAMyI,OACpBlK,KAAKqT,YAAc7E,QAAQ/M,EAAM6I,e,CA9HnCrN,YAAYR,GACViB,OAAOuD,OAAOjB,KAAMvD,GACpBuD,KAAKkK,OAAS,GACdlK,KAAKiE,SAAU,C,EChBnB,MAAMyP,EAqCJ7E,QACE7O,KAAKmP,UAAW,EAChBnP,KAAKoC,OAAOyM,O,CAEd+B,OAAOvB,EAASC,GAOd,YANgB,IAAZD,IACFA,EAAU,QAEE,IAAVC,IACFA,EAAQtP,KAAKM,MAAMtB,QAEL,IAAZqQ,GAAiBC,GAAS,GAC5BtP,KAAKmP,UAAW,EACTnP,KAAKoC,OAAOwO,OAAOvB,EAASC,IAE9B,IAAIrB,C,CAET3N,YACF,OAAON,KAAKoC,OAAO9B,QAAUN,KAAKmP,WAAanP,KAAKqE,WAAarE,KAAK2T,gBAAkB,G,CAEtF1J,oBACF,OAAOjK,KAAKoC,OAAO6H,a,CAEjBI,oBACF,OAAOrK,KAAKoC,OAAOiI,a,CAEjB1G,mBACF,OAAO3D,KAAKoC,OAAO9B,OAASN,KAAK4T,aAAe5T,KAAKM,K,CAEnDyM,iBACF,OAAOyB,QAAQxO,KAAKoC,OAAO9B,QAAUN,KAAKqE,U,CAE5CsL,YAAYD,EAAIX,GAId,QAHc,IAAVA,IACFA,EAAQ,IAEN/O,KAAKmP,SAAU,OAAO,IAAIlB,EAC9B,MAAMxM,EAAQzB,KAAKoC,OAAOX,MAE1B,IAAI+L,EAAUxN,KAAKoC,OAAOuN,YAAYD,EAAI1P,KAAK6T,iBAAiB9E,IAUhE,OATIvB,EAAQnN,WAAuC,IAA3BL,KAAKiQ,WAAWlB,KACtCvB,EAAU,IAAIS,EACdjO,KAAKoC,OAAOX,MAAQA,GAEjB+L,EAAQnN,UAAaL,KAAKqE,YAAerE,KAAK8T,MAAS/E,EAAMjI,QAChE0G,EAAQnN,SAAWL,KAAK2T,iBAE1BnG,EAAQc,MAAQd,EAAQnN,WAAaL,KAAKqE,WAC1CrE,KAAKmP,SAAWX,QAAQhB,EAAQnN,UACzBmN,C,CAETnL,OAAOzF,EAAKmS,EAAOhO,GAEjB,OAAOf,KAAKoC,OAAOC,OAAOzF,EAAKoD,KAAK6T,iBAAiB9E,GAAQhO,E,CAE/DwB,qBACE,OAAIvC,KAAKmP,UAAYnP,KAAKqE,WAAmB,IAAI4J,GACjDjO,KAAKmP,UAAW,EACT,IAAIlB,EAAc,CACvB5N,SAAUL,KAAK2T,kB,CAGnBtD,eACE,OAAO,IAAIpC,C,CAEbsB,YAAYF,EAASC,GACnB,OAAOtP,KAAKoC,OAAOmN,YAAYF,EAASC,E,CAE1CE,WAAWzO,GACT,OAAOf,KAAKoC,OAAOoN,WAAWzO,E,CAEhCmO,aAAaG,EAASC,EAAOP,GAO3B,YANgB,IAAZM,IACFA,EAAU,QAEE,IAAVC,IACFA,EAAQtP,KAAKM,MAAMtB,QAEdgB,KAAKoC,OAAO8M,aAAaG,EAASC,EAAOP,E,CAElD7K,gBAAgBjE,EAAW1B,QACP,IAAdA,IACFA,EAAYP,EAAUC,MAExB,MACMqV,EAAStT,KAAKM,MAAMtB,OACpB+U,EAAWjU,KAAKC,IAAID,KAAKW,IAAIR,EAFpB,GAEwCqT,GACvD,OAAQ/U,GACN,KAAKP,EAAUE,KACf,KAAKF,EAAUG,WACb,OAAO6B,KAAK+M,WAAagH,EANd,EAOb,KAAK/V,EAAUI,MACf,KAAKJ,EAAUK,YACb,OAAO2B,KAAK+M,WAAagH,EAAWT,EAEtC,QACE,OAAOS,E,CAGb3E,oBAAoBC,EAASC,GAO3B,YANgB,IAAZD,IACFA,EAAU,QAEE,IAAVC,IACFA,EAAQtP,KAAKM,MAAMtB,QAEdgB,KAAKM,MAAMY,MAAMmO,EAASC,GAAOtQ,M,CAE1CiR,WAAWlB,GACT,OAAO/O,KAAKoC,OAAO6N,WAAWjQ,KAAK6T,iBAAiB9E,OAAa/O,KAAKwR,QAAUxR,KAAKwR,OAAOvB,WAAWjQ,KAAK6T,iBAAiB9E,I,CAE/HpB,WACE3N,KAAKoC,OAAOuL,U,CAEVlM,YACF,MAAO,CACLyI,OAAQlK,KAAKM,MACbgK,eAAgBtK,KAAKqK,cACrBjI,OAAQpC,KAAKoC,OAAOX,MACpB0N,SAAUnP,KAAKmP,S,CAGf1N,UAAMA,GACRzB,KAAKoC,OAAOX,MAAQA,EAAMW,OAC1BpC,KAAKmP,SAAW1N,EAAM0N,Q,CAExB0E,iBAAiB9E,GACf,IAAIiF,EACJ,MAAO,IACFjF,EACHuB,kBAA4B,MAATvB,GAAqE,OAAnDiF,EAAwBjF,EAAMuB,uBAA4B,EAAS0D,EAAsB5R,UAAqB,MAAT2M,OAAgB,EAASA,EAAMuB,kB,CAtJ7KrT,YAAYR,GACV,MAAM+U,OACJA,EAAMnN,WACNA,EAAUsP,gBACVA,EAAeC,YACfA,EAAWE,KACXA,EAAInD,MACJA,KACGsD,GACDxX,EACJuD,KAAKoC,OAASwD,EAAWqO,GACzBvW,OAAOuD,OAAOjB,KAAM,C,OAClBwR,E,WACAnN,E,gBACAsP,E,YACAC,E,KACAE,E,MACAnD,G,EAyIN+C,EAAuBQ,oBAAsB,CAC3C,EAAG,KACHtV,EAAG,snIAEH,IAAG,KC3JLrC,EAAMsI,aAlBN,cAA2B6J,EASzB1E,cAAcvN,GACZgM,MAAMuB,cAAcvN,E,CAEtBmS,QAAQnS,GACN,MAAMkI,EAAOlI,EAAKkI,KACdA,IAAMlI,EAAK8U,SAAWjR,GAASA,EAAM6T,OAAOxP,IAAS,GACzD8D,MAAMmG,QAAQnS,E,GCTlB,MAAM2X,UAAsB1F,EAwB1B1E,cAAcvN,GACZgM,MAAMuB,cAAcvN,E,CAEtBmS,QAAQnS,GACNA,EAAK4X,YAAc3W,OAAOuD,OAAO,GAAIjB,KAAKqU,YAAa5X,EAAK4X,aAC5D5L,MAAMmG,QAAQnS,GACduD,KAAKsU,c,CAEPA,eACE,MAAMC,EAAOvU,KAAKqU,YAClBrU,KAAK+C,QAAU,GACf/C,KAAKwU,iBAAcxC,EACnBhS,KAAK6S,OAAS,GACd7S,KAAKyU,cAAgB,GACrB,MAAMC,EAAU1U,KAAK2E,KACrB,IAAK+P,IAAYH,EAAM,OACvB,IAAII,GAAiB,EACjBC,GAAgB,EACpB,IAAK,IAAI7V,EAAI,EAAGA,EAAI2V,EAAQ1V,SAAUD,EAAG,CACvC,GAAIiB,KAAK6U,OAAQ,CACf,MAAMC,EAAIJ,EAAQxT,MAAMnC,GAClBgW,EAASrX,OAAON,KAAK4C,KAAK6U,QAAQG,QAAOC,GAA8B,IAArBH,EAAExH,QAAQ2H,KAElEF,EAAOG,MAAK,CAACtW,EAAGD,IAAMA,EAAEK,OAASJ,EAAEI,SAEnC,MAAMmW,EAAQJ,EAAO,GACrB,GAAII,EAAO,CACT,MAAMC,OACJA,EAAMC,OACNA,KACGC,GACD9P,EAAcxF,KAAK6U,OAAOM,IACxBI,EAAY,CAChBzB,KAAM9T,KAAK8T,KACXnD,MAAO3Q,KAAK2Q,MACZgD,gBAAiB3T,KAAK2T,gBACtBC,YAAa5T,KAAK4T,YAClBzD,UAAWnQ,KAAKmQ,aACbmF,E,OACHD,EACA7D,OAAQxR,MAEJwV,EAAwB,MAAVH,EAAiB,IAAI9Y,EAAMkZ,YAAYF,GAAwB3P,EAAW2P,GAC1FC,IACFxV,KAAK+C,QAAQvB,KAAKgU,GACdJ,IAAQpV,KAAKwU,YAAcgB,GAG1BxV,KAAKyU,cAAcU,KAAQnV,KAAKyU,cAAcU,GAAS,IAC5DnV,KAAKyU,cAAcU,GAAO3T,KAAKxB,KAAK+C,QAAQ/D,OAAS,IAEvDD,GAAKoW,EAAMnW,OAAS,EACpB,Q,EAGJ,IAAIyU,EAAOiB,EAAQ3V,GACf2W,EAAWjC,KAAQc,EACvB,GAAId,IAASW,EAAcuB,UAAW,CACpC3V,KAAK6S,OAAOrR,KAAKxB,KAAK+C,QAAQ/D,QAC9B,Q,CAEF,GAAa,MAATyU,GAAyB,MAATA,EAAc,CAChCkB,GAAkBA,EAClB,Q,CAEF,GAAa,MAATlB,GAAyB,MAATA,EAAc,CAChCmB,GAAiBA,EACjB,Q,CAEF,GAAInB,IAASW,EAAcwB,YAAa,CAGtC,KAFE7W,EACF0U,EAAOiB,EAAQ3V,IACV0U,EAAM,MACXiC,GAAU,C,CAEZ,MAAMG,EAAMH,EAAU,IAAIhC,EAAuB,CAC/CrP,WAAYuQ,EACZd,KAAM9T,KAAK8T,KACXnD,MAAO3Q,KAAK2Q,MACZgD,gBAAiB3T,KAAK2T,gBACtBC,YAAa5T,KAAK4T,eACfpO,EAAc+O,EAAKd,IACtBjC,OAAQxR,OACL,IAAImT,EAAuB,C,KAC9BM,EACA9C,MAAO3Q,KAAK2Q,MACZyC,YAAauB,IAEf3U,KAAK+C,QAAQvB,KAAKqU,E,EAGlBpU,YACF,MAAO,IACFgH,MAAMhH,MACTsB,QAAS/C,KAAK+C,QAAQoP,KAAIxT,GAAKA,EAAE8C,Q,CAGjCA,UAAMA,GACR,IAAKA,EAEH,YADAzB,KAAK6O,QAGP,MAAM9L,QACJA,KACG+S,GACDrU,EACJzB,KAAK+C,QAAQyI,SAAQ,CAAC7M,EAAGoX,IAAOpX,EAAE8C,MAAQsB,EAAQgT,KAClDtN,MAAMhH,MAAQqU,C,CAEhBjH,QACEpG,MAAMoG,QACN7O,KAAK+C,QAAQyI,SAAQ7M,GAAKA,EAAEkQ,S,CAE1B9B,iBACF,OAAO/M,KAAKwU,YAAcxU,KAAKwU,YAAYzH,WAAa/M,KAAK+C,QAAQiT,OAAMrX,GAAKA,EAAEoO,Y,CAEhFoC,eACF,OAAOnP,KAAK+C,QAAQiT,OAAMrX,GAAKA,EAAEwQ,U,CAE/BlL,cACF,OAAOjE,KAAK+C,QAAQiT,OAAMrX,GAAKA,EAAEsF,S,CAE/BI,iBACF,OAAOrE,KAAK+C,QAAQiT,OAAMrX,GAAKA,EAAE0F,Y,CAEnCsJ,WACE3N,KAAK+C,QAAQyI,SAAQ7M,GAAKA,EAAEgP,aAC5BlF,MAAMkF,U,CAEJ1D,oBACF,OAAOjK,KAAKwU,YAAcxU,KAAKwU,YAAYvK,cAAgBjK,KAAK+C,QAAQnF,QAAO,CAAChB,EAAK+B,IAAM/B,EAAO+B,EAAEsL,eAAe,G,CAEjHA,kBAAcA,GAChB,GAAIjK,KAAKwU,YAAa,CACpB,MAAMzT,EAAOf,KAAKuP,YAAYvP,KAAKkD,eAAelD,KAAK+C,QAAQuK,QAAQtN,KAAKwU,cAAgBxU,KAAKwU,YAAY7Q,aAAa3E,QAC1HgB,KAAKwU,YAAYvK,cAAgBA,EACjCjK,KAAKwP,WAAWzO,GAChBf,KAAK2N,U,MACAlF,MAAMwB,cAAgBA,C,CAE3B3J,YACF,OAAON,KAAKwU,YAAcxU,KAAKwU,YAAYlU,MAE3CN,KAAK+C,QAAQnF,QAAO,CAAChB,EAAK+B,IAAM/B,EAAO+B,EAAE2B,OAAO,G,CAE9CA,UAAMA,GACR,GAAIN,KAAKwU,YAAa,CACpB,MAAMzT,EAAOf,KAAKuP,YAAYvP,KAAKkD,eAAelD,KAAK+C,QAAQuK,QAAQtN,KAAKwU,cAAgBxU,KAAKwU,YAAY7Q,aAAa3E,QAC1HgB,KAAKwU,YAAYlU,MAAQA,EACzBN,KAAKwP,WAAWzO,GAChBf,KAAK2N,U,MACAlF,MAAMnI,MAAQA,C,CAEnBkK,iBACF,OAAOxK,KAAKwU,YAAcxU,KAAKwU,YAAYhK,WAAa/B,MAAM+B,U,CAE5DA,eAAWlK,GACb,GAAIN,KAAKwU,YAAa,CACpB,MAAMzT,EAAOf,KAAKuP,YAAYvP,KAAKkD,eAAelD,KAAK+C,QAAQuK,QAAQtN,KAAKwU,cAAgBxU,KAAKwU,YAAY7Q,aAAa3E,QAC1HgB,KAAKwU,YAAYhK,WAAalK,EAC9BN,KAAKwP,WAAWzO,GAChBf,KAAK2N,U,MACAlF,MAAM+B,WAAalK,C,CAExBqD,mBACF,OAAO3D,KAAK+C,QAAQnF,QAAO,CAAChB,EAAK+B,IAAM/B,EAAO+B,EAAEgF,cAAc,G,CAEhE6L,WAAWzO,GACT,OAAO0H,MAAM+G,WAAWzO,GAAMuB,UAAUtC,KAAKuC,qB,CAE/C8N,eACE,IAAI4F,EACJ,MAAMzI,EAAU,IAAIS,EACpB,IAAIiI,EAA4F,OAAzED,EAAuBjW,KAAKyE,eAAezE,KAAK2D,aAAa3E,cAAmB,EAASiX,EAAqBjT,MACrI,GAAuB,MAAnBkT,EAAyB,OAAO1I,EAGhCxN,KAAK+C,QAAQmT,GAAiB/G,YAAY+G,EAC9C,IAAK,IAAIH,EAAKG,EAAiBH,EAAK/V,KAAK+C,QAAQ/D,SAAU+W,EAAI,CAC7D,MAAMtF,EAAIzQ,KAAK+C,QAAQgT,GAAI1F,eAC3B,IAAKI,EAAEpQ,SAAU,MACjBmN,EAAQlL,UAAUmO,E,CAEpB,OAAOjD,C,CAETiC,eAAeC,EAAIX,QACH,IAAVA,IACFA,EAAQ,IAEV,MAAMoH,EAAYnW,KAAKyE,eAAezE,KAAK2D,aAAa3E,QAClDwO,EAAU,IAAIS,EACpB,IAAKkI,EAAW,OAAO3I,EACvB,IAAK,IAA0B1K,EAAtBiT,EAAKI,EAAUnT,MAAcF,EAAQ9C,KAAK+C,QAAQgT,KAAOA,EAAI,CACpE,IAAI/B,EACJ,MAAMoC,EAAetT,EAAM6M,YAAYD,EAAI,IACtCX,EACHuB,iBAAsE,OAAnD0D,EAAwBjF,EAAMuB,mBAAwF,OAA1D0D,EAAwBA,EAAsBjR,cAAmB,EAASiR,EAAsB+B,KAGjL,GADAvI,EAAQlL,UAAU8T,GACdA,EAAa7H,SAAU,K,CAE7B,OAAOf,C,CAET+B,YAAYF,EAASC,QACH,IAAZD,IACFA,EAAU,QAEE,IAAVC,IACFA,EAAQtP,KAAK2D,aAAa3E,QAE5B,MAAMqX,EAAY,IAAIpE,EACtB,OAAI5C,IAAYC,GAChBtP,KAAKsW,sBAAsBjH,EAASC,GAAO,CAAC3Q,EAAGoX,EAAIQ,EAAUC,KAC3D,MAAMC,EAAa9X,EAAE4Q,YAAYgH,EAAUC,GAC3CC,EAAWhU,KAAOzC,KAAK0W,gBAAgBX,GACvCU,EAAWjU,KAAOxC,KAAKkD,eAAe6S,GAClCU,aAAsBxE,IAAmBwE,EAAWhE,WAAasD,GACrEM,EAAUnU,OAAOuU,EAAW,IANAJ,C,CAUhCnH,aAAayH,EAASC,EAAO7H,GAU3B,QATgB,IAAZ4H,IACFA,EAAU,QAEE,IAAVC,IACFA,EAAQ5W,KAAK2D,aAAa3E,aAEd,IAAV+P,IACFA,EAAQ,IAEN4H,IAAYC,EAAO,MAAO,GAC9B,IAAI9P,EAAQ,GAIZ,OAHA9G,KAAKsW,sBAAsBK,EAASC,GAAO,CAACjY,EAAGpB,EAAG8R,EAASC,KACzDxI,GAASnI,EAAEuQ,aAAaG,EAASC,EAAOP,EAAM,IAEzCjI,C,CAET4P,gBAAgBjE,GACd,IAAIoE,EACJ,IAAK,IAAIC,EAAK,EAAGA,EAAK9W,KAAK6S,OAAO7T,SAAU8X,EAAI,CAC9C,MAAMrU,EAAOzC,KAAK6S,OAAOiE,GACzB,KAAIrU,GAAQgQ,GAAmC,MAAvBoE,EAAapU,C,CAEvC,OAAOoU,C,CAITtU,mBAAmBwU,GACjB,MAAMvJ,EAAU,IAAIS,EACpB,GAAIjO,KAAK8T,MAAwB,MAAhBiD,EAAsB,OAAOvJ,EAC9C,MAAMwJ,EAAiBhX,KAAKyE,eAAezE,KAAK2D,aAAa3E,QAC7D,IAAKgY,EAAgB,OAAOxJ,EAC5B,MAAM0I,EAAkBc,EAAehU,MACjCiU,EAAgC,MAAhBF,EAAuBA,EAAe/W,KAAK+C,QAAQ/D,OAOzE,OANAgB,KAAK+C,QAAQ7B,MAAMgV,EAAiBe,GAAezL,SAAQ7M,IAEvD,IAAIuY,EADDvY,EAAEmV,MAAwB,MAAhBiD,GAEbvJ,EAAQlL,UAAU3D,EAAE4D,mBAA6C,OAAzB2U,EAAWvY,EAAEoE,cAAmB,EAASmU,EAASlY,Q,IAGvFwO,C,CAIT/I,eAAexB,GACb,IAAIkU,EAAS,GACb,IAAK,IAAIpB,EAAK,EAAGA,EAAK/V,KAAK+C,QAAQ/D,SAAU+W,EAAI,CAC/C,MAAMjT,EAAQ9C,KAAK+C,QAAQgT,GACrBqB,EAAgBD,EAAOnY,OAE7B,GADAmY,GAAUrU,EAAMa,aACZV,GAAOkU,EAAOnY,OAChB,MAAO,CACLgE,MAAO+S,EACP5S,OAAQF,EAAMmU,E,EAKtBlU,eAAeuP,GACb,OAAOzS,KAAK+C,QAAQ7B,MAAM,EAAGuR,GAAY7U,QAAO,CAACqF,EAAKtE,IAAMsE,EAAOtE,EAAEgF,aAAa3E,QAAQ,E,CAE5FsX,sBAAsBjH,EAASC,EAAOzL,QACtB,IAAVyL,IACFA,EAAQtP,KAAK2D,aAAa3E,QAE5B,MAAMqY,EAAgBrX,KAAKyE,eAAe4K,GAC1C,GAAIgI,EAAe,CACjB,MAAMC,EAActX,KAAKyE,eAAe6K,GAElCiI,EAAcD,GAAeD,EAAcrU,QAAUsU,EAAYtU,MACjEwU,EAAoBH,EAAclU,OAClCsU,EAAkBH,GAAeC,EAAcD,EAAYnU,OAASnD,KAAK+C,QAAQsU,EAAcrU,OAAOW,aAAa3E,OAEzH,GADA6E,EAAG7D,KAAK+C,QAAQsU,EAAcrU,OAAQqU,EAAcrU,MAAOwU,EAAmBC,GAC1EH,IAAgBC,EAAa,CAE/B,IAAK,IAAIxB,EAAKsB,EAAcrU,MAAQ,EAAG+S,EAAKuB,EAAYtU,QAAS+S,EAC/DlS,EAAG7D,KAAK+C,QAAQgT,GAAKA,EAAI,EAAG/V,KAAK+C,QAAQgT,GAAIpS,aAAa3E,QAI5D6E,EAAG7D,KAAK+C,QAAQuU,EAAYtU,OAAQsU,EAAYtU,MAAO,EAAGsU,EAAYnU,O,GAI5EyN,OAAOvB,EAASC,QACE,IAAZD,IACFA,EAAU,QAEE,IAAVC,IACFA,EAAQtP,KAAK2D,aAAa3E,QAE5B,MAAM0Y,EAAgBjP,MAAMmI,OAAOvB,EAASC,GAI5C,OAHAtP,KAAKsW,sBAAsBjH,EAASC,GAAO,CAAC3Q,EAAGpB,EAAGgZ,EAAUC,KAC1DkB,EAAcpV,UAAU3D,EAAEiS,OAAO2F,EAAUC,GAAQ,IAE9CkB,C,CAETxT,gBAAgBjE,EAAW1B,GAIzB,QAHkB,IAAdA,IACFA,EAAYP,EAAUC,OAEnB+B,KAAK+C,QAAQ/D,OAAQ,OAAO,EACjC,MAAM2Y,EAAS,IAAI9U,EAAc7C,KAAMC,GACvC,GAAI1B,IAAcP,EAAUC,KAI1B,OAAI0Z,EAAOpT,uBAA+BoT,EAAO1U,KACjD0U,EAAOnU,WACHmU,EAAOxT,sBAA8BwT,EAAO1U,IACzCjD,KAAK2D,aAAa3E,QAI3B,GAAIT,IAAcP,EAAUE,MAAQK,IAAcP,EAAUG,WAAY,CAEtE,GAAII,IAAcP,EAAUE,KAAM,CAEhC,GADAyZ,EAAOrT,wBACHqT,EAAOvU,IAAMuU,EAAO1U,MAAQhD,EAAW,OAAOA,EAClD0X,EAAOnU,U,CAST,GALAmU,EAAOxT,sBACPwT,EAAOvT,yBACPuT,EAAO3T,uBAGHzF,IAAcP,EAAUE,KAAM,CAGhC,GAFAyZ,EAAOpT,uBACPoT,EAAOnT,0BACHmT,EAAOvU,IAAMuU,EAAO1U,KAAOhD,EAAW,OAAO0X,EAAO1U,IAExD,GADA0U,EAAOnU,WACHmU,EAAOvU,IAAMuU,EAAO1U,KAAOhD,EAAW,OAAO0X,EAAO1U,IACxD0U,EAAOnU,U,CAET,OAAImU,EAAOvU,GAAWuU,EAAO1U,IACzB1E,IAAcP,EAAUG,WAAmB,GAC/CwZ,EAAOnU,WACHmU,EAAOvU,GAAWuU,EAAO1U,KAC7B0U,EAAOnU,WACHmU,EAAOvU,GAAWuU,EAAO1U,IACtB,G,CAET,OAAI1E,IAAcP,EAAUI,OAASG,IAAcP,EAAUK,aAE3DsZ,EAAOpT,uBACPoT,EAAOnT,0BACHmT,EAAOrT,wBAAgCqT,EAAO1U,IAC9C1E,IAAcP,EAAUK,YAAoB2B,KAAK2D,aAAa3E,QAGlE2Y,EAAOnU,WACHmU,EAAOvU,GAAWuU,EAAO1U,KAC7B0U,EAAOnU,WACHmU,EAAOvU,GAAWuU,EAAO1U,IACtBjD,KAAKkE,gBAAgBjE,EAAWjC,EAAUE,SAE5C+B,C,CAETmP,oBAAoBC,EAASC,QACX,IAAZD,IACFA,EAAU,QAEE,IAAVC,IACFA,EAAQtP,KAAK2D,aAAa3E,QAE5B,IAAI4Y,EAAQ,EAIZ,OAHA5X,KAAKsW,sBAAsBjH,EAASC,GAAO,CAAC3Q,EAAGpB,EAAGgZ,EAAUC,KAC1DoB,GAASjZ,EAAEyQ,oBAAoBmH,EAAUC,EAAO,IAE3CoB,C,CAITpC,YAAYtY,GACV,OAAO8C,KAAK6X,aAAa3a,GAAM,E,CAIjC2a,aAAa3a,GACX,MAAM4a,EAAU9X,KAAKyU,cAAcvX,GACnC,OAAK4a,EACEA,EAAQ3F,KAAI4F,GAAM/X,KAAK+C,QAAQgV,KADjB,E,CA1ZvB9a,YAAYR,GACVgM,MAAM,IACD2L,EAAcrC,YACdtV,EACH4X,YAAa3W,OAAOuD,OAAO,GAAIyS,EAAuBQ,oBAA6B,MAARzX,OAAe,EAASA,EAAK4X,c,EA0Z9GD,EAAcrC,SAAW,CACvB+B,MAAM,EACNH,gBAAiB,KAEnBS,EAAcuB,UAAY,IAC1BvB,EAAcwB,YAAc,KAC5BxB,EAAc4D,gBAAkBtE,EAChCU,EAAc6D,gBAAkB9E,EAChC5W,EAAMuI,cAAgBsP,ECtbtB,MAAM8D,UAAoB9D,EAYpB+D,iBACF,OAAOnY,KAAKoY,UAAYvb,OAAOmD,KAAKwC,MAAMxD,M,CAK5CgL,cAAcvN,GACZgM,MAAMuB,cAAcvN,E,CAEtBmS,QAAQnS,GACN,MAAM4b,GACJA,EAAKrY,KAAKqY,IAAM,EAAC7V,KACjBA,EAAOxC,KAAKwC,MAAQ,EAAC4V,UACrBA,EAAYpY,KAAKoY,WAAa,EAACE,QAC/BA,EAAUtY,KAAKsY,WACZC,GACD9b,EACJuD,KAAKqY,GAAKA,EACVrY,KAAKwC,KAAOA,EACZxC,KAAKoY,UAAYtY,KAAKW,IAAI5D,OAAOwb,GAAIrZ,OAAQoZ,GAC7CpY,KAAKsY,QAAUA,EACf,MAAME,EAAU3b,OAAOmD,KAAKwC,MAAMiW,SAASzY,KAAKoY,UAAW,KACrDM,EAAQ7b,OAAOmD,KAAKqY,IAAII,SAASzY,KAAKoY,UAAW,KACvD,IAAIO,EAAiB,EACrB,KAAOA,EAAiBD,EAAM1Z,QAAU0Z,EAAMC,KAAoBH,EAAQG,MAAmBA,EAC7FJ,EAAY5T,KAAO+T,EAAMxX,MAAM,EAAGyX,GAAgBla,QAAO,KAAO,OAAS,IAAI4W,OAAOrV,KAAKoY,UAAYO,GACrGlQ,MAAMmG,QAAQ2J,E,CAEZxL,iBACF,OAAOtE,MAAMsE,YAAcyB,QAAQxO,KAAKM,M,CAE1CsY,WAAWhc,GACT,IAAIic,EAAS,GACTC,EAAS,GACb,MAAM,CAAGC,EAAaC,GAAOpc,EAAIqc,MAAK,qBAAwB,GAO9D,OANID,IACFH,EAAS,IAAIxD,OAAO0D,EAAY/Z,QAAUga,EAC1CF,EAAS,IAAIzD,OAAO0D,EAAY/Z,QAAUga,GAE5CH,EAASA,EAAOK,OAAOlZ,KAAKoY,UAAW,KACvCU,EAASA,EAAOI,OAAOlZ,KAAKoY,UAAW,KAChC,CAACS,EAAQC,E,CAElBhJ,cAAcJ,EAAIX,GAIhB,IAAIvB,EAEJ,QALc,IAAVuB,IACFA,EAAQ,KAGTW,EAAIlC,GAAW/E,MAAMqH,cAAcJ,EAAGjR,QAAO,MAAQ,IAAKsQ,IACtD/O,KAAKsY,UAAY5I,EAEpB,OADAlC,EAAQc,MAAQtO,KAAK+M,WACd,CAAC2C,EAAIlC,GAEd,MAAMgL,EAAU3b,OAAOmD,KAAKwC,MAAMiW,SAASzY,KAAKoY,UAAW,KACrDM,EAAQ7b,OAAOmD,KAAKqY,IAAII,SAASzY,KAAKoY,UAAW,KACjDe,EAAUnZ,KAAKM,MAAQoP,EAC7B,GAAIyJ,EAAQna,OAASgB,KAAKoY,UAAW,MAAO,CAAC,GAAI5K,GACjD,MAAOqL,EAAQC,GAAU9Y,KAAK4Y,WAAWO,GACzC,OAAInU,OAAO8T,GAAU9Y,KAAKwC,KAAa,CAACgW,EAAQW,EAAQna,OAAS,GAAIwO,GACjExI,OAAO6T,GAAU7Y,KAAKqY,GACH,QAAjBrY,KAAKsY,SAAqBa,EAAQna,OAASgB,KAAKoY,UAC3C,CAAC,GAAI5K,EAAQlL,UAAUtC,KAAKqC,OAAOmW,EAAQW,EAAQna,OAAS,GAAK0Q,EAAIX,KAEvE,CAAC2J,EAAMS,EAAQna,OAAS,GAAIwO,GAE9B,CAACkC,EAAIlC,E,CAEdyC,WAAWlB,GACT,MAAMnS,EAAMoD,KAAKM,MAEjB,IAAqB,IADA1D,EAAIuX,OAAM,SACJvX,EAAIoC,QAAUgB,KAAKmY,WAAY,OAAO,EACjE,MAAOU,EAAQC,GAAU9Y,KAAK4Y,WAAWhc,GACzC,OAAOoD,KAAKwC,MAAQwC,OAAO8T,IAAW9T,OAAO6T,IAAW7Y,KAAKqY,IAAM5P,MAAMwH,WAAWlB,E,CArEtF9R,YAAYR,GACVgM,MAAMhM,E,EAuEVF,EAAM6c,YAAclB,ECtFpB,MAAMmB,UAAmBjF,EACvBlG,6BAA6BzR,GAC3B,MAAMkI,KACJA,EAAI+P,QACJA,KACG6D,GACD9b,EACJ,MAAO,IACF8b,EACH5T,KAAMhI,EAASgI,GAAQA,EAAO+P,E,CAsBlC1K,cAAcvN,GACZgM,MAAMuB,cAAcvN,E,CAEtBmS,QAAQnS,GACN,MAAMkI,KACJA,EAAI+P,QACJA,EAAOG,OACPA,KACG0D,GACD,IACCc,EAAWtH,YACXtV,GAEC6c,EAAgB5b,OAAOuD,OAAO,GAAIoY,EAAWE,sBAE/C9c,EAAKsD,MAAKuZ,EAAcE,EAAEhX,KAAO/F,EAAKsD,IAAI0Z,eAC1Chd,EAAKgE,MAAK6Y,EAAcE,EAAEnB,GAAK5b,EAAKgE,IAAIgZ,eACxChd,EAAKsD,KAAOtD,EAAKgE,KAAO6Y,EAAcE,EAAEhX,OAAS8W,EAAcE,EAAEnB,KACnEiB,EAAcI,EAAElX,KAAO/F,EAAKsD,IAAI4Z,WAAa,EAC7CL,EAAcI,EAAErB,GAAK5b,EAAKgE,IAAIkZ,WAAa,EACvCL,EAAcI,EAAElX,OAAS8W,EAAcI,EAAErB,KAC3CiB,EAAc7I,EAAEjO,KAAO/F,EAAKsD,IAAI6Z,UAChCN,EAAc7I,EAAE4H,GAAK5b,EAAKgE,IAAImZ,YAGlClc,OAAOuD,OAAOqY,EAAetZ,KAAK6U,OAAQA,GAG1CnX,OAAON,KAAKkc,GAAe9N,SAAQqO,IACjC,MAAMlb,EAAI2a,EAAcO,KAClB,YAAalb,IAAM,YAAalC,IAAMkC,EAAE2Z,QAAU7b,EAAK6b,QAAO,IAEtE7P,MAAMmG,QAAQ,IACT2J,EACH5T,KAAMhI,EAASgI,GAAQA,EAAO+P,EAC9BG,OAAQyE,G,CAGZrJ,WAAWlB,GACT,MAAM+K,EAAO9Z,KAAK8Z,KAClB,OAAOrR,MAAMwH,WAAWlB,MAAY/O,KAAK+M,YAAc/M,KAAK+Z,YAAY/Z,KAAKM,QAAkB,MAARwZ,IAA6B,MAAZ9Z,KAAKD,KAAeC,KAAKD,KAAO+Z,KAAsB,MAAZ9Z,KAAKS,KAAeqZ,GAAQ9Z,KAAKS,K,CAIrLsZ,YAAYnd,GACV,OAAOoD,KAAKiP,OAAOjP,KAAKgP,MAAMpS,EAAKoD,MAAOA,MAAMsN,QAAQ1Q,IAAQ,C,CAI9Dkd,WACF,OAAO9Z,KAAKwK,U,CAEVsP,SAAKA,GACP9Z,KAAKwK,WAAasP,C,CAEhBtP,iBACF,OAAOxK,KAAK+M,WAAatE,MAAM+B,WAAa,I,CAE1CA,eAAWlK,GACbmI,MAAM+B,WAAalK,C,CAErBwJ,WAAWnF,GACT,OAAOA,IAASzF,MAAQuJ,MAAMqB,WAAWnF,E,CAE3C8H,iBAAiBhQ,GACf,OAAOgM,MAAMgE,iBAAiB4M,EAAWW,sBAAsBvd,G,CAvEjEQ,YAAYR,GACVgM,MAAM4Q,EAAWW,sBAAsB,IAClCX,EAAWtH,YACXtV,I,EAuET4c,EAAWE,mBAAqB,KAAO,CACrC9I,EAAG,CACD9L,KAAMuT,EACN1V,KAAM,EACN6V,GAAI,GACJD,UAAW,GAEbsB,EAAG,CACD/U,KAAMuT,EACN1V,KAAM,EACN6V,GAAI,GACJD,UAAW,GAEboB,EAAG,CACD7U,KAAMuT,EACN1V,KAAM,KACN6V,GAAI,QAGRgB,EAAWtH,SAAW,CACpBpN,KAAMzF,KACNwV,QAAS,cACTzF,OAAQ,CAAC6K,EAAM1X,KACb,IAAK0X,EAAM,MAAO,GAIlB,MAAO,CAHKjd,OAAOid,EAAKF,WAAWnB,SAAS,EAAG,KACjC5b,OAAOid,EAAKH,WAAa,GAAGlB,SAAS,EAAG,KACzCqB,EAAKL,eACQrH,KAAK,IAAI,EAErCpD,MAAO,CAACpS,EAAKwF,KACX,MAAO6X,EAAKC,EAAOC,GAAQvd,EAAIwd,MAAM,KAAKjI,IAAInN,QAC9C,OAAO,IAAI9F,KAAKib,EAAMD,EAAQ,EAAGD,EAAI,GAGzC1d,EAAMwI,WAAasU,EC5InB,MAAMgB,UAAsB3L,EAgB1B1E,cAAcvN,GACZgM,MAAMuB,cAAcvN,E,CAEtBmS,QAAQnS,GACNgM,MAAMmG,QAAQnS,GACV,SAAUA,IACZuD,KAAKsa,gBAAatI,EAElBhS,KAAKua,cAAgBld,MAAMC,QAAQb,EAAKkI,MAAQlI,EAAKkI,KAAKwN,KAAIuH,IAC5D,MAAMtE,OACJA,KACGnB,GACDzO,EAAckU,GACZtX,EAASwD,EAAW,CACxBuK,UAAWnQ,KAAKwa,WAChB7J,MAAO3Q,KAAKya,OACZtJ,YAAanR,KAAK0a,gBACfzG,IAGL,OADImB,IAAQpV,KAAKsa,WAAalY,GACvBA,CAAM,IACV,G,CAKTqN,eAAeC,EAAIX,QACH,IAAVA,IACFA,EAAQ,IAEV,MAAMvB,EAAUxN,KAAK2a,eAAejL,EAAIX,GAIxC,OAHI/O,KAAK4a,aACPpN,EAAQlL,UAAUtC,KAAK4a,YAAYjL,YAAYD,EAAI1P,KAAK6T,iBAAiB9E,KAEpEvB,C,CAETmN,eAAe3K,EAAUjB,EAAOhO,QACb,IAAbiP,IACFA,EAAW,SAEC,IAAVjB,IACFA,EAAQ,SAEG,IAAThO,IACFA,EAAO,IAET,MAAM8Z,EAAsB9L,EAAMhO,MAAkC,MAA1BgO,EAAMuB,iBAA2BvB,EAAMuB,iBAAiBpG,OAASlK,KAAKM,MAC1Gwa,EAAa9a,KAAKqK,cAClB0Q,EAAchM,EAAMhO,MAAkC,MAA1BgO,EAAMuB,iBAA2BvB,EAAMuB,iBAAiBhG,eAAiBwQ,EACrGE,EAAYF,EAAW5Z,MAAM6Z,EAAY/b,QACzCic,EAAWjb,KAAK4a,YAChBpN,EAAU,IAAIS,EACdiN,EAA4B,MAAZD,OAAmB,EAASA,EAASxZ,MA8B3D,OA3BAzB,KAAK4a,YAAc5a,KAAKmb,WAAWnL,EAAU,IACxCjB,GACFhO,GAGCf,KAAK4a,cACH5a,KAAK4a,cAAgBK,GAEvBjb,KAAK4a,YAAY/L,QACbkM,IACF/a,KAAK4a,YAAYvY,OAAO0Y,EAAa,CACnCrN,KAAK,IAEPF,EAAQa,UAAYrO,KAAK4a,YAAYta,MAAMtB,OAAS6b,EAAoB7b,QAEtEgc,IACFxN,EAAQa,WAAarO,KAAK4a,YAAYvY,OAAO2Y,EAAW,CACtDtN,KAAK,EACL3M,MAAM,IACLsN,YAEI6M,IAGTlb,KAAK4a,YAAYnZ,MAAQyZ,IAGtB1N,C,CAETjL,qBACE,MAAMiL,EAAUxN,KAAK2a,iBAIrB,OAHI3a,KAAK4a,aACPpN,EAAQlL,UAAUtC,KAAK4a,YAAYrY,sBAE9BiL,C,CAET6C,eACE,MAAM7C,EAAUxN,KAAK2a,iBAIrB,OAHI3a,KAAK4a,aACPpN,EAAQlL,UAAUtC,KAAK4a,YAAYvK,gBAE9B7C,C,CAETgC,WAAWzO,GACT,MAAMyM,EAAU,IAAIS,EAEpB,OADIlN,GAAMyM,EAAQlL,UAAUtC,KAAK2a,eAAe,GAAI,GAAI5Z,IACjDyM,EAAQlL,UAAUtC,KAAK4a,YAAc5a,KAAK4a,YAAYpL,WAAWzO,GAAQ0H,MAAM+G,WAAWzO,G,CAEnG8S,iBAAiB9E,GACf,IAAIiF,EAAuBoH,EAC3B,MAAO,IACFrM,EACHuB,kBAAuE,OAAnD0D,EAAwBjF,EAAMuB,uBAA4B,EAAS0D,EAAsBqH,kBAAoBrb,KAAK4a,cAAqE,OAApDQ,EAAyBrM,EAAMuB,uBAA4B,EAAS8K,EAAuBR,cAAgB7L,EAAMuB,iB,CAG5Q6K,WAAWnL,EAAUjB,EAAOhO,GAO1B,YANc,IAAVgO,IACFA,EAAQ,SAEG,IAAThO,IACFA,EAAO,IAEFf,KAAKsb,SAAStL,EAAUhQ,KAAM+O,EAAOhO,E,CAE9CkP,WAAWlB,GACT,OAAOtG,MAAMwH,WAAWlB,MAAY/O,KAAK4a,aAAe5a,KAAK4a,YAAY3K,WAAWjQ,KAAK6T,iBAAiB9E,I,CAE5GwB,UAAU3T,EAAKmS,QACC,IAAVA,IACFA,EAAQ,IAEV,IAAK1L,EAAGmK,GAAW/E,MAAM8H,UAAU3T,EAAKmS,GACxC,GAAI/O,KAAK4a,YAAa,CACpB,IAAIW,GACHlY,EAAGkY,GAAkB9S,MAAM8H,UAAUlN,EAAGrD,KAAK6T,iBAAiB9E,IAC/DvB,EAAUA,EAAQlL,UAAUiZ,E,CAE9B,MAAO,CAAClY,EAAGmK,E,CAEbsC,cAAclT,EAAKmS,QACH,IAAVA,IACFA,EAAQ,IAEV,IAAK1L,EAAGmK,GAAW/E,MAAMqH,cAAclT,EAAKmS,GAC5C,GAAI/O,KAAK4a,YAAa,CACpB,IAAIW,GACHlY,EAAGkY,GAAkB9S,MAAMqH,cAAczM,EAAGrD,KAAK6T,iBAAiB9E,IACnEvB,EAAUA,EAAQlL,UAAUiZ,E,CAE9B,MAAO,CAAClY,EAAGmK,E,CAEbqB,QACE,IAAI2M,EACsC,OAAzCA,EAAoBxb,KAAK4a,cAAwBY,EAAkB3M,QACpE7O,KAAKua,cAAc/O,SAAQkO,GAAKA,EAAE7K,S,CAEhCvO,YACF,OAAON,KAAKsa,WAAata,KAAKsa,WAAWha,MAAQN,KAAK4a,YAAc5a,KAAK4a,YAAYta,MAAQ,E,CAE3FA,UAAMA,GACJN,KAAKsa,YACPta,KAAKsa,WAAWha,MAAQA,EACxBN,KAAK4a,YAAc5a,KAAKsa,WACxBta,KAAK2a,kBACAlS,MAAMnI,MAAQA,C,CAEnB2J,oBACF,OAAOjK,KAAKsa,WAAata,KAAKsa,WAAWrQ,cAAgBjK,KAAK4a,YAAc5a,KAAK4a,YAAY3Q,cAAgB,E,CAE3GA,kBAAcA,GACZjK,KAAKsa,YACPta,KAAKsa,WAAWrQ,cAAgBA,EAChCjK,KAAK4a,YAAc5a,KAAKsa,WACxBta,KAAK2a,kBACAlS,MAAMwB,cAAgBA,C,CAE3BO,iBACF,OAAOxK,KAAKsa,WAAata,KAAKsa,WAAW9P,WAAaxK,KAAK4a,YAAc5a,KAAK4a,YAAYpQ,WAAa,E,CAErGA,eAAWA,GACb,GAAIxK,KAAKsa,WAIP,OAHAta,KAAKsa,WAAW9P,WAAaA,EAC7BxK,KAAK4a,YAAc5a,KAAKsa,gBACxBta,KAAK2a,iBAGP,IAAI1Q,EAAgBpN,OAAO2N,GAGvBxK,KAAK4a,cACP5a,KAAK4a,YAAYpQ,WAAaA,EAC9BP,EAAgBjK,KAAK4a,YAAY3Q,eAEnCjK,KAAKiK,cAAgBA,C,CAEnBtG,mBACF,OAAO3D,KAAK4a,YAAc5a,KAAK4a,YAAYjX,aAAe,E,CAExDoJ,iBACF,IAAI0O,EACJ,OAAOjN,QAAmD,OAA1CiN,EAAqBzb,KAAK4a,kBAAuB,EAASa,EAAmB1O,W,CAE3FoC,eACF,IAAIuM,EACJ,OAAOlN,QAAmD,OAA1CkN,EAAqB1b,KAAK4a,kBAAuB,EAASc,EAAmBvM,S,CAE/FyB,OAAOvB,EAASC,GACd,MAAM9B,EAAU,IAAIS,EAMpB,OALIjO,KAAK4a,aACPpN,EAAQlL,UAAUtC,KAAK4a,YAAYhK,OAAOvB,EAASC,IAElDhN,UAAUtC,KAAK2a,kBAEXnN,C,CAEL/L,YACF,IAAIka,EACJ,MAAO,IACFlT,MAAMhH,MACT6I,eAAgBtK,KAAKqK,cACrBkQ,cAAeva,KAAKua,cAAcpI,KAAIuH,GAAKA,EAAEjY,QAC7C4Z,eAAgBrb,KAAK4a,YACrBA,YAAwD,OAA1Ce,EAAqB3b,KAAK4a,kBAAuB,EAASe,EAAmBla,M,CAG3FA,UAAMA,GACR,MAAM8Y,cACJA,EAAac,eACbA,EAAcT,YACdA,KACG9E,GACDrU,EACA8Y,GAAeva,KAAKua,cAAc/O,SAAQ,CAACkO,EAAGkC,IAAOlC,EAAEjY,MAAQ8Y,EAAcqB,KAC3D,MAAlBP,IACFrb,KAAK4a,YAAcS,EACnBrb,KAAK4a,YAAYnZ,MAAQmZ,GAE3BnS,MAAMhH,MAAQqU,C,CAEhB5G,aAAaG,EAASC,EAAOP,GAC3B,OAAO/O,KAAK4a,YAAc5a,KAAK4a,YAAY1L,aAAaG,EAASC,EAAOP,GAAS,E,CAEnFQ,YAAYF,EAASC,GACnB,OAAOtP,KAAK4a,YAAc5a,KAAK4a,YAAYrL,YAAYF,EAASC,GAAS7G,MAAM8G,YAAYF,EAASC,E,CAEtG3B,WACM3N,KAAK4a,aAAa5a,KAAK4a,YAAYjN,WACvClF,MAAMkF,U,CAERzJ,gBAAgBjE,EAAW1B,GACzB,OAAOyB,KAAK4a,YAAc5a,KAAK4a,YAAY1W,gBAAgBjE,EAAW1B,GAAakK,MAAMvE,gBAAgBjE,EAAW1B,E,CAElH4R,gBACF,OAAOnQ,KAAK4a,YAAc5a,KAAK4a,YAAYzK,UAAYnQ,KAAKwa,U,CAE1DrK,cAAUA,GACZnQ,KAAKwa,WAAarK,C,CAEhBQ,YACF,OAAO3Q,KAAK4a,YAAc5a,KAAK4a,YAAYjK,MAAQ3Q,KAAKya,M,CAEtD9J,UAAMA,GACR3Q,KAAKya,OAAS9J,C,CAEZQ,kBACF,OAAOnR,KAAK4a,YAAc5a,KAAK4a,YAAYzJ,YAAcnR,KAAK0a,Y,CAE5DvJ,gBAAYA,GACdnR,KAAK0a,aAAevJ,C,CAEtBrH,WAAWnF,GACT,OAAOtH,MAAMC,QAAQqH,GAAQ3E,KAAKua,cAAcvE,OAAM,CAAC0D,EAAGkC,KACxD,IAAKjX,EAAKiX,GAAK,OACf,MACEjX,KAAMkX,KACHvP,GACD3H,EAAKiX,GACT,OAAOld,EAAegb,EAAGpN,IAAaoN,EAAE5P,WAAW+R,EAAQ,IACxDpT,MAAMqB,WAAWnF,E,CAExB+F,iBAAiBpK,GACf,IAAIwb,EACJ,OAAOtN,QAAmD,OAA1CsN,EAAqB9b,KAAK4a,kBAAuB,EAASkB,EAAmBpR,iBAAiBpK,G,CA5RhHrD,YAAYR,GACVgM,MAAM,IACD4R,EAActI,YACdtV,IAELuD,KAAK4a,iBAAc5I,C,EA0RvBqI,EAActI,cAAW,EACzBsI,EAActI,SAAW,CACvBuJ,SAAU,CAACtL,EAAU5N,EAAQ2M,EAAOhO,KAClC,IAAKqB,EAAOmY,cAAcvb,OAAQ,OAClC,MAAM8b,EAAa1Y,EAAOiI,cAGpB0R,EAAS3Z,EAAOmY,cAAcpI,KAAI,CAACuH,EAAG1W,KAC1C,MAAMgZ,EAAY5Z,EAAOwY,cAAgBlB,EACnCuC,EAAgBD,EAAYtC,EAAE/V,aAAa3E,OAAS0a,EAAExV,gBAAgBwV,EAAE/V,aAAa3E,OAAQhB,EAAUG,YAW7G,OAVIub,EAAErP,gBAAkByQ,GACtBpB,EAAE7K,QACF6K,EAAErX,OAAOyY,EAAY,CACnBpN,KAAK,KAEGsO,GACVtC,EAAE9I,OAAOqL,GAEXvC,EAAErX,OAAO2N,EAAU5N,EAAOyR,iBAAiB9E,IAC3C2K,EAAElK,WAAWzO,GACN,C,MACLiC,EACAkZ,OAAQxC,EAAErP,cAAcrL,OACxBoQ,oBAAqBsK,EAAEtK,oBAAoB,EAAGtP,KAAKW,IAAIwb,EAAevC,EAAExV,gBAAgBwV,EAAE/V,aAAa3E,OAAQhB,EAAUG,cAC1H,IAKH,OADA4d,EAAO7G,MAAK,CAACiH,EAAIC,IAAOA,EAAGF,OAASC,EAAGD,QAAUE,EAAGhN,oBAAsB+M,EAAG/M,sBACtEhN,EAAOmY,cAAcwB,EAAO,GAAG/Y,MAAM,GAGhDzG,EAAM2I,cAAgBmV,ECxStB9d,EAAM8f,WA1BN,cAAyBjI,EAIvBpK,cAAcvN,GACZgM,MAAMuB,cAAcvN,E,CAEtBmS,QAAQnS,GACN,MACE6f,KAAMC,KACHC,GACD/f,EACJ,GAAI8f,EAAO,CACT,MAAME,EAAUF,EAAMpK,KAAIrK,GAAKA,EAAE9I,SAC3B0d,EAAiB5c,KAAKC,OAAO0c,GAC7BE,EAAiB7c,KAAKW,OAAOgc,GAAWC,EAC9CF,EAAM7X,KAAO,IAAI0Q,OAAOqH,GACpBC,IAAgBH,EAAM7X,MAAQ,IAAM,IAAI0Q,OAAOsH,GAAkB,KACrE3c,KAAKsc,KAAOC,C,CAEd9T,MAAMmG,QAAQ4N,E,CAEhBvM,WAAWlB,GACT,OAAO/O,KAAKsc,KAAKM,MAAK9U,GAAuC,IAAlCA,EAAEwF,QAAQtN,KAAKiK,kBAAyBxB,MAAMwH,WAAWlB,E,CAtBtF9R,YAAYR,GACVgM,MAAMhM,E,GCVV,IAAIogB,ECoBJtgB,EAAM8I,eAnBN,cAA6BqJ,EAS3B1E,cAAcvN,GACZgM,MAAMuB,cAAcvN,E,CAEtBmS,QAAQnS,GACNgM,MAAMmG,QAAQ,IACTnS,EACH8U,SAAU9U,EAAKkI,M,GDdrB,MAAMmY,UAAqBpO,EAmCzB1E,cAAcvN,GACZgM,MAAMuB,cAAcvN,E,CAEtBmS,QAAQnS,GACNgM,MAAMmG,QAAQnS,GACduD,KAAK+c,gB,CAEPA,iBACE,MAAM5c,EAAQ,KAAOH,KAAKgd,cAAgB,WAAa,IAEjDtc,GAAOV,KAAKid,MAAQ,IAAMze,EAAawB,KAAKkd,OAAS,SAAWld,KAAKid,MAAQ,MAAQ,IAAM,IACjGjd,KAAKmd,cAAgB,IAAI7d,OAAOa,EAFpB,OAEkCO,GAC9CV,KAAKod,kBAAoB,IAAI9d,OAAO,IAAMU,KAAKqd,WAAWlL,IAAI3T,GAAc4T,KAAK,IAAM,IAAK,KAC5FpS,KAAKsd,0BAA4B,IAAIhe,OAAOd,EAAawB,KAAKud,oBAAqB,I,CAErFC,2BAA2Bld,GACzB,OAAOA,EAAM7B,QAAQuB,KAAKsd,0BAA2B,G,CAEvDG,2BAA2Bnd,GAEzB,MAAMod,EAAQpd,EAAM8Z,MAAMpa,KAAKkd,OAE/B,OADAQ,EAAM,GAAKA,EAAM,GAAGjf,QAAO,wBAA0BuB,KAAKud,oBACnDG,EAAMtL,KAAKpS,KAAKkd,M,CAEzBpN,cAAcJ,EAAIX,QACF,IAAVA,IACFA,EAAQ,IAEV,MAAO4O,EAAQnQ,GAAW/E,MAAMqH,cAAc9P,KAAKwd,2BAA2Bxd,KAAKid,OAASjd,KAAKqd,WAAWre,SAS5G+P,EAAMjI,OAASiI,EAAMrB,MAAQqB,EAAMjI,QAAUiI,EAAMrB,KAAOgC,EAAGjR,QAAQuB,KAAKod,kBAAmBpd,KAAKkd,OAASxN,GAAKX,GAGhH,OAFIW,IAAOiO,IAAQnQ,EAAQc,MAAO,IAC9BqP,GAAW3d,KAAK4d,eAAkB5d,KAAKM,OAAoB,MAAXqd,GAAgBnQ,EAAQlL,UAAUtC,KAAK2P,YAAY,MAChG,CAACgO,EAAQnQ,E,CAElBqQ,iBAAiBxF,EAAIyF,QACQ,IAAvBA,IACFA,GAAqB,GAEvB,IAAIC,EAAQ,EACZ,IAAK,IAAI9a,EAAM,EAAGA,EAAMoV,IAAMpV,EACxBjD,KAAKkK,OAAOoD,QAAQtN,KAAKud,mBAAoBta,KAASA,MACtD8a,EACED,IAAoBzF,GAAMrY,KAAKud,mBAAmBve,SAG1D,OAAO+e,C,CAETC,0BAA0B9c,GAIxB,YAHc,IAAVA,IACFA,EAAQlB,KAAKkK,QAERlK,KAAK6d,iBAAiB7d,KAAKwd,2BAA2Btc,GAAOlC,QAAQ,E,CAE9EkQ,aAAaG,EAASC,EAAOP,GAQ3B,YAPgB,IAAZM,IACFA,EAAU,QAEE,IAAVC,IACFA,EAAQtP,KAAK2D,aAAa3E,SAE3BqQ,EAASC,GAAStP,KAAKie,2BAA2B5O,EAASC,GACrDtP,KAAKwd,2BAA2B/U,MAAMyG,aAAaG,EAASC,EAAOP,G,CAE5EU,eAAeC,EAAIX,QACH,IAAVA,IACFA,EAAQ,IAEV,MAAMmP,EAAsBnP,EAAMhO,MAAQgO,EAAMuB,iBAAmBvB,EAAMuB,iBAAiBpG,OAASlK,KAAKkK,OAClGiU,EAAgCne,KAAKge,0BAA0BE,GACrEle,KAAKkK,OAASlK,KAAKwd,2BAA2Bxd,KAAKM,OACnD,MAAMK,EAAWX,KAAKkK,OACtBlK,KAAKkK,QAAUwF,EACf,MAAMsJ,EAAMhZ,KAAKoe,OACjB,IAgBIC,EAhBAC,GAAYC,MAAMvF,GAClB1K,GAAO,EACX,GAAIgQ,EAAU,CACZ,IAAIE,EACY,MAAZxe,KAAKD,KAAeC,KAAKD,IAAM,GAAKC,KAAKoe,OAASpe,KAAKD,MAAKye,EAAWxe,KAAKD,KAChE,MAAZC,KAAKS,KAAeT,KAAKS,IAAM,GAAKT,KAAKoe,OAASpe,KAAKS,MAAK+d,EAAWxe,KAAKS,KAChE,MAAZ+d,IACExe,KAAKsY,SACPtY,KAAKkK,OAASlK,KAAKiP,OAAOuP,EAAUxe,MAAMvB,QAAQqe,EAAa2B,eAAgBze,KAAKkd,OACpF5O,IAASA,EAAO3N,IAAaX,KAAKkK,SAAW6E,EAAMhO,OAEnDud,GAAW,GAGfA,IAAaA,EAAW9P,QAAQxO,KAAKkK,OAAO+O,MAAMjZ,KAAKmd,gB,CAGpDmB,EAIHD,EAAgB,IAAIpQ,EAAc,CAChC5N,SAAUL,KAAKkK,OAAOhJ,MAAMP,EAAS3B,QACrCoP,YAAaE,EAAO,GAAKoB,E,KACzBpB,KANFtO,KAAKkK,OAASvJ,EACd0d,EAAgB,IAAIpQ,GAQtBjO,KAAKkK,OAASlK,KAAKyd,2BAA2Bzd,KAAKkK,QACnD,MAAMwU,EAAkB3P,EAAMhO,MAAQgO,EAAMuB,iBAAmBvB,EAAMuB,iBAAiBpG,OAASlK,KAAKkK,OAC9FyU,EAA4B3e,KAAKge,0BAA0BU,GAEjE,OADAL,EAAchQ,YAAcsQ,EAA4BR,GAAiCne,KAAKud,mBAAmBve,OAC1Gqf,C,CAETO,qBAAqB3b,GACnB,GAAIjD,KAAKud,mBAAoB,CAC3B,MAAMsB,EAAa5b,EAAMjD,KAAKud,mBAAmBve,OAAS,EACpD8f,EAAe9e,KAAKM,MAAMgN,QAAQtN,KAAKud,mBAAoBsB,GACjE,GAAIC,GAAgB7b,EAAK,OAAO6b,C,CAElC,OAAO,C,CAETb,2BAA2Bzb,EAAM6V,GAC/B,MAAM0G,EAAyB/e,KAAK4e,qBAAqBpc,GACrDuc,GAA0B,IAAGvc,EAAOuc,GACxC,MAAMC,EAAuBhf,KAAK4e,qBAAqBvG,GAEvD,OADI2G,GAAwB,IAAG3G,EAAK2G,EAAuBhf,KAAKud,mBAAmBve,QAC5E,CAACwD,EAAM6V,E,CAEhBzH,OAAOvB,EAASC,QACE,IAAZD,IACFA,EAAU,QAEE,IAAVC,IACFA,EAAQtP,KAAK2D,aAAa3E,SAE3BqQ,EAASC,GAAStP,KAAKie,2BAA2B5O,EAASC,GAC5D,MAAM2P,EAAiBjf,KAAKM,MAAMY,MAAM,EAAGmO,GACrC6P,EAAgBlf,KAAKM,MAAMY,MAAMoO,GACjC6O,EAAgCne,KAAK6d,iBAAiBoB,EAAejgB,QAC3EgB,KAAKkK,OAASlK,KAAKyd,2BAA2Bzd,KAAKwd,2BAA2ByB,EAAiBC,IAC/F,MAAMP,EAA4B3e,KAAKge,0BAA0BiB,GACjE,OAAO,IAAIhR,EAAc,CACvBI,WAAYsQ,EAA4BR,GAAiCne,KAAKud,mBAAmBve,Q,CAGrGkF,gBAAgBjE,EAAW1B,GACzB,IAAKyB,KAAKud,mBAAoB,OAAOtd,EACrC,OAAQ1B,GACN,KAAKP,EAAUC,KACf,KAAKD,EAAUE,KACf,KAAKF,EAAUG,WACb,CACE,MAAMghB,EAAqBnf,KAAK4e,qBAAqB3e,EAAY,GACjE,GAAIkf,GAAsB,EAAG,CAC3B,MAAMC,EAAwBD,EAAqBnf,KAAKud,mBAAmBve,OAC3E,GAAIiB,EAAYmf,GAAyBpf,KAAKM,MAAMtB,QAAUogB,GAAyB7gB,IAAcP,EAAUG,WAC7G,OAAOghB,C,CAGX,K,CAEJ,KAAKnhB,EAAUI,MACf,KAAKJ,EAAUK,YACb,CACE,MAAMghB,EAAsBrf,KAAK4e,qBAAqB3e,GACtD,GAAIof,GAAuB,EACzB,OAAOA,EAAsBrf,KAAKud,mBAAmBve,M,EAI7D,OAAOiB,C,CAET0N,WACE,GAAI3N,KAAKM,MAAO,CACd,MAAM8d,EAASpe,KAAKoe,OACpB,IAAIkB,EAAWlB,EAGC,MAAZpe,KAAKD,MAAauf,EAAWxf,KAAKW,IAAI6e,EAAUtf,KAAKD,MACzC,MAAZC,KAAKS,MAAa6e,EAAWxf,KAAKC,IAAIuf,EAAUtf,KAAKS,MACrD6e,IAAalB,IAAQpe,KAAKiK,cAAgBjK,KAAKiP,OAAOqQ,EAAUtf,OACpE,IAAIuf,EAAYvf,KAAKM,MACjBN,KAAKwf,iBAAgBD,EAAYvf,KAAKyf,gBAAgBF,IACtDvf,KAAK0f,oBAAsB1f,KAAKid,MAAQ,IAAGsC,EAAYvf,KAAK2f,oBAAoBJ,IACpFvf,KAAKkK,OAASqV,C,CAEhB9W,MAAMkF,U,CAER8R,gBAAgBnf,GACd,MAAMod,EAAQ1d,KAAKwd,2BAA2Bld,GAAO8Z,MAAMpa,KAAKkd,OAUhE,OAPAQ,EAAM,GAAKA,EAAM,GAAGjf,QAAO,mBAAoB,CAACwa,EAAO2G,EAAMC,EAAO7G,IAAQ4G,EAAO5G,IAE/E1Y,EAAMtB,SAAW,MAAM8gB,KAAKpC,EAAM,MAAKA,EAAM,GAAKA,EAAM,GAAK,KAC7DA,EAAM1e,OAAS,IACjB0e,EAAM,GAAKA,EAAM,GAAGjf,QAAO,MAAQ,IAC9Bif,EAAM,GAAG1e,SAAQ0e,EAAM1e,OAAS,IAEhCgB,KAAKyd,2BAA2BC,EAAMtL,KAAKpS,KAAKkd,O,CAEzDyC,oBAAoBrf,GAClB,IAAKA,EAAO,OAAOA,EACnB,MAAMod,EAAQpd,EAAM8Z,MAAMpa,KAAKkd,OAG/B,OAFIQ,EAAM1e,OAAS,GAAG0e,EAAMlc,KAAK,IACjCkc,EAAM,GAAKA,EAAM,GAAGxE,OAAOlZ,KAAKid,MAAO,KAChCS,EAAMtL,KAAKpS,KAAKkd,M,CAEzBxM,cAAchB,EAAIX,EAAOa,QACT,IAAVb,IACFA,EAAQ,IAEV,MAAMgR,EAAgC,IAAf/f,KAAKid,OAAevN,IAAO1P,KAAKud,qBAAuB7N,IAAO1P,KAAKkd,OAASxN,IAAOoN,EAAa2B,gBAAkBze,KAAKqd,WAAW5f,SAASiS,IAClK,OAAOjH,MAAMiI,cAAchB,EAAIX,EAAOa,KAAemQ,C,CAEnD9V,oBACF,OAAOjK,KAAKwd,2BAA2Bxd,KAAKyf,gBAAgBzf,KAAKM,QAAQ7B,QAAQuB,KAAKkd,MAAOJ,EAAa2B,e,CAExGxU,kBAAcA,GAChBxB,MAAMwB,cAAgBA,C,CAEpBO,iBACF,OAAOxK,KAAKgP,MAAMhP,KAAKiK,cAAejK,K,CAEpCwK,eAAWwV,GACbhgB,KAAKqK,cAAgBrK,KAAKiP,OAAO+Q,EAAGhgB,MAAMvB,QAAQqe,EAAa2B,eAAgBze,KAAKkd,M,CAIlFkB,aACF,OAAOpe,KAAKwK,U,CAEV4T,WAAOA,GACTpe,KAAKwK,WAAa4T,C,CAEhBpB,oBACF,OAAmB,MAAZhd,KAAKD,KAAeC,KAAKD,IAAM,GAAiB,MAAZC,KAAKS,KAAeT,KAAKS,IAAM,C,CAExEmd,oBACF,OAAmB,MAAZ5d,KAAKD,KAAeC,KAAKD,IAAM,GAAiB,MAAZC,KAAKS,KAAeT,KAAKS,IAAM,C,CAE5EiK,iBAAiBpK,GAGf,OAAQmI,MAAMiC,iBAAiBpK,IAAUwc,EAAahL,aAAarU,SAAS6C,IAAUwc,EAAahL,aAAarU,SAASuC,KAAKwK,gBAA4B,IAAVlK,GAA8B,KAAfN,KAAKM,M,CA3PtKrD,YAAYR,GACVgM,MAAM,IACDqU,EAAa/K,YACbtV,G,EA2PTogB,EAAgBC,EAChBA,EAAa2B,eAAiB,IAC9B3B,EAAahL,aAAe,IAAIpD,EAAOoD,aAAc,GACrDgL,EAAa/K,SAAW,CACtBpN,KAAMK,OACNkY,MAAO,IACPK,mBAAoB,GACpBF,WAAY,CAACR,EAAc4B,gBAC3B1e,IAAKiF,OAAOib,iBACZxf,IAAKuE,OAAOkb,iBACZjD,MAAO,EACPuC,gBAAgB,EAChBE,oBAAoB,EACpB1Q,MAAOhK,OACPiK,OAAQ+Q,GAAKA,EAAEG,eAAe,QAAS,CACrCC,aAAa,EACbC,sBAAuB,MAG3B9jB,EAAM0I,aAAe6X,EEjTrB,MAAMwD,EAAY,CAChBC,OAAQ,QACRC,SAAU,gBACVC,MAAO,cAGT,SAASC,EAAWC,EAAKne,EAAM6V,QAChB,IAAT7V,IACFA,EAAO8d,EAAUC,aAER,IAAPlI,IACFA,EAAKiI,EAAUC,QAEjB,MAAMne,EAASwD,EAAW+a,GAC1B,OAAOrgB,GAAS8B,EAAO6O,aAAYyI,IACjCA,EAAElX,GAAQlC,EACHoZ,EAAErB,K,CAQb9b,EAAMqkB,UAAYN,EAClB/jB,EAAMskB,WAAaH,EACnBnkB,EAAMukB,KALN,SAAcxgB,EAAOqE,EAAMnC,EAAM6V,GAC/B,OAAOqI,EAAW/b,EAAMnC,EAAM6V,EAAvBqI,CAA2BpgB,E,EC2GpC/D,EAAMkZ,YAxHN,cAA0BrB,EACpB2M,iBACF,IAAIjjB,EACJ,OAA4G,OAApGA,EAAOT,MAAMC,QAAQ0C,KAAKqV,QAAUrV,KAAKqV,OAAO,GAAKrV,KAAKqV,SAAW2L,IAAW,EAAIhhB,KAAKqV,QAAkBvX,EAAO,C,CAExHmjB,eACF,IAAIC,EACJ,OAA8E,OAAtEA,EAAQ7jB,MAAMC,QAAQ0C,KAAKqV,QAAUrV,KAAKqV,OAAO,GAAKrV,KAAKqV,QAAkB6L,EAAQF,G,CAK/FhX,cAAcvN,GACZgM,MAAMuB,cAAcvN,E,CAEtBmS,QAAQnS,GACN,IAAI0kB,EAAOC,EAAOC,EAClB,MAAMhM,OACJA,KACGE,GACD/P,EAAc/I,GAClBuD,KAAKshB,WAAa5jB,OAAOuD,OAAO,GAAIjB,KAAKshB,WAAY/L,GACrD,MAAMzS,EAAQ8C,EAAW5F,KAAKshB,YAC9BthB,KAAKqV,OAAqG,OAA3F8L,EAA4D,OAAnDC,EAAkB,MAAV/L,EAAiBA,EAASvS,EAAMuS,QAAkB+L,EAAQphB,KAAKqV,QAAkB8L,EAAQH,IAEzHvY,MAAMmG,QAAQ,CACZjK,KAAM,IAAI0Q,OAAOvV,KAAKW,IAAIT,KAAKihB,WAAaD,MAA+C,OAAjCK,EAAgBrhB,KAAK+C,cAAmB,EAASse,EAAcriB,SAAW,EAAGgB,KAAK+gB,aAC5IlM,OAAQ,CACN6E,EAAG5W,GAEL6N,MAAO7N,EAAM6N,MACbR,UAAWrN,EAAMqN,UACjBgB,YAAarO,EAAMqO,YACnB2C,KAAMhR,EAAMgR,KACZH,gBAAiB7Q,EAAM6Q,gBACvBC,YAAa9Q,EAAM8Q,a,CAGvB2N,eAAexL,GACb,OAAIA,EAAK/V,KAAK+C,QAAQ/D,OAAegB,KAAK+C,QAAQgT,GAC9C/V,KAAKihB,WAAaD,KAAYhhB,KAAK+C,QAAQ/D,OAASgB,KAAKihB,UAC3DjhB,KAAK+C,QAAQvB,KAAKoE,EAAW5F,KAAKshB,aAClCthB,KAAK2E,MAAQ,IACN3E,KAAK+C,QAAQ/C,KAAK+C,QAAQ/D,OAAS,SAH5C,C,CAMFyQ,eAAeC,EAAIX,QACH,IAAVA,IACFA,EAAQ,IAEV,MAAMvB,EAAU,IAAIS,EACpB,IAAK,IAAgOnL,EAAO0e,EAAnOzL,EAAuJ,OAAjJ0L,EAAkG,OAAzExL,EAAuBjW,KAAKyE,eAAezE,KAAK2D,aAAa3E,cAAmB,EAASiX,EAAqBjT,OAAiBye,EAAwB3hB,KAAKW,IAAIT,KAAK+C,QAAQ/D,OAAS,EAAG,GAGjO8D,EAAiD,OAAxC4e,EAAmB1hB,KAAK+C,QAAQgT,IAAe2L,EAAmBF,GAAaA,GAAaxhB,KAAKuhB,eAAexL,KAAOA,EAAI,CAClI,IAAI0L,EAAuBxL,EAAsByL,EAAkB1N,EACnE,MAAMoC,EAAetT,EAAM6M,YAAYD,EAAI,IACtCX,EACHuB,iBAAsE,OAAnD0D,EAAwBjF,EAAMuB,mBAAwF,OAA1D0D,EAAwBA,EAAsBjR,cAAmB,EAASiR,EAAsB+B,KAEjL,GAAIK,EAAa9H,MAAQkT,EAAW,CAElCxhB,KAAK+C,QAAQU,MACbzD,KAAK2E,KAAO3E,KAAK2E,KAAKzD,MAAM,GAC5B,K,CAGF,GADAsM,EAAQlL,UAAU8T,GACdA,EAAa7H,SAAU,K,CAE7B,OAAOf,C,CAETmU,eAAetS,EAASC,GACtB,IAAIsS,EAAuBC,OACX,IAAZxS,IACFA,EAAU,GAEZ,MAAMyS,EAAkBhiB,KAAKW,KAA+D,OAAzDmhB,EAAwB5hB,KAAKyE,eAAe4K,SAAoB,EAASuS,EAAsB5e,QAAU,EAAGhD,KAAK+gB,WAAY,GAChK,IAAIgB,EACS,MAATzS,IAAeyS,EAAyE,OAAvDF,EAAwB7hB,KAAKyE,eAAe6K,SAAkB,EAASuS,EAAsB7e,OAC5G,MAAlB+e,IAAwBA,EAAiB/hB,KAAK+C,QAAQ/D,OAAS,GACnE,IAAIgjB,EAAc,EAClB,IAAK,IAAIvP,EAAasP,EAAgBD,GAAmBrP,IACnDzS,KAAK+C,QAAQ0P,GAAYxI,gBADwCwI,IAAcuP,GAGjFA,IACFhiB,KAAK+C,QAAQwK,OAAOwU,EAAiBC,EAAc,EAAGA,GACtDhiB,KAAK2E,KAAO3E,KAAK2E,KAAKzD,MAAM8gB,G,CAGhCnT,QACEpG,MAAMoG,QACN7O,KAAK2hB,gB,CAEP/Q,OAAOvB,EAASC,QACE,IAAZD,IACFA,EAAU,QAEE,IAAVC,IACFA,EAAQtP,KAAK2D,aAAa3E,QAE5B,MAAM0Y,EAAgBjP,MAAMmI,OAAOvB,EAASC,GAE5C,OADAtP,KAAK2hB,eAAetS,EAASC,GACtBoI,C,CAETtI,oBAAoBC,EAASC,GAI3B,YAHgB,IAAZD,IACFA,EAAU,GAEC,MAATC,GAAiBtP,KAAKihB,WAAaD,IAAiBA,IACjDvY,MAAM2G,oBAAoBC,EAASC,E,CAExC7N,YACF,OAAOgH,MAAMhH,K,CAEXA,UAAMA,GACRzB,KAAK+C,QAAQ/D,OAASyC,EAAMsB,QAAQ/D,OACpCgB,KAAK2E,KAAO3E,KAAK2E,KAAKzD,MAAM,EAAGlB,KAAK+C,QAAQ/D,QAC5CyJ,MAAMhH,MAAQA,C,CA5GhBxE,YAAYR,GACVgM,MAAMhM,E,GCIV,IACEwlB,WAAWC,MAAQ3lB,CACb,CAAN,MAAM,CCzBK,IAAIA,EAJEyK,SAASmb,eAAe,SACvB,CAClBxd,KAAM","sources":["node_modules/imask/esm/core/holder.js","node_modules/imask/esm/core/utils.js","node_modules/imask/esm/core/action-details.js","node_modules/imask/esm/controls/input-history.js","node_modules/imask/esm/core/continuous-tail-details.js","node_modules/imask/esm/masked/pattern/cursor.js","node_modules/imask/esm/masked/factory.js","node_modules/imask/esm/controls/mask-element.js","node_modules/imask/esm/controls/html-mask-element.js","node_modules/imask/esm/controls/html-input-mask-element.js","node_modules/imask/esm/controls/html-contenteditable-mask-element.js","node_modules/imask/esm/controls/input.js","node_modules/imask/esm/core/change-details.js","node_modules/imask/esm/masked/base.js","node_modules/imask/esm/masked/pattern/chunk-tail-details.js","node_modules/imask/esm/masked/pattern/fixed-definition.js","node_modules/imask/esm/masked/pattern/input-definition.js","node_modules/imask/esm/masked/regexp.js","node_modules/imask/esm/masked/pattern.js","node_modules/imask/esm/masked/range.js","node_modules/imask/esm/masked/date.js","node_modules/imask/esm/masked/dynamic.js","node_modules/imask/esm/masked/enum.js","node_modules/imask/esm/masked/number.js","node_modules/imask/esm/masked/function.js","node_modules/imask/esm/masked/pipe.js","node_modules/imask/esm/masked/repeat.js","node_modules/imask/esm/index.js","src/index.js"],"sourcesContent":["/** Applies mask on element */\nfunction IMask(el, opts) {\n  // currently available only for input-like elements\n  return new IMask.InputMask(el, opts);\n}\n\nexport { IMask as default };\n","/** Checks if value is string */\nfunction isString(str) {\n  return typeof str === 'string' || str instanceof String;\n}\n\n/** Checks if value is object */\nfunction isObject(obj) {\n  var _obj$constructor;\n  return typeof obj === 'object' && obj != null && (obj == null || (_obj$constructor = obj.constructor) == null ? void 0 : _obj$constructor.name) === 'Object';\n}\nfunction pick(obj, keys) {\n  if (Array.isArray(keys)) return pick(obj, (_, k) => keys.includes(k));\n  return Object.entries(obj).reduce((acc, _ref) => {\n    let [k, v] = _ref;\n    if (keys(v, k)) acc[k] = v;\n    return acc;\n  }, {});\n}\n\n/** Direction */\nconst DIRECTION = {\n  NONE: 'NONE',\n  LEFT: 'LEFT',\n  FORCE_LEFT: 'FORCE_LEFT',\n  RIGHT: 'RIGHT',\n  FORCE_RIGHT: 'FORCE_RIGHT'\n};\n\n/** Direction */\n\nfunction forceDirection(direction) {\n  switch (direction) {\n    case DIRECTION.LEFT:\n      return DIRECTION.FORCE_LEFT;\n    case DIRECTION.RIGHT:\n      return DIRECTION.FORCE_RIGHT;\n    default:\n      return direction;\n  }\n}\n\n/** Escapes regular expression control chars */\nfunction escapeRegExp(str) {\n  return str.replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, '\\\\$1');\n}\n\n// cloned from https://github.com/epoberezkin/fast-deep-equal with small changes\nfunction objectIncludes(b, a) {\n  if (a === b) return true;\n  const arrA = Array.isArray(a),\n    arrB = Array.isArray(b);\n  let i;\n  if (arrA && arrB) {\n    if (a.length != b.length) return false;\n    for (i = 0; i < a.length; i++) if (!objectIncludes(a[i], b[i])) return false;\n    return true;\n  }\n  if (arrA != arrB) return false;\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    const dateA = a instanceof Date,\n      dateB = b instanceof Date;\n    if (dateA && dateB) return a.getTime() == b.getTime();\n    if (dateA != dateB) return false;\n    const regexpA = a instanceof RegExp,\n      regexpB = b instanceof RegExp;\n    if (regexpA && regexpB) return a.toString() == b.toString();\n    if (regexpA != regexpB) return false;\n    const keys = Object.keys(a);\n    // if (keys.length !== Object.keys(b).length) return false;\n\n    for (i = 0; i < keys.length; i++) if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n    for (i = 0; i < keys.length; i++) if (!objectIncludes(b[keys[i]], a[keys[i]])) return false;\n    return true;\n  } else if (a && b && typeof a === 'function' && typeof b === 'function') {\n    return a.toString() === b.toString();\n  }\n  return false;\n}\n\n/** Selection range */\n\nexport { DIRECTION, escapeRegExp, forceDirection, isObject, isString, objectIncludes, pick };\n","import { DIRECTION } from './utils.js';\n\n/** Provides details of changing input */\nclass ActionDetails {\n  /** Current input value */\n\n  /** Current cursor position */\n\n  /** Old input value */\n\n  /** Old selection */\n\n  constructor(opts) {\n    Object.assign(this, opts);\n\n    // double check if left part was changed (autofilling, other non-standard input triggers)\n    while (this.value.slice(0, this.startChangePos) !== this.oldValue.slice(0, this.startChangePos)) {\n      --this.oldSelection.start;\n    }\n\n    // double check right part\n    while (this.value.slice(this.cursorPos) !== this.oldValue.slice(this.oldSelection.end)) {\n      if (this.value.length - this.cursorPos < this.oldValue.length - this.oldSelection.end) ++this.oldSelection.end;else ++this.cursorPos;\n    }\n  }\n\n  /** Start changing position */\n  get startChangePos() {\n    return Math.min(this.cursorPos, this.oldSelection.start);\n  }\n\n  /** Inserted symbols count */\n  get insertedCount() {\n    return this.cursorPos - this.startChangePos;\n  }\n\n  /** Inserted symbols */\n  get inserted() {\n    return this.value.substr(this.startChangePos, this.insertedCount);\n  }\n\n  /** Removed symbols count */\n  get removedCount() {\n    // Math.max for opposite operation\n    return Math.max(this.oldSelection.end - this.startChangePos ||\n    // for Delete\n    this.oldValue.length - this.value.length, 0);\n  }\n\n  /** Removed symbols */\n  get removed() {\n    return this.oldValue.substr(this.startChangePos, this.removedCount);\n  }\n\n  /** Unchanged head symbols */\n  get head() {\n    return this.value.substring(0, this.startChangePos);\n  }\n\n  /** Unchanged tail symbols */\n  get tail() {\n    return this.value.substring(this.startChangePos + this.insertedCount);\n  }\n\n  /** Remove direction */\n  get removeDirection() {\n    if (!this.removedCount || this.insertedCount) return DIRECTION.NONE;\n\n    // align right if delete at right\n    return (this.oldSelection.end === this.cursorPos || this.oldSelection.start === this.cursorPos) &&\n    // if not range removed (event with backspace)\n    this.oldSelection.end === this.oldSelection.start ? DIRECTION.RIGHT : DIRECTION.LEFT;\n  }\n}\n\nexport { ActionDetails as default };\n","class InputHistory {\n  constructor() {\n    this.states = [];\n    this.currentIndex = 0;\n  }\n  get currentState() {\n    return this.states[this.currentIndex];\n  }\n  get isEmpty() {\n    return this.states.length === 0;\n  }\n  push(state) {\n    // if current index points before the last element then remove the future\n    if (this.currentIndex < this.states.length - 1) this.states.length = this.currentIndex + 1;\n    this.states.push(state);\n    if (this.states.length > InputHistory.MAX_LENGTH) this.states.shift();\n    this.currentIndex = this.states.length - 1;\n  }\n  go(steps) {\n    this.currentIndex = Math.min(Math.max(this.currentIndex + steps, 0), this.states.length - 1);\n    return this.currentState;\n  }\n  undo() {\n    return this.go(-1);\n  }\n  redo() {\n    return this.go(+1);\n  }\n  clear() {\n    this.states.length = 0;\n    this.currentIndex = 0;\n  }\n}\nInputHistory.MAX_LENGTH = 100;\n\nexport { InputHistory as default };\n","/** Provides details of continuous extracted tail */\nclass ContinuousTailDetails {\n  /** Tail value as string */\n\n  /** Tail start position */\n\n  /** Start position */\n\n  constructor(value, from, stop) {\n    if (value === void 0) {\n      value = '';\n    }\n    if (from === void 0) {\n      from = 0;\n    }\n    this.value = value;\n    this.from = from;\n    this.stop = stop;\n  }\n  toString() {\n    return this.value;\n  }\n  extend(tail) {\n    this.value += String(tail);\n  }\n  appendTo(masked) {\n    return masked.append(this.toString(), {\n      tail: true\n    }).aggregate(masked._appendPlaceholder());\n  }\n  get state() {\n    return {\n      value: this.value,\n      from: this.from,\n      stop: this.stop\n    };\n  }\n  set state(state) {\n    Object.assign(this, state);\n  }\n  unshift(beforePos) {\n    if (!this.value.length || beforePos != null && this.from >= beforePos) return '';\n    const shiftChar = this.value[0];\n    this.value = this.value.slice(1);\n    return shiftChar;\n  }\n  shift() {\n    if (!this.value.length) return '';\n    const shiftChar = this.value[this.value.length - 1];\n    this.value = this.value.slice(0, -1);\n    return shiftChar;\n  }\n}\n\nexport { ContinuousTailDetails as default };\n","import { DIRECTION } from '../../core/utils.js';\n\nclass PatternCursor {\n  constructor(masked, pos) {\n    this.masked = masked;\n    this._log = [];\n    const {\n      offset,\n      index\n    } = masked._mapPosToBlock(pos) || (pos < 0 ?\n    // first\n    {\n      index: 0,\n      offset: 0\n    } :\n    // last\n    {\n      index: this.masked._blocks.length,\n      offset: 0\n    });\n    this.offset = offset;\n    this.index = index;\n    this.ok = false;\n  }\n  get block() {\n    return this.masked._blocks[this.index];\n  }\n  get pos() {\n    return this.masked._blockStartPos(this.index) + this.offset;\n  }\n  get state() {\n    return {\n      index: this.index,\n      offset: this.offset,\n      ok: this.ok\n    };\n  }\n  set state(s) {\n    Object.assign(this, s);\n  }\n  pushState() {\n    this._log.push(this.state);\n  }\n  popState() {\n    const s = this._log.pop();\n    if (s) this.state = s;\n    return s;\n  }\n  bindBlock() {\n    if (this.block) return;\n    if (this.index < 0) {\n      this.index = 0;\n      this.offset = 0;\n    }\n    if (this.index >= this.masked._blocks.length) {\n      this.index = this.masked._blocks.length - 1;\n      this.offset = this.block.displayValue.length; // TODO this is stupid type error, `block` depends on index that was changed above\n    }\n  }\n  _pushLeft(fn) {\n    this.pushState();\n    for (this.bindBlock(); 0 <= this.index; --this.index, this.offset = ((_this$block = this.block) == null ? void 0 : _this$block.displayValue.length) || 0) {\n      var _this$block;\n      if (fn()) return this.ok = true;\n    }\n    return this.ok = false;\n  }\n  _pushRight(fn) {\n    this.pushState();\n    for (this.bindBlock(); this.index < this.masked._blocks.length; ++this.index, this.offset = 0) {\n      if (fn()) return this.ok = true;\n    }\n    return this.ok = false;\n  }\n  pushLeftBeforeFilled() {\n    return this._pushLeft(() => {\n      if (this.block.isFixed || !this.block.value) return;\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.FORCE_LEFT);\n      if (this.offset !== 0) return true;\n    });\n  }\n  pushLeftBeforeInput() {\n    // cases:\n    // filled input: 00|\n    // optional empty input: 00[]|\n    // nested block: XX<[]>|\n    return this._pushLeft(() => {\n      if (this.block.isFixed) return;\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.LEFT);\n      return true;\n    });\n  }\n  pushLeftBeforeRequired() {\n    return this._pushLeft(() => {\n      if (this.block.isFixed || this.block.isOptional && !this.block.value) return;\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.LEFT);\n      return true;\n    });\n  }\n  pushRightBeforeFilled() {\n    return this._pushRight(() => {\n      if (this.block.isFixed || !this.block.value) return;\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.FORCE_RIGHT);\n      if (this.offset !== this.block.value.length) return true;\n    });\n  }\n  pushRightBeforeInput() {\n    return this._pushRight(() => {\n      if (this.block.isFixed) return;\n\n      // const o = this.offset;\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.NONE);\n      // HACK cases like (STILL DOES NOT WORK FOR NESTED)\n      // aa|X\n      // aa<X|[]>X_    - this will not work\n      // if (o && o === this.offset && this.block instanceof PatternInputDefinition) continue;\n      return true;\n    });\n  }\n  pushRightBeforeRequired() {\n    return this._pushRight(() => {\n      if (this.block.isFixed || this.block.isOptional && !this.block.value) return;\n\n      // TODO check |[*]XX_\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.NONE);\n      return true;\n    });\n  }\n}\n\nexport { PatternCursor as default };\n","import { isString, isObject, pick } from '../core/utils.js';\nimport IMask from '../core/holder.js';\n\n// TODO can't use overloads here because of https://github.com/microsoft/TypeScript/issues/50754\n// export function maskedClass(mask: string): typeof MaskedPattern;\n// export function maskedClass(mask: DateConstructor): typeof MaskedDate;\n// export function maskedClass(mask: NumberConstructor): typeof MaskedNumber;\n// export function maskedClass(mask: Array<any> | ArrayConstructor): typeof MaskedDynamic;\n// export function maskedClass(mask: MaskedDate): typeof MaskedDate;\n// export function maskedClass(mask: MaskedNumber): typeof MaskedNumber;\n// export function maskedClass(mask: MaskedEnum): typeof MaskedEnum;\n// export function maskedClass(mask: MaskedRange): typeof MaskedRange;\n// export function maskedClass(mask: MaskedRegExp): typeof MaskedRegExp;\n// export function maskedClass(mask: MaskedFunction): typeof MaskedFunction;\n// export function maskedClass(mask: MaskedPattern): typeof MaskedPattern;\n// export function maskedClass(mask: MaskedDynamic): typeof MaskedDynamic;\n// export function maskedClass(mask: Masked): typeof Masked;\n// export function maskedClass(mask: typeof Masked): typeof Masked;\n// export function maskedClass(mask: typeof MaskedDate): typeof MaskedDate;\n// export function maskedClass(mask: typeof MaskedNumber): typeof MaskedNumber;\n// export function maskedClass(mask: typeof MaskedEnum): typeof MaskedEnum;\n// export function maskedClass(mask: typeof MaskedRange): typeof MaskedRange;\n// export function maskedClass(mask: typeof MaskedRegExp): typeof MaskedRegExp;\n// export function maskedClass(mask: typeof MaskedFunction): typeof MaskedFunction;\n// export function maskedClass(mask: typeof MaskedPattern): typeof MaskedPattern;\n// export function maskedClass(mask: typeof MaskedDynamic): typeof MaskedDynamic;\n// export function maskedClass<Mask extends typeof Masked> (mask: Mask): Mask;\n// export function maskedClass(mask: RegExp): typeof MaskedRegExp;\n// export function maskedClass(mask: (value: string, ...args: any[]) => boolean): typeof MaskedFunction;\n\n/** Get Masked class by mask type */\nfunction maskedClass(mask) /* TODO */{\n  if (mask == null) throw new Error('mask property should be defined');\n  if (mask instanceof RegExp) return IMask.MaskedRegExp;\n  if (isString(mask)) return IMask.MaskedPattern;\n  if (mask === Date) return IMask.MaskedDate;\n  if (mask === Number) return IMask.MaskedNumber;\n  if (Array.isArray(mask) || mask === Array) return IMask.MaskedDynamic;\n  if (IMask.Masked && mask.prototype instanceof IMask.Masked) return mask;\n  if (IMask.Masked && mask instanceof IMask.Masked) return mask.constructor;\n  if (mask instanceof Function) return IMask.MaskedFunction;\n  console.warn('Mask not found for mask', mask); // eslint-disable-line no-console\n  return IMask.Masked;\n}\nfunction normalizeOpts(opts) {\n  if (!opts) throw new Error('Options in not defined');\n  if (IMask.Masked) {\n    if (opts.prototype instanceof IMask.Masked) return {\n      mask: opts\n    };\n\n    /*\n      handle cases like:\n      1) opts = Masked\n      2) opts = { mask: Masked, ...instanceOpts }\n    */\n    const {\n      mask = undefined,\n      ...instanceOpts\n    } = opts instanceof IMask.Masked ? {\n      mask: opts\n    } : isObject(opts) && opts.mask instanceof IMask.Masked ? opts : {};\n    if (mask) {\n      const _mask = mask.mask;\n      return {\n        ...pick(mask, (_, k) => !k.startsWith('_')),\n        mask: mask.constructor,\n        _mask,\n        ...instanceOpts\n      };\n    }\n  }\n  if (!isObject(opts)) return {\n    mask: opts\n  };\n  return {\n    ...opts\n  };\n}\n\n// TODO can't use overloads here because of https://github.com/microsoft/TypeScript/issues/50754\n\n// From masked\n// export default function createMask<Opts extends Masked, ReturnMasked=Opts> (opts: Opts): ReturnMasked;\n// // From masked class\n// export default function createMask<Opts extends MaskedOptions<typeof Masked>, ReturnMasked extends Masked=InstanceType<Opts['mask']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedDate>, ReturnMasked extends MaskedDate=MaskedDate<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedNumber>, ReturnMasked extends MaskedNumber=MaskedNumber<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedEnum>, ReturnMasked extends MaskedEnum=MaskedEnum<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedRange>, ReturnMasked extends MaskedRange=MaskedRange<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedRegExp>, ReturnMasked extends MaskedRegExp=MaskedRegExp<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedFunction>, ReturnMasked extends MaskedFunction=MaskedFunction<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedPattern>, ReturnMasked extends MaskedPattern=MaskedPattern<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedDynamic>, ReturnMasked extends MaskedDynamic=MaskedDynamic<Opts['parent']>> (opts: Opts): ReturnMasked;\n// // From mask opts\n// export default function createMask<Opts extends MaskedOptions<Masked>, ReturnMasked=Opts extends MaskedOptions<infer M> ? M : never> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedNumberOptions, ReturnMasked extends MaskedNumber=MaskedNumber<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedDateFactoryOptions, ReturnMasked extends MaskedDate=MaskedDate<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedEnumOptions, ReturnMasked extends MaskedEnum=MaskedEnum<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedRangeOptions, ReturnMasked extends MaskedRange=MaskedRange<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedPatternOptions, ReturnMasked extends MaskedPattern=MaskedPattern<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedDynamicOptions, ReturnMasked extends MaskedDynamic=MaskedDynamic<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<RegExp>, ReturnMasked extends MaskedRegExp=MaskedRegExp<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<Function>, ReturnMasked extends MaskedFunction=MaskedFunction<Opts['parent']>> (opts: Opts): ReturnMasked;\n\n/** Creates new {@link Masked} depending on mask type */\nfunction createMask(opts) {\n  if (IMask.Masked && opts instanceof IMask.Masked) return opts;\n  const nOpts = normalizeOpts(opts);\n  const MaskedClass = maskedClass(nOpts.mask);\n  if (!MaskedClass) throw new Error(\"Masked class is not found for provided mask \" + nOpts.mask + \", appropriate module needs to be imported manually before creating mask.\");\n  if (nOpts.mask === MaskedClass) delete nOpts.mask;\n  if (nOpts._mask) {\n    nOpts.mask = nOpts._mask;\n    delete nOpts._mask;\n  }\n  return new MaskedClass(nOpts);\n}\nIMask.createMask = createMask;\n\nexport { createMask as default, maskedClass, normalizeOpts };\n","import IMask from '../core/holder.js';\n\n/**  Generic element API to use with mask */\nclass MaskElement {\n  /** */\n\n  /** */\n\n  /** */\n\n  /** Safely returns selection start */\n  get selectionStart() {\n    let start;\n    try {\n      start = this._unsafeSelectionStart;\n    } catch {}\n    return start != null ? start : this.value.length;\n  }\n\n  /** Safely returns selection end */\n  get selectionEnd() {\n    let end;\n    try {\n      end = this._unsafeSelectionEnd;\n    } catch {}\n    return end != null ? end : this.value.length;\n  }\n\n  /** Safely sets element selection */\n  select(start, end) {\n    if (start == null || end == null || start === this.selectionStart && end === this.selectionEnd) return;\n    try {\n      this._unsafeSelect(start, end);\n    } catch {}\n  }\n\n  /** */\n  get isActive() {\n    return false;\n  }\n  /** */\n\n  /** */\n\n  /** */\n}\nIMask.MaskElement = MaskElement;\n\nexport { MaskElement as default };\n","import MaskElement from './mask-element.js';\nimport IMask from '../core/holder.js';\n\nconst KEY_Z = 90;\nconst KEY_Y = 89;\n\n/** Bridge between HTMLElement and {@link Masked} */\nclass HTMLMaskElement extends MaskElement {\n  /** HTMLElement to use mask on */\n\n  constructor(input) {\n    super();\n    this.input = input;\n    this._onKeydown = this._onKeydown.bind(this);\n    this._onInput = this._onInput.bind(this);\n    this._onBeforeinput = this._onBeforeinput.bind(this);\n    this._onCompositionEnd = this._onCompositionEnd.bind(this);\n  }\n  get rootElement() {\n    var _this$input$getRootNo, _this$input$getRootNo2, _this$input;\n    return (_this$input$getRootNo = (_this$input$getRootNo2 = (_this$input = this.input).getRootNode) == null ? void 0 : _this$input$getRootNo2.call(_this$input)) != null ? _this$input$getRootNo : document;\n  }\n\n  /** Is element in focus */\n  get isActive() {\n    return this.input === this.rootElement.activeElement;\n  }\n\n  /** Binds HTMLElement events to mask internal events */\n  bindEvents(handlers) {\n    this.input.addEventListener('keydown', this._onKeydown);\n    this.input.addEventListener('input', this._onInput);\n    this.input.addEventListener('beforeinput', this._onBeforeinput);\n    this.input.addEventListener('compositionend', this._onCompositionEnd);\n    this.input.addEventListener('drop', handlers.drop);\n    this.input.addEventListener('click', handlers.click);\n    this.input.addEventListener('focus', handlers.focus);\n    this.input.addEventListener('blur', handlers.commit);\n    this._handlers = handlers;\n  }\n  _onKeydown(e) {\n    if (this._handlers.redo && (e.keyCode === KEY_Z && e.shiftKey && (e.metaKey || e.ctrlKey) || e.keyCode === KEY_Y && e.ctrlKey)) {\n      e.preventDefault();\n      return this._handlers.redo(e);\n    }\n    if (this._handlers.undo && e.keyCode === KEY_Z && (e.metaKey || e.ctrlKey)) {\n      e.preventDefault();\n      return this._handlers.undo(e);\n    }\n    if (!e.isComposing) this._handlers.selectionChange(e);\n  }\n  _onBeforeinput(e) {\n    if (e.inputType === 'historyUndo' && this._handlers.undo) {\n      e.preventDefault();\n      return this._handlers.undo(e);\n    }\n    if (e.inputType === 'historyRedo' && this._handlers.redo) {\n      e.preventDefault();\n      return this._handlers.redo(e);\n    }\n  }\n  _onCompositionEnd(e) {\n    this._handlers.input(e);\n  }\n  _onInput(e) {\n    if (!e.isComposing) this._handlers.input(e);\n  }\n\n  /** Unbinds HTMLElement events to mask internal events */\n  unbindEvents() {\n    this.input.removeEventListener('keydown', this._onKeydown);\n    this.input.removeEventListener('input', this._onInput);\n    this.input.removeEventListener('beforeinput', this._onBeforeinput);\n    this.input.removeEventListener('compositionend', this._onCompositionEnd);\n    this.input.removeEventListener('drop', this._handlers.drop);\n    this.input.removeEventListener('click', this._handlers.click);\n    this.input.removeEventListener('focus', this._handlers.focus);\n    this.input.removeEventListener('blur', this._handlers.commit);\n    this._handlers = {};\n  }\n}\nIMask.HTMLMaskElement = HTMLMaskElement;\n\nexport { HTMLMaskElement as default };\n","import HTMLMaskElement from './html-mask-element.js';\nimport IMask from '../core/holder.js';\nimport './mask-element.js';\n\n/** Bridge between InputElement and {@link Masked} */\nclass HTMLInputMaskElement extends HTMLMaskElement {\n  /** InputElement to use mask on */\n\n  constructor(input) {\n    super(input);\n    this.input = input;\n  }\n\n  /** Returns InputElement selection start */\n  get _unsafeSelectionStart() {\n    return this.input.selectionStart != null ? this.input.selectionStart : this.value.length;\n  }\n\n  /** Returns InputElement selection end */\n  get _unsafeSelectionEnd() {\n    return this.input.selectionEnd;\n  }\n\n  /** Sets InputElement selection */\n  _unsafeSelect(start, end) {\n    this.input.setSelectionRange(start, end);\n  }\n  get value() {\n    return this.input.value;\n  }\n  set value(value) {\n    this.input.value = value;\n  }\n}\nIMask.HTMLMaskElement = HTMLMaskElement;\n\nexport { HTMLInputMaskElement as default };\n","import HTMLMaskElement from './html-mask-element.js';\nimport IMask from '../core/holder.js';\nimport './mask-element.js';\n\nclass HTMLContenteditableMaskElement extends HTMLMaskElement {\n  /** Returns HTMLElement selection start */\n  get _unsafeSelectionStart() {\n    const root = this.rootElement;\n    const selection = root.getSelection && root.getSelection();\n    const anchorOffset = selection && selection.anchorOffset;\n    const focusOffset = selection && selection.focusOffset;\n    if (focusOffset == null || anchorOffset == null || anchorOffset < focusOffset) {\n      return anchorOffset;\n    }\n    return focusOffset;\n  }\n\n  /** Returns HTMLElement selection end */\n  get _unsafeSelectionEnd() {\n    const root = this.rootElement;\n    const selection = root.getSelection && root.getSelection();\n    const anchorOffset = selection && selection.anchorOffset;\n    const focusOffset = selection && selection.focusOffset;\n    if (focusOffset == null || anchorOffset == null || anchorOffset > focusOffset) {\n      return anchorOffset;\n    }\n    return focusOffset;\n  }\n\n  /** Sets HTMLElement selection */\n  _unsafeSelect(start, end) {\n    if (!this.rootElement.createRange) return;\n    const range = this.rootElement.createRange();\n    range.setStart(this.input.firstChild || this.input, start);\n    range.setEnd(this.input.lastChild || this.input, end);\n    const root = this.rootElement;\n    const selection = root.getSelection && root.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(range);\n    }\n  }\n\n  /** HTMLElement value */\n  get value() {\n    return this.input.textContent || '';\n  }\n  set value(value) {\n    this.input.textContent = value;\n  }\n}\nIMask.HTMLContenteditableMaskElement = HTMLContenteditableMaskElement;\n\nexport { HTMLContenteditableMaskElement as default };\n","import { DIRECTION } from '../core/utils.js';\nimport ActionDetails from '../core/action-details.js';\nimport createMask, { maskedClass } from '../masked/factory.js';\nimport MaskElement from './mask-element.js';\nimport HTMLInputMaskElement from './html-input-mask-element.js';\nimport HTMLContenteditableMaskElement from './html-contenteditable-mask-element.js';\nimport IMask from '../core/holder.js';\nimport InputHistory from './input-history.js';\nimport './html-mask-element.js';\n\n/** Listens to element events and controls changes between element and {@link Masked} */\nclass InputMask {\n  /**\n    View element\n  */\n\n  /** Internal {@link Masked} model */\n\n  constructor(el, opts) {\n    this.el = el instanceof MaskElement ? el : el.isContentEditable && el.tagName !== 'INPUT' && el.tagName !== 'TEXTAREA' ? new HTMLContenteditableMaskElement(el) : new HTMLInputMaskElement(el);\n    this.masked = createMask(opts);\n    this._listeners = {};\n    this._value = '';\n    this._unmaskedValue = '';\n    this._rawInputValue = '';\n    this.history = new InputHistory();\n    this._saveSelection = this._saveSelection.bind(this);\n    this._onInput = this._onInput.bind(this);\n    this._onChange = this._onChange.bind(this);\n    this._onDrop = this._onDrop.bind(this);\n    this._onFocus = this._onFocus.bind(this);\n    this._onClick = this._onClick.bind(this);\n    this._onUndo = this._onUndo.bind(this);\n    this._onRedo = this._onRedo.bind(this);\n    this.alignCursor = this.alignCursor.bind(this);\n    this.alignCursorFriendly = this.alignCursorFriendly.bind(this);\n    this._bindEvents();\n\n    // refresh\n    this.updateValue();\n    this._onChange();\n  }\n  maskEquals(mask) {\n    var _this$masked;\n    return mask == null || ((_this$masked = this.masked) == null ? void 0 : _this$masked.maskEquals(mask));\n  }\n\n  /** Masked */\n  get mask() {\n    return this.masked.mask;\n  }\n  set mask(mask) {\n    if (this.maskEquals(mask)) return;\n    if (!(mask instanceof IMask.Masked) && this.masked.constructor === maskedClass(mask)) {\n      // TODO \"any\" no idea\n      this.masked.updateOptions({\n        mask\n      });\n      return;\n    }\n    const masked = mask instanceof IMask.Masked ? mask : createMask({\n      mask\n    });\n    masked.unmaskedValue = this.masked.unmaskedValue;\n    this.masked = masked;\n  }\n\n  /** Raw value */\n  get value() {\n    return this._value;\n  }\n  set value(str) {\n    if (this.value === str) return;\n    this.masked.value = str;\n    this.updateControl('auto');\n  }\n\n  /** Unmasked value */\n  get unmaskedValue() {\n    return this._unmaskedValue;\n  }\n  set unmaskedValue(str) {\n    if (this.unmaskedValue === str) return;\n    this.masked.unmaskedValue = str;\n    this.updateControl('auto');\n  }\n\n  /** Raw input value */\n  get rawInputValue() {\n    return this._rawInputValue;\n  }\n  set rawInputValue(str) {\n    if (this.rawInputValue === str) return;\n    this.masked.rawInputValue = str;\n    this.updateControl();\n    this.alignCursor();\n  }\n\n  /** Typed unmasked value */\n  get typedValue() {\n    return this.masked.typedValue;\n  }\n  set typedValue(val) {\n    if (this.masked.typedValueEquals(val)) return;\n    this.masked.typedValue = val;\n    this.updateControl('auto');\n  }\n\n  /** Display value */\n  get displayValue() {\n    return this.masked.displayValue;\n  }\n\n  /** Starts listening to element events */\n  _bindEvents() {\n    this.el.bindEvents({\n      selectionChange: this._saveSelection,\n      input: this._onInput,\n      drop: this._onDrop,\n      click: this._onClick,\n      focus: this._onFocus,\n      commit: this._onChange,\n      undo: this._onUndo,\n      redo: this._onRedo\n    });\n  }\n\n  /** Stops listening to element events */\n  _unbindEvents() {\n    if (this.el) this.el.unbindEvents();\n  }\n\n  /** Fires custom event */\n  _fireEvent(ev, e) {\n    const listeners = this._listeners[ev];\n    if (!listeners) return;\n    listeners.forEach(l => l(e));\n  }\n\n  /** Current selection start */\n  get selectionStart() {\n    return this._cursorChanging ? this._changingCursorPos : this.el.selectionStart;\n  }\n\n  /** Current cursor position */\n  get cursorPos() {\n    return this._cursorChanging ? this._changingCursorPos : this.el.selectionEnd;\n  }\n  set cursorPos(pos) {\n    if (!this.el || !this.el.isActive) return;\n    this.el.select(pos, pos);\n    this._saveSelection();\n  }\n\n  /** Stores current selection */\n  _saveSelection( /* ev */\n  ) {\n    if (this.displayValue !== this.el.value) {\n      console.warn('Element value was changed outside of mask. Syncronize mask using `mask.updateValue()` to work properly.'); // eslint-disable-line no-console\n    }\n    this._selection = {\n      start: this.selectionStart,\n      end: this.cursorPos\n    };\n  }\n\n  /** Syncronizes model value from view */\n  updateValue() {\n    this.masked.value = this.el.value;\n    this._value = this.masked.value;\n  }\n\n  /** Syncronizes view from model value, fires change events */\n  updateControl(cursorPos) {\n    const newUnmaskedValue = this.masked.unmaskedValue;\n    const newValue = this.masked.value;\n    const newRawInputValue = this.masked.rawInputValue;\n    const newDisplayValue = this.displayValue;\n    const isChanged = this.unmaskedValue !== newUnmaskedValue || this.value !== newValue || this._rawInputValue !== newRawInputValue;\n    this._unmaskedValue = newUnmaskedValue;\n    this._value = newValue;\n    this._rawInputValue = newRawInputValue;\n    if (this.el.value !== newDisplayValue) this.el.value = newDisplayValue;\n    if (cursorPos === 'auto') this.alignCursor();else if (cursorPos != null) this.cursorPos = cursorPos;\n    if (isChanged) this._fireChangeEvents();\n    if (!this._historyChanging && (isChanged || this.history.isEmpty)) this.history.push({\n      unmaskedValue: newUnmaskedValue,\n      selection: {\n        start: this.selectionStart,\n        end: this.cursorPos\n      }\n    });\n  }\n\n  /** Updates options with deep equal check, recreates {@link Masked} model if mask type changes */\n  updateOptions(opts) {\n    const {\n      mask,\n      ...restOpts\n    } = opts; // TODO types, yes, mask is optional\n\n    const updateMask = !this.maskEquals(mask);\n    const updateOpts = this.masked.optionsIsChanged(restOpts);\n    if (updateMask) this.mask = mask;\n    if (updateOpts) this.masked.updateOptions(restOpts); // TODO\n\n    if (updateMask || updateOpts) this.updateControl();\n  }\n\n  /** Updates cursor */\n  updateCursor(cursorPos) {\n    if (cursorPos == null) return;\n    this.cursorPos = cursorPos;\n\n    // also queue change cursor for mobile browsers\n    this._delayUpdateCursor(cursorPos);\n  }\n\n  /** Delays cursor update to support mobile browsers */\n  _delayUpdateCursor(cursorPos) {\n    this._abortUpdateCursor();\n    this._changingCursorPos = cursorPos;\n    this._cursorChanging = setTimeout(() => {\n      if (!this.el) return; // if was destroyed\n      this.cursorPos = this._changingCursorPos;\n      this._abortUpdateCursor();\n    }, 10);\n  }\n\n  /** Fires custom events */\n  _fireChangeEvents() {\n    this._fireEvent('accept', this._inputEvent);\n    if (this.masked.isComplete) this._fireEvent('complete', this._inputEvent);\n  }\n\n  /** Aborts delayed cursor update */\n  _abortUpdateCursor() {\n    if (this._cursorChanging) {\n      clearTimeout(this._cursorChanging);\n      delete this._cursorChanging;\n    }\n  }\n\n  /** Aligns cursor to nearest available position */\n  alignCursor() {\n    this.cursorPos = this.masked.nearestInputPos(this.masked.nearestInputPos(this.cursorPos, DIRECTION.LEFT));\n  }\n\n  /** Aligns cursor only if selection is empty */\n  alignCursorFriendly() {\n    if (this.selectionStart !== this.cursorPos) return; // skip if range is selected\n    this.alignCursor();\n  }\n\n  /** Adds listener on custom event */\n  on(ev, handler) {\n    if (!this._listeners[ev]) this._listeners[ev] = [];\n    this._listeners[ev].push(handler);\n    return this;\n  }\n\n  /** Removes custom event listener */\n  off(ev, handler) {\n    if (!this._listeners[ev]) return this;\n    if (!handler) {\n      delete this._listeners[ev];\n      return this;\n    }\n    const hIndex = this._listeners[ev].indexOf(handler);\n    if (hIndex >= 0) this._listeners[ev].splice(hIndex, 1);\n    return this;\n  }\n\n  /** Handles view input event */\n  _onInput(e) {\n    this._inputEvent = e;\n    this._abortUpdateCursor();\n    const details = new ActionDetails({\n      // new state\n      value: this.el.value,\n      cursorPos: this.cursorPos,\n      // old state\n      oldValue: this.displayValue,\n      oldSelection: this._selection\n    });\n    const oldRawValue = this.masked.rawInputValue;\n    const offset = this.masked.splice(details.startChangePos, details.removed.length, details.inserted, details.removeDirection, {\n      input: true,\n      raw: true\n    }).offset;\n\n    // force align in remove direction only if no input chars were removed\n    // otherwise we still need to align with NONE (to get out from fixed symbols for instance)\n    const removeDirection = oldRawValue === this.masked.rawInputValue ? details.removeDirection : DIRECTION.NONE;\n    let cursorPos = this.masked.nearestInputPos(details.startChangePos + offset, removeDirection);\n    if (removeDirection !== DIRECTION.NONE) cursorPos = this.masked.nearestInputPos(cursorPos, DIRECTION.NONE);\n    this.updateControl(cursorPos);\n    delete this._inputEvent;\n  }\n\n  /** Handles view change event and commits model value */\n  _onChange() {\n    if (this.displayValue !== this.el.value) {\n      this.updateValue();\n    }\n    this.masked.doCommit();\n    this.updateControl();\n    this._saveSelection();\n  }\n\n  /** Handles view drop event, prevents by default */\n  _onDrop(ev) {\n    ev.preventDefault();\n    ev.stopPropagation();\n  }\n\n  /** Restore last selection on focus */\n  _onFocus(ev) {\n    this.alignCursorFriendly();\n  }\n\n  /** Restore last selection on focus */\n  _onClick(ev) {\n    this.alignCursorFriendly();\n  }\n  _onUndo() {\n    this._applyHistoryState(this.history.undo());\n  }\n  _onRedo() {\n    this._applyHistoryState(this.history.redo());\n  }\n  _applyHistoryState(state) {\n    if (!state) return;\n    this._historyChanging = true;\n    this.unmaskedValue = state.unmaskedValue;\n    this.el.select(state.selection.start, state.selection.end);\n    this._saveSelection();\n    this._historyChanging = false;\n  }\n\n  /** Unbind view events and removes element reference */\n  destroy() {\n    this._unbindEvents();\n    this._listeners.length = 0;\n    delete this.el;\n  }\n}\nIMask.InputMask = InputMask;\n\nexport { InputMask as default };\n","import IMask from './holder.js';\n\n/** Provides details of changing model value */\nclass ChangeDetails {\n  /** Inserted symbols */\n\n  /** Additional offset if any changes occurred before tail */\n\n  /** Raw inserted is used by dynamic mask */\n\n  /** Can skip chars */\n\n  static normalize(prep) {\n    return Array.isArray(prep) ? prep : [prep, new ChangeDetails()];\n  }\n  constructor(details) {\n    Object.assign(this, {\n      inserted: '',\n      rawInserted: '',\n      tailShift: 0,\n      skip: false\n    }, details);\n  }\n\n  /** Aggregate changes */\n  aggregate(details) {\n    this.inserted += details.inserted;\n    this.rawInserted += details.rawInserted;\n    this.tailShift += details.tailShift;\n    this.skip = this.skip || details.skip;\n    return this;\n  }\n\n  /** Total offset considering all changes */\n  get offset() {\n    return this.tailShift + this.inserted.length;\n  }\n  get consumed() {\n    return Boolean(this.rawInserted) || this.skip;\n  }\n}\nIMask.ChangeDetails = ChangeDetails;\n\nexport { ChangeDetails as default };\n","import ChangeDetails from '../core/change-details.js';\nimport ContinuousTailDetails from '../core/continuous-tail-details.js';\nimport { isString, DIRECTION, objectIncludes, forceDirection } from '../core/utils.js';\nimport IMask from '../core/holder.js';\n\n/** Append flags */\n\n/** Extract flags */\n\n// see https://github.com/microsoft/TypeScript/issues/6223\n\n/** Provides common masking stuff */\nclass Masked {\n  /** */\n\n  /** */\n\n  /** Transforms value before mask processing */\n\n  /** Transforms each char before mask processing */\n\n  /** Validates if value is acceptable */\n\n  /** Does additional processing at the end of editing */\n\n  /** Format typed value to string */\n\n  /** Parse string to get typed value */\n\n  /** Enable characters overwriting */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  constructor(opts) {\n    this._value = '';\n    this._update({\n      ...Masked.DEFAULTS,\n      ...opts\n    });\n    this._initialized = true;\n  }\n\n  /** Sets and applies new options */\n  updateOptions(opts) {\n    if (!this.optionsIsChanged(opts)) return;\n    this.withValueRefresh(this._update.bind(this, opts));\n  }\n\n  /** Sets new options */\n  _update(opts) {\n    Object.assign(this, opts);\n  }\n\n  /** Mask state */\n  get state() {\n    return {\n      _value: this.value,\n      _rawInputValue: this.rawInputValue\n    };\n  }\n  set state(state) {\n    this._value = state._value;\n  }\n\n  /** Resets value */\n  reset() {\n    this._value = '';\n  }\n  get value() {\n    return this._value;\n  }\n  set value(value) {\n    this.resolve(value, {\n      input: true\n    });\n  }\n\n  /** Resolve new value */\n  resolve(value, flags) {\n    if (flags === void 0) {\n      flags = {\n        input: true\n      };\n    }\n    this.reset();\n    this.append(value, flags, '');\n    this.doCommit();\n  }\n  get unmaskedValue() {\n    return this.value;\n  }\n  set unmaskedValue(value) {\n    this.resolve(value, {});\n  }\n  get typedValue() {\n    return this.parse ? this.parse(this.value, this) : this.unmaskedValue;\n  }\n  set typedValue(value) {\n    if (this.format) {\n      this.value = this.format(value, this);\n    } else {\n      this.unmaskedValue = String(value);\n    }\n  }\n\n  /** Value that includes raw user input */\n  get rawInputValue() {\n    return this.extractInput(0, this.displayValue.length, {\n      raw: true\n    });\n  }\n  set rawInputValue(value) {\n    this.resolve(value, {\n      raw: true\n    });\n  }\n  get displayValue() {\n    return this.value;\n  }\n  get isComplete() {\n    return true;\n  }\n  get isFilled() {\n    return this.isComplete;\n  }\n\n  /** Finds nearest input position in direction */\n  nearestInputPos(cursorPos, direction) {\n    return cursorPos;\n  }\n  totalInputPositions(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    return Math.min(this.displayValue.length, toPos - fromPos);\n  }\n\n  /** Extracts value in range considering flags */\n  extractInput(fromPos, toPos, flags) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    return this.displayValue.slice(fromPos, toPos);\n  }\n\n  /** Extracts tail in range */\n  extractTail(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    return new ContinuousTailDetails(this.extractInput(fromPos, toPos), fromPos);\n  }\n\n  /** Appends tail */\n  appendTail(tail) {\n    if (isString(tail)) tail = new ContinuousTailDetails(String(tail));\n    return tail.appendTo(this);\n  }\n\n  /** Appends char */\n  _appendCharRaw(ch, flags) {\n    if (!ch) return new ChangeDetails();\n    this._value += ch;\n    return new ChangeDetails({\n      inserted: ch,\n      rawInserted: ch\n    });\n  }\n\n  /** Appends char */\n  _appendChar(ch, flags, checkTail) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const consistentState = this.state;\n    let details;\n    [ch, details] = this.doPrepareChar(ch, flags);\n    if (ch) details = details.aggregate(this._appendCharRaw(ch, flags));\n    if (details.inserted) {\n      let consistentTail;\n      let appended = this.doValidate(flags) !== false;\n      if (appended && checkTail != null) {\n        // validation ok, check tail\n        const beforeTailState = this.state;\n        if (this.overwrite === true) {\n          consistentTail = checkTail.state;\n          for (let i = 0; i < details.rawInserted.length; ++i) {\n            checkTail.unshift(this.displayValue.length - details.tailShift);\n          }\n        }\n        let tailDetails = this.appendTail(checkTail);\n        appended = tailDetails.rawInserted.length === checkTail.toString().length;\n\n        // not ok, try shift\n        if (!(appended && tailDetails.inserted) && this.overwrite === 'shift') {\n          this.state = beforeTailState;\n          consistentTail = checkTail.state;\n          for (let i = 0; i < details.rawInserted.length; ++i) {\n            checkTail.shift();\n          }\n          tailDetails = this.appendTail(checkTail);\n          appended = tailDetails.rawInserted.length === checkTail.toString().length;\n        }\n\n        // if ok, rollback state after tail\n        if (appended && tailDetails.inserted) this.state = beforeTailState;\n      }\n\n      // revert all if something went wrong\n      if (!appended) {\n        details = new ChangeDetails();\n        this.state = consistentState;\n        if (checkTail && consistentTail) checkTail.state = consistentTail;\n      }\n    }\n    return details;\n  }\n\n  /** Appends optional placeholder at the end */\n  _appendPlaceholder() {\n    return new ChangeDetails();\n  }\n\n  /** Appends optional eager placeholder at the end */\n  _appendEager() {\n    return new ChangeDetails();\n  }\n\n  /** Appends symbols considering flags */\n  append(str, flags, tail) {\n    if (!isString(str)) throw new Error('value should be string');\n    const checkTail = isString(tail) ? new ContinuousTailDetails(String(tail)) : tail;\n    if (flags != null && flags.tail) flags._beforeTailState = this.state;\n    let details;\n    [str, details] = this.doPrepare(str, flags);\n    for (let ci = 0; ci < str.length; ++ci) {\n      const d = this._appendChar(str[ci], flags, checkTail);\n      if (!d.rawInserted && !this.doSkipInvalid(str[ci], flags, checkTail)) break;\n      details.aggregate(d);\n    }\n    if ((this.eager === true || this.eager === 'append') && flags != null && flags.input && str) {\n      details.aggregate(this._appendEager());\n    }\n\n    // append tail but aggregate only tailShift\n    if (checkTail != null) {\n      details.tailShift += this.appendTail(checkTail).tailShift;\n      // TODO it's a good idea to clear state after appending ends\n      // but it causes bugs when one append calls another (when dynamic dispatch set rawInputValue)\n      // this._resetBeforeTailState();\n    }\n    return details;\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    this._value = this.displayValue.slice(0, fromPos) + this.displayValue.slice(toPos);\n    return new ChangeDetails();\n  }\n\n  /** Calls function and reapplies current value */\n  withValueRefresh(fn) {\n    if (this._refreshing || !this._initialized) return fn();\n    this._refreshing = true;\n    const rawInput = this.rawInputValue;\n    const value = this.value;\n    const ret = fn();\n    this.rawInputValue = rawInput;\n    // append lost trailing chars at the end\n    if (this.value && this.value !== value && value.indexOf(this.value) === 0) {\n      this.append(value.slice(this.displayValue.length), {}, '');\n      this.doCommit();\n    }\n    delete this._refreshing;\n    return ret;\n  }\n  runIsolated(fn) {\n    if (this._isolated || !this._initialized) return fn(this);\n    this._isolated = true;\n    const state = this.state;\n    const ret = fn(this);\n    this.state = state;\n    delete this._isolated;\n    return ret;\n  }\n  doSkipInvalid(ch, flags, checkTail) {\n    return Boolean(this.skipInvalid);\n  }\n\n  /** Prepares string before mask processing */\n  doPrepare(str, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    return ChangeDetails.normalize(this.prepare ? this.prepare(str, this, flags) : str);\n  }\n\n  /** Prepares each char before mask processing */\n  doPrepareChar(str, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    return ChangeDetails.normalize(this.prepareChar ? this.prepareChar(str, this, flags) : str);\n  }\n\n  /** Validates if value is acceptable */\n  doValidate(flags) {\n    return (!this.validate || this.validate(this.value, this, flags)) && (!this.parent || this.parent.doValidate(flags));\n  }\n\n  /** Does additional processing at the end of editing */\n  doCommit() {\n    if (this.commit) this.commit(this.value, this);\n  }\n  splice(start, deleteCount, inserted, removeDirection, flags) {\n    if (removeDirection === void 0) {\n      removeDirection = DIRECTION.NONE;\n    }\n    if (flags === void 0) {\n      flags = {\n        input: true\n      };\n    }\n    const tailPos = start + deleteCount;\n    const tail = this.extractTail(tailPos);\n    const eagerRemove = this.eager === true || this.eager === 'remove';\n    let oldRawValue;\n    if (eagerRemove) {\n      removeDirection = forceDirection(removeDirection);\n      oldRawValue = this.extractInput(0, tailPos, {\n        raw: true\n      });\n    }\n    let startChangePos = start;\n    const details = new ChangeDetails();\n\n    // if it is just deletion without insertion\n    if (removeDirection !== DIRECTION.NONE) {\n      startChangePos = this.nearestInputPos(start, deleteCount > 1 && start !== 0 && !eagerRemove ? DIRECTION.NONE : removeDirection);\n\n      // adjust tailShift if start was aligned\n      details.tailShift = startChangePos - start;\n    }\n    details.aggregate(this.remove(startChangePos));\n    if (eagerRemove && removeDirection !== DIRECTION.NONE && oldRawValue === this.rawInputValue) {\n      if (removeDirection === DIRECTION.FORCE_LEFT) {\n        let valLength;\n        while (oldRawValue === this.rawInputValue && (valLength = this.displayValue.length)) {\n          details.aggregate(new ChangeDetails({\n            tailShift: -1\n          })).aggregate(this.remove(valLength - 1));\n        }\n      } else if (removeDirection === DIRECTION.FORCE_RIGHT) {\n        tail.unshift();\n      }\n    }\n    return details.aggregate(this.append(inserted, flags, tail));\n  }\n  maskEquals(mask) {\n    return this.mask === mask;\n  }\n  optionsIsChanged(opts) {\n    return !objectIncludes(this, opts);\n  }\n  typedValueEquals(value) {\n    const tval = this.typedValue;\n    return value === tval || Masked.EMPTY_VALUES.includes(value) && Masked.EMPTY_VALUES.includes(tval) || (this.format ? this.format(value, this) === this.format(this.typedValue, this) : false);\n  }\n}\nMasked.DEFAULTS = {\n  skipInvalid: true\n};\nMasked.EMPTY_VALUES = [undefined, null, ''];\nIMask.Masked = Masked;\n\nexport { Masked as default };\n","import ChangeDetails from '../../core/change-details.js';\nimport { isString } from '../../core/utils.js';\nimport ContinuousTailDetails from '../../core/continuous-tail-details.js';\nimport IMask from '../../core/holder.js';\n\nclass ChunksTailDetails {\n  /** */\n\n  constructor(chunks, from) {\n    if (chunks === void 0) {\n      chunks = [];\n    }\n    if (from === void 0) {\n      from = 0;\n    }\n    this.chunks = chunks;\n    this.from = from;\n  }\n  toString() {\n    return this.chunks.map(String).join('');\n  }\n  extend(tailChunk) {\n    if (!String(tailChunk)) return;\n    tailChunk = isString(tailChunk) ? new ContinuousTailDetails(String(tailChunk)) : tailChunk;\n    const lastChunk = this.chunks[this.chunks.length - 1];\n    const extendLast = lastChunk && (\n    // if stops are same or tail has no stop\n    lastChunk.stop === tailChunk.stop || tailChunk.stop == null) &&\n    // if tail chunk goes just after last chunk\n    tailChunk.from === lastChunk.from + lastChunk.toString().length;\n    if (tailChunk instanceof ContinuousTailDetails) {\n      // check the ability to extend previous chunk\n      if (extendLast) {\n        // extend previous chunk\n        lastChunk.extend(tailChunk.toString());\n      } else {\n        // append new chunk\n        this.chunks.push(tailChunk);\n      }\n    } else if (tailChunk instanceof ChunksTailDetails) {\n      if (tailChunk.stop == null) {\n        // unwrap floating chunks to parent, keeping `from` pos\n        let firstTailChunk;\n        while (tailChunk.chunks.length && tailChunk.chunks[0].stop == null) {\n          firstTailChunk = tailChunk.chunks.shift(); // not possible to be `undefined` because length was checked above\n          firstTailChunk.from += tailChunk.from;\n          this.extend(firstTailChunk);\n        }\n      }\n\n      // if tail chunk still has value\n      if (tailChunk.toString()) {\n        // if chunks contains stops, then popup stop to container\n        tailChunk.stop = tailChunk.blockIndex;\n        this.chunks.push(tailChunk);\n      }\n    }\n  }\n  appendTo(masked) {\n    if (!(masked instanceof IMask.MaskedPattern)) {\n      const tail = new ContinuousTailDetails(this.toString());\n      return tail.appendTo(masked);\n    }\n    const details = new ChangeDetails();\n    for (let ci = 0; ci < this.chunks.length; ++ci) {\n      const chunk = this.chunks[ci];\n      const lastBlockIter = masked._mapPosToBlock(masked.displayValue.length);\n      const stop = chunk.stop;\n      let chunkBlock;\n      if (stop != null && (\n      // if block not found or stop is behind lastBlock\n      !lastBlockIter || lastBlockIter.index <= stop)) {\n        if (chunk instanceof ChunksTailDetails ||\n        // for continuous block also check if stop is exist\n        masked._stops.indexOf(stop) >= 0) {\n          details.aggregate(masked._appendPlaceholder(stop));\n        }\n        chunkBlock = chunk instanceof ChunksTailDetails && masked._blocks[stop];\n      }\n      if (chunkBlock) {\n        const tailDetails = chunkBlock.appendTail(chunk);\n        details.aggregate(tailDetails);\n\n        // get not inserted chars\n        const remainChars = chunk.toString().slice(tailDetails.rawInserted.length);\n        if (remainChars) details.aggregate(masked.append(remainChars, {\n          tail: true\n        }));\n      } else {\n        details.aggregate(masked.append(chunk.toString(), {\n          tail: true\n        }));\n      }\n    }\n    return details;\n  }\n  get state() {\n    return {\n      chunks: this.chunks.map(c => c.state),\n      from: this.from,\n      stop: this.stop,\n      blockIndex: this.blockIndex\n    };\n  }\n  set state(state) {\n    const {\n      chunks,\n      ...props\n    } = state;\n    Object.assign(this, props);\n    this.chunks = chunks.map(cstate => {\n      const chunk = \"chunks\" in cstate ? new ChunksTailDetails() : new ContinuousTailDetails();\n      chunk.state = cstate;\n      return chunk;\n    });\n  }\n  unshift(beforePos) {\n    if (!this.chunks.length || beforePos != null && this.from >= beforePos) return '';\n    const chunkShiftPos = beforePos != null ? beforePos - this.from : beforePos;\n    let ci = 0;\n    while (ci < this.chunks.length) {\n      const chunk = this.chunks[ci];\n      const shiftChar = chunk.unshift(chunkShiftPos);\n      if (chunk.toString()) {\n        // chunk still contains value\n        // but not shifted - means no more available chars to shift\n        if (!shiftChar) break;\n        ++ci;\n      } else {\n        // clean if chunk has no value\n        this.chunks.splice(ci, 1);\n      }\n      if (shiftChar) return shiftChar;\n    }\n    return '';\n  }\n  shift() {\n    if (!this.chunks.length) return '';\n    let ci = this.chunks.length - 1;\n    while (0 <= ci) {\n      const chunk = this.chunks[ci];\n      const shiftChar = chunk.shift();\n      if (chunk.toString()) {\n        // chunk still contains value\n        // but not shifted - means no more available chars to shift\n        if (!shiftChar) break;\n        --ci;\n      } else {\n        // clean if chunk has no value\n        this.chunks.splice(ci, 1);\n      }\n      if (shiftChar) return shiftChar;\n    }\n    return '';\n  }\n}\n\nexport { ChunksTailDetails as default };\n","import ChangeDetails from '../../core/change-details.js';\nimport { DIRECTION, isString } from '../../core/utils.js';\nimport ContinuousTailDetails from '../../core/continuous-tail-details.js';\nimport '../../core/holder.js';\n\nclass PatternFixedDefinition {\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  constructor(opts) {\n    Object.assign(this, opts);\n    this._value = '';\n    this.isFixed = true;\n  }\n  get value() {\n    return this._value;\n  }\n  get unmaskedValue() {\n    return this.isUnmasking ? this.value : '';\n  }\n  get rawInputValue() {\n    return this._isRawInput ? this.value : '';\n  }\n  get displayValue() {\n    return this.value;\n  }\n  reset() {\n    this._isRawInput = false;\n    this._value = '';\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this._value.length;\n    }\n    this._value = this._value.slice(0, fromPos) + this._value.slice(toPos);\n    if (!this._value) this._isRawInput = false;\n    return new ChangeDetails();\n  }\n  nearestInputPos(cursorPos, direction) {\n    if (direction === void 0) {\n      direction = DIRECTION.NONE;\n    }\n    const minPos = 0;\n    const maxPos = this._value.length;\n    switch (direction) {\n      case DIRECTION.LEFT:\n      case DIRECTION.FORCE_LEFT:\n        return minPos;\n      case DIRECTION.NONE:\n      case DIRECTION.RIGHT:\n      case DIRECTION.FORCE_RIGHT:\n      default:\n        return maxPos;\n    }\n  }\n  totalInputPositions(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this._value.length;\n    }\n    return this._isRawInput ? toPos - fromPos : 0;\n  }\n  extractInput(fromPos, toPos, flags) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this._value.length;\n    }\n    if (flags === void 0) {\n      flags = {};\n    }\n    return flags.raw && this._isRawInput && this._value.slice(fromPos, toPos) || '';\n  }\n  get isComplete() {\n    return true;\n  }\n  get isFilled() {\n    return Boolean(this._value);\n  }\n  _appendChar(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    if (this.isFilled) return new ChangeDetails();\n    const appendEager = this.eager === true || this.eager === 'append';\n    const appended = this.char === ch;\n    const isResolved = appended && (this.isUnmasking || flags.input || flags.raw) && (!flags.raw || !appendEager) && !flags.tail;\n    const details = new ChangeDetails({\n      inserted: this.char,\n      rawInserted: isResolved ? this.char : ''\n    });\n    this._value = this.char;\n    this._isRawInput = isResolved && (flags.raw || flags.input);\n    return details;\n  }\n  _appendEager() {\n    return this._appendChar(this.char, {\n      tail: true\n    });\n  }\n  _appendPlaceholder() {\n    const details = new ChangeDetails();\n    if (this.isFilled) return details;\n    this._value = details.inserted = this.char;\n    return details;\n  }\n  extractTail() {\n    return new ContinuousTailDetails('');\n  }\n  appendTail(tail) {\n    if (isString(tail)) tail = new ContinuousTailDetails(String(tail));\n    return tail.appendTo(this);\n  }\n  append(str, flags, tail) {\n    const details = this._appendChar(str[0], flags);\n    if (tail != null) {\n      details.tailShift += this.appendTail(tail).tailShift;\n    }\n    return details;\n  }\n  doCommit() {}\n  get state() {\n    return {\n      _value: this._value,\n      _rawInputValue: this.rawInputValue\n    };\n  }\n  set state(state) {\n    this._value = state._value;\n    this._isRawInput = Boolean(state._rawInputValue);\n  }\n}\n\nexport { PatternFixedDefinition as default };\n","import createMask from '../factory.js';\nimport ChangeDetails from '../../core/change-details.js';\nimport { DIRECTION } from '../../core/utils.js';\nimport '../../core/holder.js';\n\nclass PatternInputDefinition {\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  constructor(opts) {\n    const {\n      parent,\n      isOptional,\n      placeholderChar,\n      displayChar,\n      lazy,\n      eager,\n      ...maskOpts\n    } = opts;\n    this.masked = createMask(maskOpts);\n    Object.assign(this, {\n      parent,\n      isOptional,\n      placeholderChar,\n      displayChar,\n      lazy,\n      eager\n    });\n  }\n  reset() {\n    this.isFilled = false;\n    this.masked.reset();\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.value.length;\n    }\n    if (fromPos === 0 && toPos >= 1) {\n      this.isFilled = false;\n      return this.masked.remove(fromPos, toPos);\n    }\n    return new ChangeDetails();\n  }\n  get value() {\n    return this.masked.value || (this.isFilled && !this.isOptional ? this.placeholderChar : '');\n  }\n  get unmaskedValue() {\n    return this.masked.unmaskedValue;\n  }\n  get rawInputValue() {\n    return this.masked.rawInputValue;\n  }\n  get displayValue() {\n    return this.masked.value && this.displayChar || this.value;\n  }\n  get isComplete() {\n    return Boolean(this.masked.value) || this.isOptional;\n  }\n  _appendChar(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    if (this.isFilled) return new ChangeDetails();\n    const state = this.masked.state;\n    // simulate input\n    let details = this.masked._appendChar(ch, this.currentMaskFlags(flags));\n    if (details.inserted && this.doValidate(flags) === false) {\n      details = new ChangeDetails();\n      this.masked.state = state;\n    }\n    if (!details.inserted && !this.isOptional && !this.lazy && !flags.input) {\n      details.inserted = this.placeholderChar;\n    }\n    details.skip = !details.inserted && !this.isOptional;\n    this.isFilled = Boolean(details.inserted);\n    return details;\n  }\n  append(str, flags, tail) {\n    // TODO probably should be done via _appendChar\n    return this.masked.append(str, this.currentMaskFlags(flags), tail);\n  }\n  _appendPlaceholder() {\n    if (this.isFilled || this.isOptional) return new ChangeDetails();\n    this.isFilled = true;\n    return new ChangeDetails({\n      inserted: this.placeholderChar\n    });\n  }\n  _appendEager() {\n    return new ChangeDetails();\n  }\n  extractTail(fromPos, toPos) {\n    return this.masked.extractTail(fromPos, toPos);\n  }\n  appendTail(tail) {\n    return this.masked.appendTail(tail);\n  }\n  extractInput(fromPos, toPos, flags) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.value.length;\n    }\n    return this.masked.extractInput(fromPos, toPos, flags);\n  }\n  nearestInputPos(cursorPos, direction) {\n    if (direction === void 0) {\n      direction = DIRECTION.NONE;\n    }\n    const minPos = 0;\n    const maxPos = this.value.length;\n    const boundPos = Math.min(Math.max(cursorPos, minPos), maxPos);\n    switch (direction) {\n      case DIRECTION.LEFT:\n      case DIRECTION.FORCE_LEFT:\n        return this.isComplete ? boundPos : minPos;\n      case DIRECTION.RIGHT:\n      case DIRECTION.FORCE_RIGHT:\n        return this.isComplete ? boundPos : maxPos;\n      case DIRECTION.NONE:\n      default:\n        return boundPos;\n    }\n  }\n  totalInputPositions(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.value.length;\n    }\n    return this.value.slice(fromPos, toPos).length;\n  }\n  doValidate(flags) {\n    return this.masked.doValidate(this.currentMaskFlags(flags)) && (!this.parent || this.parent.doValidate(this.currentMaskFlags(flags)));\n  }\n  doCommit() {\n    this.masked.doCommit();\n  }\n  get state() {\n    return {\n      _value: this.value,\n      _rawInputValue: this.rawInputValue,\n      masked: this.masked.state,\n      isFilled: this.isFilled\n    };\n  }\n  set state(state) {\n    this.masked.state = state.masked;\n    this.isFilled = state.isFilled;\n  }\n  currentMaskFlags(flags) {\n    var _flags$_beforeTailSta;\n    return {\n      ...flags,\n      _beforeTailState: (flags == null || (_flags$_beforeTailSta = flags._beforeTailState) == null ? void 0 : _flags$_beforeTailSta.masked) || (flags == null ? void 0 : flags._beforeTailState)\n    };\n  }\n}\nPatternInputDefinition.DEFAULT_DEFINITIONS = {\n  '0': /\\d/,\n  'a': /[\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,\n  // http://stackoverflow.com/a/22075070\n  '*': /./\n};\n\nexport { PatternInputDefinition as default };\n","import Masked from './base.js';\nimport IMask from '../core/holder.js';\nimport '../core/change-details.js';\nimport '../core/continuous-tail-details.js';\nimport '../core/utils.js';\n\n/** Masking by RegExp */\nclass MaskedRegExp extends Masked {\n  /** */\n\n  /** Enable characters overwriting */\n\n  /** */\n\n  /** */\n\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    const mask = opts.mask;\n    if (mask) opts.validate = value => value.search(mask) >= 0;\n    super._update(opts);\n  }\n}\nIMask.MaskedRegExp = MaskedRegExp;\n\nexport { MaskedRegExp as default };\n","import ChangeDetails from '../core/change-details.js';\nimport IMask from '../core/holder.js';\nimport { DIRECTION } from '../core/utils.js';\nimport Masked from './base.js';\nimport createMask, { normalizeOpts } from './factory.js';\nimport ChunksTailDetails from './pattern/chunk-tail-details.js';\nimport PatternCursor from './pattern/cursor.js';\nimport PatternFixedDefinition from './pattern/fixed-definition.js';\nimport PatternInputDefinition from './pattern/input-definition.js';\nimport './regexp.js';\nimport '../core/continuous-tail-details.js';\n\n/** Pattern mask */\nclass MaskedPattern extends Masked {\n  /** */\n\n  /** */\n\n  /** Single char for empty input */\n\n  /** Single char for filled input */\n\n  /** Show placeholder only when needed */\n\n  /** Enable characters overwriting */\n\n  /** */\n\n  /** */\n\n  constructor(opts) {\n    super({\n      ...MaskedPattern.DEFAULTS,\n      ...opts,\n      definitions: Object.assign({}, PatternInputDefinition.DEFAULT_DEFINITIONS, opts == null ? void 0 : opts.definitions)\n    });\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    opts.definitions = Object.assign({}, this.definitions, opts.definitions);\n    super._update(opts);\n    this._rebuildMask();\n  }\n  _rebuildMask() {\n    const defs = this.definitions;\n    this._blocks = [];\n    this.exposeBlock = undefined;\n    this._stops = [];\n    this._maskedBlocks = {};\n    const pattern = this.mask;\n    if (!pattern || !defs) return;\n    let unmaskingBlock = false;\n    let optionalBlock = false;\n    for (let i = 0; i < pattern.length; ++i) {\n      if (this.blocks) {\n        const p = pattern.slice(i);\n        const bNames = Object.keys(this.blocks).filter(bName => p.indexOf(bName) === 0);\n        // order by key length\n        bNames.sort((a, b) => b.length - a.length);\n        // use block name with max length\n        const bName = bNames[0];\n        if (bName) {\n          const {\n            expose,\n            repeat,\n            ...bOpts\n          } = normalizeOpts(this.blocks[bName]); // TODO type Opts<Arg & Extra>\n          const blockOpts = {\n            lazy: this.lazy,\n            eager: this.eager,\n            placeholderChar: this.placeholderChar,\n            displayChar: this.displayChar,\n            overwrite: this.overwrite,\n            ...bOpts,\n            repeat,\n            parent: this\n          };\n          const maskedBlock = repeat != null ? new IMask.RepeatBlock(blockOpts /* TODO */) : createMask(blockOpts);\n          if (maskedBlock) {\n            this._blocks.push(maskedBlock);\n            if (expose) this.exposeBlock = maskedBlock;\n\n            // store block index\n            if (!this._maskedBlocks[bName]) this._maskedBlocks[bName] = [];\n            this._maskedBlocks[bName].push(this._blocks.length - 1);\n          }\n          i += bName.length - 1;\n          continue;\n        }\n      }\n      let char = pattern[i];\n      let isInput = (char in defs);\n      if (char === MaskedPattern.STOP_CHAR) {\n        this._stops.push(this._blocks.length);\n        continue;\n      }\n      if (char === '{' || char === '}') {\n        unmaskingBlock = !unmaskingBlock;\n        continue;\n      }\n      if (char === '[' || char === ']') {\n        optionalBlock = !optionalBlock;\n        continue;\n      }\n      if (char === MaskedPattern.ESCAPE_CHAR) {\n        ++i;\n        char = pattern[i];\n        if (!char) break;\n        isInput = false;\n      }\n      const def = isInput ? new PatternInputDefinition({\n        isOptional: optionalBlock,\n        lazy: this.lazy,\n        eager: this.eager,\n        placeholderChar: this.placeholderChar,\n        displayChar: this.displayChar,\n        ...normalizeOpts(defs[char]),\n        parent: this\n      }) : new PatternFixedDefinition({\n        char,\n        eager: this.eager,\n        isUnmasking: unmaskingBlock\n      });\n      this._blocks.push(def);\n    }\n  }\n  get state() {\n    return {\n      ...super.state,\n      _blocks: this._blocks.map(b => b.state)\n    };\n  }\n  set state(state) {\n    if (!state) {\n      this.reset();\n      return;\n    }\n    const {\n      _blocks,\n      ...maskedState\n    } = state;\n    this._blocks.forEach((b, bi) => b.state = _blocks[bi]);\n    super.state = maskedState;\n  }\n  reset() {\n    super.reset();\n    this._blocks.forEach(b => b.reset());\n  }\n  get isComplete() {\n    return this.exposeBlock ? this.exposeBlock.isComplete : this._blocks.every(b => b.isComplete);\n  }\n  get isFilled() {\n    return this._blocks.every(b => b.isFilled);\n  }\n  get isFixed() {\n    return this._blocks.every(b => b.isFixed);\n  }\n  get isOptional() {\n    return this._blocks.every(b => b.isOptional);\n  }\n  doCommit() {\n    this._blocks.forEach(b => b.doCommit());\n    super.doCommit();\n  }\n  get unmaskedValue() {\n    return this.exposeBlock ? this.exposeBlock.unmaskedValue : this._blocks.reduce((str, b) => str += b.unmaskedValue, '');\n  }\n  set unmaskedValue(unmaskedValue) {\n    if (this.exposeBlock) {\n      const tail = this.extractTail(this._blockStartPos(this._blocks.indexOf(this.exposeBlock)) + this.exposeBlock.displayValue.length);\n      this.exposeBlock.unmaskedValue = unmaskedValue;\n      this.appendTail(tail);\n      this.doCommit();\n    } else super.unmaskedValue = unmaskedValue;\n  }\n  get value() {\n    return this.exposeBlock ? this.exposeBlock.value :\n    // TODO return _value when not in change?\n    this._blocks.reduce((str, b) => str += b.value, '');\n  }\n  set value(value) {\n    if (this.exposeBlock) {\n      const tail = this.extractTail(this._blockStartPos(this._blocks.indexOf(this.exposeBlock)) + this.exposeBlock.displayValue.length);\n      this.exposeBlock.value = value;\n      this.appendTail(tail);\n      this.doCommit();\n    } else super.value = value;\n  }\n  get typedValue() {\n    return this.exposeBlock ? this.exposeBlock.typedValue : super.typedValue;\n  }\n  set typedValue(value) {\n    if (this.exposeBlock) {\n      const tail = this.extractTail(this._blockStartPos(this._blocks.indexOf(this.exposeBlock)) + this.exposeBlock.displayValue.length);\n      this.exposeBlock.typedValue = value;\n      this.appendTail(tail);\n      this.doCommit();\n    } else super.typedValue = value;\n  }\n  get displayValue() {\n    return this._blocks.reduce((str, b) => str += b.displayValue, '');\n  }\n  appendTail(tail) {\n    return super.appendTail(tail).aggregate(this._appendPlaceholder());\n  }\n  _appendEager() {\n    var _this$_mapPosToBlock;\n    const details = new ChangeDetails();\n    let startBlockIndex = (_this$_mapPosToBlock = this._mapPosToBlock(this.displayValue.length)) == null ? void 0 : _this$_mapPosToBlock.index;\n    if (startBlockIndex == null) return details;\n\n    // TODO test if it works for nested pattern masks\n    if (this._blocks[startBlockIndex].isFilled) ++startBlockIndex;\n    for (let bi = startBlockIndex; bi < this._blocks.length; ++bi) {\n      const d = this._blocks[bi]._appendEager();\n      if (!d.inserted) break;\n      details.aggregate(d);\n    }\n    return details;\n  }\n  _appendCharRaw(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const blockIter = this._mapPosToBlock(this.displayValue.length);\n    const details = new ChangeDetails();\n    if (!blockIter) return details;\n    for (let bi = blockIter.index, block; block = this._blocks[bi]; ++bi) {\n      var _flags$_beforeTailSta;\n      const blockDetails = block._appendChar(ch, {\n        ...flags,\n        _beforeTailState: (_flags$_beforeTailSta = flags._beforeTailState) == null || (_flags$_beforeTailSta = _flags$_beforeTailSta._blocks) == null ? void 0 : _flags$_beforeTailSta[bi]\n      });\n      details.aggregate(blockDetails);\n      if (blockDetails.consumed) break; // go next char\n    }\n    return details;\n  }\n  extractTail(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    const chunkTail = new ChunksTailDetails();\n    if (fromPos === toPos) return chunkTail;\n    this._forEachBlocksInRange(fromPos, toPos, (b, bi, bFromPos, bToPos) => {\n      const blockChunk = b.extractTail(bFromPos, bToPos);\n      blockChunk.stop = this._findStopBefore(bi);\n      blockChunk.from = this._blockStartPos(bi);\n      if (blockChunk instanceof ChunksTailDetails) blockChunk.blockIndex = bi;\n      chunkTail.extend(blockChunk);\n    });\n    return chunkTail;\n  }\n  extractInput(fromPos, toPos, flags) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    if (flags === void 0) {\n      flags = {};\n    }\n    if (fromPos === toPos) return '';\n    let input = '';\n    this._forEachBlocksInRange(fromPos, toPos, (b, _, fromPos, toPos) => {\n      input += b.extractInput(fromPos, toPos, flags);\n    });\n    return input;\n  }\n  _findStopBefore(blockIndex) {\n    let stopBefore;\n    for (let si = 0; si < this._stops.length; ++si) {\n      const stop = this._stops[si];\n      if (stop <= blockIndex) stopBefore = stop;else break;\n    }\n    return stopBefore;\n  }\n\n  /** Appends placeholder depending on laziness */\n  _appendPlaceholder(toBlockIndex) {\n    const details = new ChangeDetails();\n    if (this.lazy && toBlockIndex == null) return details;\n    const startBlockIter = this._mapPosToBlock(this.displayValue.length);\n    if (!startBlockIter) return details;\n    const startBlockIndex = startBlockIter.index;\n    const endBlockIndex = toBlockIndex != null ? toBlockIndex : this._blocks.length;\n    this._blocks.slice(startBlockIndex, endBlockIndex).forEach(b => {\n      if (!b.lazy || toBlockIndex != null) {\n        var _blocks2;\n        details.aggregate(b._appendPlaceholder((_blocks2 = b._blocks) == null ? void 0 : _blocks2.length));\n      }\n    });\n    return details;\n  }\n\n  /** Finds block in pos */\n  _mapPosToBlock(pos) {\n    let accVal = '';\n    for (let bi = 0; bi < this._blocks.length; ++bi) {\n      const block = this._blocks[bi];\n      const blockStartPos = accVal.length;\n      accVal += block.displayValue;\n      if (pos <= accVal.length) {\n        return {\n          index: bi,\n          offset: pos - blockStartPos\n        };\n      }\n    }\n  }\n  _blockStartPos(blockIndex) {\n    return this._blocks.slice(0, blockIndex).reduce((pos, b) => pos += b.displayValue.length, 0);\n  }\n  _forEachBlocksInRange(fromPos, toPos, fn) {\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    const fromBlockIter = this._mapPosToBlock(fromPos);\n    if (fromBlockIter) {\n      const toBlockIter = this._mapPosToBlock(toPos);\n      // process first block\n      const isSameBlock = toBlockIter && fromBlockIter.index === toBlockIter.index;\n      const fromBlockStartPos = fromBlockIter.offset;\n      const fromBlockEndPos = toBlockIter && isSameBlock ? toBlockIter.offset : this._blocks[fromBlockIter.index].displayValue.length;\n      fn(this._blocks[fromBlockIter.index], fromBlockIter.index, fromBlockStartPos, fromBlockEndPos);\n      if (toBlockIter && !isSameBlock) {\n        // process intermediate blocks\n        for (let bi = fromBlockIter.index + 1; bi < toBlockIter.index; ++bi) {\n          fn(this._blocks[bi], bi, 0, this._blocks[bi].displayValue.length);\n        }\n\n        // process last block\n        fn(this._blocks[toBlockIter.index], toBlockIter.index, 0, toBlockIter.offset);\n      }\n    }\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    const removeDetails = super.remove(fromPos, toPos);\n    this._forEachBlocksInRange(fromPos, toPos, (b, _, bFromPos, bToPos) => {\n      removeDetails.aggregate(b.remove(bFromPos, bToPos));\n    });\n    return removeDetails;\n  }\n  nearestInputPos(cursorPos, direction) {\n    if (direction === void 0) {\n      direction = DIRECTION.NONE;\n    }\n    if (!this._blocks.length) return 0;\n    const cursor = new PatternCursor(this, cursorPos);\n    if (direction === DIRECTION.NONE) {\n      // -------------------------------------------------\n      // NONE should only go out from fixed to the right!\n      // -------------------------------------------------\n      if (cursor.pushRightBeforeInput()) return cursor.pos;\n      cursor.popState();\n      if (cursor.pushLeftBeforeInput()) return cursor.pos;\n      return this.displayValue.length;\n    }\n\n    // FORCE is only about a|* otherwise is 0\n    if (direction === DIRECTION.LEFT || direction === DIRECTION.FORCE_LEFT) {\n      // try to break fast when *|a\n      if (direction === DIRECTION.LEFT) {\n        cursor.pushRightBeforeFilled();\n        if (cursor.ok && cursor.pos === cursorPos) return cursorPos;\n        cursor.popState();\n      }\n\n      // forward flow\n      cursor.pushLeftBeforeInput();\n      cursor.pushLeftBeforeRequired();\n      cursor.pushLeftBeforeFilled();\n\n      // backward flow\n      if (direction === DIRECTION.LEFT) {\n        cursor.pushRightBeforeInput();\n        cursor.pushRightBeforeRequired();\n        if (cursor.ok && cursor.pos <= cursorPos) return cursor.pos;\n        cursor.popState();\n        if (cursor.ok && cursor.pos <= cursorPos) return cursor.pos;\n        cursor.popState();\n      }\n      if (cursor.ok) return cursor.pos;\n      if (direction === DIRECTION.FORCE_LEFT) return 0;\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n      return 0;\n    }\n    if (direction === DIRECTION.RIGHT || direction === DIRECTION.FORCE_RIGHT) {\n      // forward flow\n      cursor.pushRightBeforeInput();\n      cursor.pushRightBeforeRequired();\n      if (cursor.pushRightBeforeFilled()) return cursor.pos;\n      if (direction === DIRECTION.FORCE_RIGHT) return this.displayValue.length;\n\n      // backward flow\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n      return this.nearestInputPos(cursorPos, DIRECTION.LEFT);\n    }\n    return cursorPos;\n  }\n  totalInputPositions(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    let total = 0;\n    this._forEachBlocksInRange(fromPos, toPos, (b, _, bFromPos, bToPos) => {\n      total += b.totalInputPositions(bFromPos, bToPos);\n    });\n    return total;\n  }\n\n  /** Get block by name */\n  maskedBlock(name) {\n    return this.maskedBlocks(name)[0];\n  }\n\n  /** Get all blocks by name */\n  maskedBlocks(name) {\n    const indices = this._maskedBlocks[name];\n    if (!indices) return [];\n    return indices.map(gi => this._blocks[gi]);\n  }\n}\nMaskedPattern.DEFAULTS = {\n  lazy: true,\n  placeholderChar: '_'\n};\nMaskedPattern.STOP_CHAR = '`';\nMaskedPattern.ESCAPE_CHAR = '\\\\';\nMaskedPattern.InputDefinition = PatternInputDefinition;\nMaskedPattern.FixedDefinition = PatternFixedDefinition;\nIMask.MaskedPattern = MaskedPattern;\n\nexport { MaskedPattern as default };\n","import IMask from '../core/holder.js';\nimport MaskedPattern from './pattern.js';\nimport '../core/change-details.js';\nimport '../core/utils.js';\nimport './base.js';\nimport '../core/continuous-tail-details.js';\nimport './factory.js';\nimport './pattern/chunk-tail-details.js';\nimport './pattern/cursor.js';\nimport './pattern/fixed-definition.js';\nimport './pattern/input-definition.js';\nimport './regexp.js';\n\n/** Pattern which accepts ranges */\nclass MaskedRange extends MaskedPattern {\n  /**\n    Optionally sets max length of pattern.\n    Used when pattern length is longer then `to` param length. Pads zeros at start in this case.\n  */\n\n  /** Min bound */\n\n  /** Max bound */\n\n  /** */\n\n  get _matchFrom() {\n    return this.maxLength - String(this.from).length;\n  }\n  constructor(opts) {\n    super(opts); // mask will be created in _update\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    const {\n      to = this.to || 0,\n      from = this.from || 0,\n      maxLength = this.maxLength || 0,\n      autofix = this.autofix,\n      ...patternOpts\n    } = opts;\n    this.to = to;\n    this.from = from;\n    this.maxLength = Math.max(String(to).length, maxLength);\n    this.autofix = autofix;\n    const fromStr = String(this.from).padStart(this.maxLength, '0');\n    const toStr = String(this.to).padStart(this.maxLength, '0');\n    let sameCharsCount = 0;\n    while (sameCharsCount < toStr.length && toStr[sameCharsCount] === fromStr[sameCharsCount]) ++sameCharsCount;\n    patternOpts.mask = toStr.slice(0, sameCharsCount).replace(/0/g, '\\\\0') + '0'.repeat(this.maxLength - sameCharsCount);\n    super._update(patternOpts);\n  }\n  get isComplete() {\n    return super.isComplete && Boolean(this.value);\n  }\n  boundaries(str) {\n    let minstr = '';\n    let maxstr = '';\n    const [, placeholder, num] = str.match(/^(\\D*)(\\d*)(\\D*)/) || [];\n    if (num) {\n      minstr = '0'.repeat(placeholder.length) + num;\n      maxstr = '9'.repeat(placeholder.length) + num;\n    }\n    minstr = minstr.padEnd(this.maxLength, '0');\n    maxstr = maxstr.padEnd(this.maxLength, '9');\n    return [minstr, maxstr];\n  }\n  doPrepareChar(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    let details;\n    [ch, details] = super.doPrepareChar(ch.replace(/\\D/g, ''), flags);\n    if (!this.autofix || !ch) {\n      details.skip = !this.isComplete;\n      return [ch, details];\n    }\n    const fromStr = String(this.from).padStart(this.maxLength, '0');\n    const toStr = String(this.to).padStart(this.maxLength, '0');\n    const nextVal = this.value + ch;\n    if (nextVal.length > this.maxLength) return ['', details];\n    const [minstr, maxstr] = this.boundaries(nextVal);\n    if (Number(maxstr) < this.from) return [fromStr[nextVal.length - 1], details];\n    if (Number(minstr) > this.to) {\n      if (this.autofix === 'pad' && nextVal.length < this.maxLength) {\n        return ['', details.aggregate(this.append(fromStr[nextVal.length - 1] + ch, flags))];\n      }\n      return [toStr[nextVal.length - 1], details];\n    }\n    return [ch, details];\n  }\n  doValidate(flags) {\n    const str = this.value;\n    const firstNonZero = str.search(/[^0]/);\n    if (firstNonZero === -1 && str.length <= this._matchFrom) return true;\n    const [minstr, maxstr] = this.boundaries(str);\n    return this.from <= Number(maxstr) && Number(minstr) <= this.to && super.doValidate(flags);\n  }\n}\nIMask.MaskedRange = MaskedRange;\n\nexport { MaskedRange as default };\n","import MaskedPattern from './pattern.js';\nimport MaskedRange from './range.js';\nimport IMask from '../core/holder.js';\nimport { isString } from '../core/utils.js';\nimport '../core/change-details.js';\nimport './base.js';\nimport '../core/continuous-tail-details.js';\nimport './factory.js';\nimport './pattern/chunk-tail-details.js';\nimport './pattern/cursor.js';\nimport './pattern/fixed-definition.js';\nimport './pattern/input-definition.js';\nimport './regexp.js';\n\n/** Date mask */\nclass MaskedDate extends MaskedPattern {\n  static extractPatternOptions(opts) {\n    const {\n      mask,\n      pattern,\n      ...patternOpts\n    } = opts;\n    return {\n      ...patternOpts,\n      mask: isString(mask) ? mask : pattern\n    };\n  }\n\n  /** Pattern mask for date according to {@link MaskedDate#format} */\n\n  /** Start date */\n\n  /** End date */\n\n  /** */\n\n  /** Format typed value to string */\n\n  /** Parse string to get typed value */\n\n  constructor(opts) {\n    super(MaskedDate.extractPatternOptions({\n      ...MaskedDate.DEFAULTS,\n      ...opts\n    }));\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    const {\n      mask,\n      pattern,\n      blocks,\n      ...patternOpts\n    } = {\n      ...MaskedDate.DEFAULTS,\n      ...opts\n    };\n    const patternBlocks = Object.assign({}, MaskedDate.GET_DEFAULT_BLOCKS());\n    // adjust year block\n    if (opts.min) patternBlocks.Y.from = opts.min.getFullYear();\n    if (opts.max) patternBlocks.Y.to = opts.max.getFullYear();\n    if (opts.min && opts.max && patternBlocks.Y.from === patternBlocks.Y.to) {\n      patternBlocks.m.from = opts.min.getMonth() + 1;\n      patternBlocks.m.to = opts.max.getMonth() + 1;\n      if (patternBlocks.m.from === patternBlocks.m.to) {\n        patternBlocks.d.from = opts.min.getDate();\n        patternBlocks.d.to = opts.max.getDate();\n      }\n    }\n    Object.assign(patternBlocks, this.blocks, blocks);\n\n    // add autofix\n    Object.keys(patternBlocks).forEach(bk => {\n      const b = patternBlocks[bk];\n      if (!('autofix' in b) && 'autofix' in opts) b.autofix = opts.autofix;\n    });\n    super._update({\n      ...patternOpts,\n      mask: isString(mask) ? mask : pattern,\n      blocks: patternBlocks\n    });\n  }\n  doValidate(flags) {\n    const date = this.date;\n    return super.doValidate(flags) && (!this.isComplete || this.isDateExist(this.value) && date != null && (this.min == null || this.min <= date) && (this.max == null || date <= this.max));\n  }\n\n  /** Checks if date is exists */\n  isDateExist(str) {\n    return this.format(this.parse(str, this), this).indexOf(str) >= 0;\n  }\n\n  /** Parsed Date */\n  get date() {\n    return this.typedValue;\n  }\n  set date(date) {\n    this.typedValue = date;\n  }\n  get typedValue() {\n    return this.isComplete ? super.typedValue : null;\n  }\n  set typedValue(value) {\n    super.typedValue = value;\n  }\n  maskEquals(mask) {\n    return mask === Date || super.maskEquals(mask);\n  }\n  optionsIsChanged(opts) {\n    return super.optionsIsChanged(MaskedDate.extractPatternOptions(opts));\n  }\n}\nMaskedDate.GET_DEFAULT_BLOCKS = () => ({\n  d: {\n    mask: MaskedRange,\n    from: 1,\n    to: 31,\n    maxLength: 2\n  },\n  m: {\n    mask: MaskedRange,\n    from: 1,\n    to: 12,\n    maxLength: 2\n  },\n  Y: {\n    mask: MaskedRange,\n    from: 1900,\n    to: 9999\n  }\n});\nMaskedDate.DEFAULTS = {\n  mask: Date,\n  pattern: 'd{.}`m{.}`Y',\n  format: (date, masked) => {\n    if (!date) return '';\n    const day = String(date.getDate()).padStart(2, '0');\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const year = date.getFullYear();\n    return [day, month, year].join('.');\n  },\n  parse: (str, masked) => {\n    const [day, month, year] = str.split('.').map(Number);\n    return new Date(year, month - 1, day);\n  }\n};\nIMask.MaskedDate = MaskedDate;\n\nexport { MaskedDate as default };\n","import { DIRECTION, objectIncludes } from '../core/utils.js';\nimport ChangeDetails from '../core/change-details.js';\nimport createMask, { normalizeOpts } from './factory.js';\nimport Masked from './base.js';\nimport IMask from '../core/holder.js';\nimport '../core/continuous-tail-details.js';\n\n/** Dynamic mask for choosing appropriate mask in run-time */\nclass MaskedDynamic extends Masked {\n  /** Currently chosen mask */\n\n  /** Currently chosen mask */\n\n  /** Compliled {@link Masked} options */\n\n  /** Chooses {@link Masked} depending on input value */\n\n  constructor(opts) {\n    super({\n      ...MaskedDynamic.DEFAULTS,\n      ...opts\n    });\n    this.currentMask = undefined;\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    super._update(opts);\n    if ('mask' in opts) {\n      this.exposeMask = undefined;\n      // mask could be totally dynamic with only `dispatch` option\n      this.compiledMasks = Array.isArray(opts.mask) ? opts.mask.map(m => {\n        const {\n          expose,\n          ...maskOpts\n        } = normalizeOpts(m);\n        const masked = createMask({\n          overwrite: this._overwrite,\n          eager: this._eager,\n          skipInvalid: this._skipInvalid,\n          ...maskOpts\n        });\n        if (expose) this.exposeMask = masked;\n        return masked;\n      }) : [];\n\n      // this.currentMask = this.doDispatch(''); // probably not needed but lets see\n    }\n  }\n  _appendCharRaw(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const details = this._applyDispatch(ch, flags);\n    if (this.currentMask) {\n      details.aggregate(this.currentMask._appendChar(ch, this.currentMaskFlags(flags)));\n    }\n    return details;\n  }\n  _applyDispatch(appended, flags, tail) {\n    if (appended === void 0) {\n      appended = '';\n    }\n    if (flags === void 0) {\n      flags = {};\n    }\n    if (tail === void 0) {\n      tail = '';\n    }\n    const prevValueBeforeTail = flags.tail && flags._beforeTailState != null ? flags._beforeTailState._value : this.value;\n    const inputValue = this.rawInputValue;\n    const insertValue = flags.tail && flags._beforeTailState != null ? flags._beforeTailState._rawInputValue : inputValue;\n    const tailValue = inputValue.slice(insertValue.length);\n    const prevMask = this.currentMask;\n    const details = new ChangeDetails();\n    const prevMaskState = prevMask == null ? void 0 : prevMask.state;\n\n    // clone flags to prevent overwriting `_beforeTailState`\n    this.currentMask = this.doDispatch(appended, {\n      ...flags\n    }, tail);\n\n    // restore state after dispatch\n    if (this.currentMask) {\n      if (this.currentMask !== prevMask) {\n        // if mask changed reapply input\n        this.currentMask.reset();\n        if (insertValue) {\n          this.currentMask.append(insertValue, {\n            raw: true\n          });\n          details.tailShift = this.currentMask.value.length - prevValueBeforeTail.length;\n        }\n        if (tailValue) {\n          details.tailShift += this.currentMask.append(tailValue, {\n            raw: true,\n            tail: true\n          }).tailShift;\n        }\n      } else if (prevMaskState) {\n        // Dispatch can do something bad with state, so\n        // restore prev mask state\n        this.currentMask.state = prevMaskState;\n      }\n    }\n    return details;\n  }\n  _appendPlaceholder() {\n    const details = this._applyDispatch();\n    if (this.currentMask) {\n      details.aggregate(this.currentMask._appendPlaceholder());\n    }\n    return details;\n  }\n  _appendEager() {\n    const details = this._applyDispatch();\n    if (this.currentMask) {\n      details.aggregate(this.currentMask._appendEager());\n    }\n    return details;\n  }\n  appendTail(tail) {\n    const details = new ChangeDetails();\n    if (tail) details.aggregate(this._applyDispatch('', {}, tail));\n    return details.aggregate(this.currentMask ? this.currentMask.appendTail(tail) : super.appendTail(tail));\n  }\n  currentMaskFlags(flags) {\n    var _flags$_beforeTailSta, _flags$_beforeTailSta2;\n    return {\n      ...flags,\n      _beforeTailState: ((_flags$_beforeTailSta = flags._beforeTailState) == null ? void 0 : _flags$_beforeTailSta.currentMaskRef) === this.currentMask && ((_flags$_beforeTailSta2 = flags._beforeTailState) == null ? void 0 : _flags$_beforeTailSta2.currentMask) || flags._beforeTailState\n    };\n  }\n  doDispatch(appended, flags, tail) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    if (tail === void 0) {\n      tail = '';\n    }\n    return this.dispatch(appended, this, flags, tail);\n  }\n  doValidate(flags) {\n    return super.doValidate(flags) && (!this.currentMask || this.currentMask.doValidate(this.currentMaskFlags(flags)));\n  }\n  doPrepare(str, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    let [s, details] = super.doPrepare(str, flags);\n    if (this.currentMask) {\n      let currentDetails;\n      [s, currentDetails] = super.doPrepare(s, this.currentMaskFlags(flags));\n      details = details.aggregate(currentDetails);\n    }\n    return [s, details];\n  }\n  doPrepareChar(str, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    let [s, details] = super.doPrepareChar(str, flags);\n    if (this.currentMask) {\n      let currentDetails;\n      [s, currentDetails] = super.doPrepareChar(s, this.currentMaskFlags(flags));\n      details = details.aggregate(currentDetails);\n    }\n    return [s, details];\n  }\n  reset() {\n    var _this$currentMask;\n    (_this$currentMask = this.currentMask) == null || _this$currentMask.reset();\n    this.compiledMasks.forEach(m => m.reset());\n  }\n  get value() {\n    return this.exposeMask ? this.exposeMask.value : this.currentMask ? this.currentMask.value : '';\n  }\n  set value(value) {\n    if (this.exposeMask) {\n      this.exposeMask.value = value;\n      this.currentMask = this.exposeMask;\n      this._applyDispatch();\n    } else super.value = value;\n  }\n  get unmaskedValue() {\n    return this.exposeMask ? this.exposeMask.unmaskedValue : this.currentMask ? this.currentMask.unmaskedValue : '';\n  }\n  set unmaskedValue(unmaskedValue) {\n    if (this.exposeMask) {\n      this.exposeMask.unmaskedValue = unmaskedValue;\n      this.currentMask = this.exposeMask;\n      this._applyDispatch();\n    } else super.unmaskedValue = unmaskedValue;\n  }\n  get typedValue() {\n    return this.exposeMask ? this.exposeMask.typedValue : this.currentMask ? this.currentMask.typedValue : '';\n  }\n  set typedValue(typedValue) {\n    if (this.exposeMask) {\n      this.exposeMask.typedValue = typedValue;\n      this.currentMask = this.exposeMask;\n      this._applyDispatch();\n      return;\n    }\n    let unmaskedValue = String(typedValue);\n\n    // double check it\n    if (this.currentMask) {\n      this.currentMask.typedValue = typedValue;\n      unmaskedValue = this.currentMask.unmaskedValue;\n    }\n    this.unmaskedValue = unmaskedValue;\n  }\n  get displayValue() {\n    return this.currentMask ? this.currentMask.displayValue : '';\n  }\n  get isComplete() {\n    var _this$currentMask2;\n    return Boolean((_this$currentMask2 = this.currentMask) == null ? void 0 : _this$currentMask2.isComplete);\n  }\n  get isFilled() {\n    var _this$currentMask3;\n    return Boolean((_this$currentMask3 = this.currentMask) == null ? void 0 : _this$currentMask3.isFilled);\n  }\n  remove(fromPos, toPos) {\n    const details = new ChangeDetails();\n    if (this.currentMask) {\n      details.aggregate(this.currentMask.remove(fromPos, toPos))\n      // update with dispatch\n      .aggregate(this._applyDispatch());\n    }\n    return details;\n  }\n  get state() {\n    var _this$currentMask4;\n    return {\n      ...super.state,\n      _rawInputValue: this.rawInputValue,\n      compiledMasks: this.compiledMasks.map(m => m.state),\n      currentMaskRef: this.currentMask,\n      currentMask: (_this$currentMask4 = this.currentMask) == null ? void 0 : _this$currentMask4.state\n    };\n  }\n  set state(state) {\n    const {\n      compiledMasks,\n      currentMaskRef,\n      currentMask,\n      ...maskedState\n    } = state;\n    if (compiledMasks) this.compiledMasks.forEach((m, mi) => m.state = compiledMasks[mi]);\n    if (currentMaskRef != null) {\n      this.currentMask = currentMaskRef;\n      this.currentMask.state = currentMask;\n    }\n    super.state = maskedState;\n  }\n  extractInput(fromPos, toPos, flags) {\n    return this.currentMask ? this.currentMask.extractInput(fromPos, toPos, flags) : '';\n  }\n  extractTail(fromPos, toPos) {\n    return this.currentMask ? this.currentMask.extractTail(fromPos, toPos) : super.extractTail(fromPos, toPos);\n  }\n  doCommit() {\n    if (this.currentMask) this.currentMask.doCommit();\n    super.doCommit();\n  }\n  nearestInputPos(cursorPos, direction) {\n    return this.currentMask ? this.currentMask.nearestInputPos(cursorPos, direction) : super.nearestInputPos(cursorPos, direction);\n  }\n  get overwrite() {\n    return this.currentMask ? this.currentMask.overwrite : this._overwrite;\n  }\n  set overwrite(overwrite) {\n    this._overwrite = overwrite;\n  }\n  get eager() {\n    return this.currentMask ? this.currentMask.eager : this._eager;\n  }\n  set eager(eager) {\n    this._eager = eager;\n  }\n  get skipInvalid() {\n    return this.currentMask ? this.currentMask.skipInvalid : this._skipInvalid;\n  }\n  set skipInvalid(skipInvalid) {\n    this._skipInvalid = skipInvalid;\n  }\n  maskEquals(mask) {\n    return Array.isArray(mask) ? this.compiledMasks.every((m, mi) => {\n      if (!mask[mi]) return;\n      const {\n        mask: oldMask,\n        ...restOpts\n      } = mask[mi];\n      return objectIncludes(m, restOpts) && m.maskEquals(oldMask);\n    }) : super.maskEquals(mask);\n  }\n  typedValueEquals(value) {\n    var _this$currentMask5;\n    return Boolean((_this$currentMask5 = this.currentMask) == null ? void 0 : _this$currentMask5.typedValueEquals(value));\n  }\n}\nMaskedDynamic.DEFAULTS = void 0;\nMaskedDynamic.DEFAULTS = {\n  dispatch: (appended, masked, flags, tail) => {\n    if (!masked.compiledMasks.length) return;\n    const inputValue = masked.rawInputValue;\n\n    // simulate input\n    const inputs = masked.compiledMasks.map((m, index) => {\n      const isCurrent = masked.currentMask === m;\n      const startInputPos = isCurrent ? m.displayValue.length : m.nearestInputPos(m.displayValue.length, DIRECTION.FORCE_LEFT);\n      if (m.rawInputValue !== inputValue) {\n        m.reset();\n        m.append(inputValue, {\n          raw: true\n        });\n      } else if (!isCurrent) {\n        m.remove(startInputPos);\n      }\n      m.append(appended, masked.currentMaskFlags(flags));\n      m.appendTail(tail);\n      return {\n        index,\n        weight: m.rawInputValue.length,\n        totalInputPositions: m.totalInputPositions(0, Math.max(startInputPos, m.nearestInputPos(m.displayValue.length, DIRECTION.FORCE_LEFT)))\n      };\n    });\n\n    // pop masks with longer values first\n    inputs.sort((i1, i2) => i2.weight - i1.weight || i2.totalInputPositions - i1.totalInputPositions);\n    return masked.compiledMasks[inputs[0].index];\n  }\n};\nIMask.MaskedDynamic = MaskedDynamic;\n\nexport { MaskedDynamic as default };\n","import MaskedPattern from './pattern.js';\nimport IMask from '../core/holder.js';\nimport '../core/change-details.js';\nimport '../core/utils.js';\nimport './base.js';\nimport '../core/continuous-tail-details.js';\nimport './factory.js';\nimport './pattern/chunk-tail-details.js';\nimport './pattern/cursor.js';\nimport './pattern/fixed-definition.js';\nimport './pattern/input-definition.js';\nimport './regexp.js';\n\n/** Pattern which validates enum values */\nclass MaskedEnum extends MaskedPattern {\n  constructor(opts) {\n    super(opts); // mask will be created in _update\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    const {\n      enum: _enum,\n      ...eopts\n    } = opts;\n    if (_enum) {\n      const lengths = _enum.map(e => e.length);\n      const requiredLength = Math.min(...lengths);\n      const optionalLength = Math.max(...lengths) - requiredLength;\n      eopts.mask = '*'.repeat(requiredLength);\n      if (optionalLength) eopts.mask += '[' + '*'.repeat(optionalLength) + ']';\n      this.enum = _enum;\n    }\n    super._update(eopts);\n  }\n  doValidate(flags) {\n    return this.enum.some(e => e.indexOf(this.unmaskedValue) === 0) && super.doValidate(flags);\n  }\n}\nIMask.MaskedEnum = MaskedEnum;\n\nexport { MaskedEnum as default };\n","import { escapeRegExp, DIRECTION } from '../core/utils.js';\nimport ChangeDetails from '../core/change-details.js';\nimport Masked from './base.js';\nimport IMask from '../core/holder.js';\nimport '../core/continuous-tail-details.js';\n\nvar _MaskedNumber;\n/** Number mask */\nclass MaskedNumber extends Masked {\n  /** Single char */\n\n  /** Single char */\n\n  /** Array of single chars */\n\n  /** */\n\n  /** */\n\n  /** Digits after point */\n\n  /** Flag to remove leading and trailing zeros in the end of editing */\n\n  /** Flag to pad trailing zeros after point in the end of editing */\n\n  /** Enable characters overwriting */\n\n  /** */\n\n  /** */\n\n  /** Format typed value to string */\n\n  /** Parse string to get typed value */\n\n  /** */\n\n  constructor(opts) {\n    super({\n      ...MaskedNumber.DEFAULTS,\n      ...opts\n    });\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    super._update(opts);\n    this._updateRegExps();\n  }\n  _updateRegExps() {\n    const start = '^' + (this.allowNegative ? '[+|\\\\-]?' : '');\n    const mid = '\\\\d*';\n    const end = (this.scale ? \"(\" + escapeRegExp(this.radix) + \"\\\\d{0,\" + this.scale + \"})?\" : '') + '$';\n    this._numberRegExp = new RegExp(start + mid + end);\n    this._mapToRadixRegExp = new RegExp(\"[\" + this.mapToRadix.map(escapeRegExp).join('') + \"]\", 'g');\n    this._thousandsSeparatorRegExp = new RegExp(escapeRegExp(this.thousandsSeparator), 'g');\n  }\n  _removeThousandsSeparators(value) {\n    return value.replace(this._thousandsSeparatorRegExp, '');\n  }\n  _insertThousandsSeparators(value) {\n    // https://stackoverflow.com/questions/2901102/how-to-print-a-number-with-commas-as-thousands-separators-in-javascript\n    const parts = value.split(this.radix);\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, this.thousandsSeparator);\n    return parts.join(this.radix);\n  }\n  doPrepareChar(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const [prepCh, details] = super.doPrepareChar(this._removeThousandsSeparators(this.scale && this.mapToRadix.length && (\n    /*\n      radix should be mapped when\n      1) input is done from keyboard = flags.input && flags.raw\n      2) unmasked value is set = !flags.input && !flags.raw\n      and should not be mapped when\n      1) value is set = flags.input && !flags.raw\n      2) raw value is set = !flags.input && flags.raw\n    */\n    flags.input && flags.raw || !flags.input && !flags.raw) ? ch.replace(this._mapToRadixRegExp, this.radix) : ch), flags);\n    if (ch && !prepCh) details.skip = true;\n    if (prepCh && !this.allowPositive && !this.value && prepCh !== '-') details.aggregate(this._appendChar('-'));\n    return [prepCh, details];\n  }\n  _separatorsCount(to, extendOnSeparators) {\n    if (extendOnSeparators === void 0) {\n      extendOnSeparators = false;\n    }\n    let count = 0;\n    for (let pos = 0; pos < to; ++pos) {\n      if (this._value.indexOf(this.thousandsSeparator, pos) === pos) {\n        ++count;\n        if (extendOnSeparators) to += this.thousandsSeparator.length;\n      }\n    }\n    return count;\n  }\n  _separatorsCountFromSlice(slice) {\n    if (slice === void 0) {\n      slice = this._value;\n    }\n    return this._separatorsCount(this._removeThousandsSeparators(slice).length, true);\n  }\n  extractInput(fromPos, toPos, flags) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    [fromPos, toPos] = this._adjustRangeWithSeparators(fromPos, toPos);\n    return this._removeThousandsSeparators(super.extractInput(fromPos, toPos, flags));\n  }\n  _appendCharRaw(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const prevBeforeTailValue = flags.tail && flags._beforeTailState ? flags._beforeTailState._value : this._value;\n    const prevBeforeTailSeparatorsCount = this._separatorsCountFromSlice(prevBeforeTailValue);\n    this._value = this._removeThousandsSeparators(this.value);\n    const oldValue = this._value;\n    this._value += ch;\n    const num = this.number;\n    let accepted = !isNaN(num);\n    let skip = false;\n    if (accepted) {\n      let fixedNum;\n      if (this.min != null && this.min < 0 && this.number < this.min) fixedNum = this.min;\n      if (this.max != null && this.max > 0 && this.number > this.max) fixedNum = this.max;\n      if (fixedNum != null) {\n        if (this.autofix) {\n          this._value = this.format(fixedNum, this).replace(MaskedNumber.UNMASKED_RADIX, this.radix);\n          skip || (skip = oldValue === this._value && !flags.tail); // if not changed on tail it's still ok to proceed\n        } else {\n          accepted = false;\n        }\n      }\n      accepted && (accepted = Boolean(this._value.match(this._numberRegExp)));\n    }\n    let appendDetails;\n    if (!accepted) {\n      this._value = oldValue;\n      appendDetails = new ChangeDetails();\n    } else {\n      appendDetails = new ChangeDetails({\n        inserted: this._value.slice(oldValue.length),\n        rawInserted: skip ? '' : ch,\n        skip\n      });\n    }\n    this._value = this._insertThousandsSeparators(this._value);\n    const beforeTailValue = flags.tail && flags._beforeTailState ? flags._beforeTailState._value : this._value;\n    const beforeTailSeparatorsCount = this._separatorsCountFromSlice(beforeTailValue);\n    appendDetails.tailShift += (beforeTailSeparatorsCount - prevBeforeTailSeparatorsCount) * this.thousandsSeparator.length;\n    return appendDetails;\n  }\n  _findSeparatorAround(pos) {\n    if (this.thousandsSeparator) {\n      const searchFrom = pos - this.thousandsSeparator.length + 1;\n      const separatorPos = this.value.indexOf(this.thousandsSeparator, searchFrom);\n      if (separatorPos <= pos) return separatorPos;\n    }\n    return -1;\n  }\n  _adjustRangeWithSeparators(from, to) {\n    const separatorAroundFromPos = this._findSeparatorAround(from);\n    if (separatorAroundFromPos >= 0) from = separatorAroundFromPos;\n    const separatorAroundToPos = this._findSeparatorAround(to);\n    if (separatorAroundToPos >= 0) to = separatorAroundToPos + this.thousandsSeparator.length;\n    return [from, to];\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    [fromPos, toPos] = this._adjustRangeWithSeparators(fromPos, toPos);\n    const valueBeforePos = this.value.slice(0, fromPos);\n    const valueAfterPos = this.value.slice(toPos);\n    const prevBeforeTailSeparatorsCount = this._separatorsCount(valueBeforePos.length);\n    this._value = this._insertThousandsSeparators(this._removeThousandsSeparators(valueBeforePos + valueAfterPos));\n    const beforeTailSeparatorsCount = this._separatorsCountFromSlice(valueBeforePos);\n    return new ChangeDetails({\n      tailShift: (beforeTailSeparatorsCount - prevBeforeTailSeparatorsCount) * this.thousandsSeparator.length\n    });\n  }\n  nearestInputPos(cursorPos, direction) {\n    if (!this.thousandsSeparator) return cursorPos;\n    switch (direction) {\n      case DIRECTION.NONE:\n      case DIRECTION.LEFT:\n      case DIRECTION.FORCE_LEFT:\n        {\n          const separatorAtLeftPos = this._findSeparatorAround(cursorPos - 1);\n          if (separatorAtLeftPos >= 0) {\n            const separatorAtLeftEndPos = separatorAtLeftPos + this.thousandsSeparator.length;\n            if (cursorPos < separatorAtLeftEndPos || this.value.length <= separatorAtLeftEndPos || direction === DIRECTION.FORCE_LEFT) {\n              return separatorAtLeftPos;\n            }\n          }\n          break;\n        }\n      case DIRECTION.RIGHT:\n      case DIRECTION.FORCE_RIGHT:\n        {\n          const separatorAtRightPos = this._findSeparatorAround(cursorPos);\n          if (separatorAtRightPos >= 0) {\n            return separatorAtRightPos + this.thousandsSeparator.length;\n          }\n        }\n    }\n    return cursorPos;\n  }\n  doCommit() {\n    if (this.value) {\n      const number = this.number;\n      let validnum = number;\n\n      // check bounds\n      if (this.min != null) validnum = Math.max(validnum, this.min);\n      if (this.max != null) validnum = Math.min(validnum, this.max);\n      if (validnum !== number) this.unmaskedValue = this.format(validnum, this);\n      let formatted = this.value;\n      if (this.normalizeZeros) formatted = this._normalizeZeros(formatted);\n      if (this.padFractionalZeros && this.scale > 0) formatted = this._padFractionalZeros(formatted);\n      this._value = formatted;\n    }\n    super.doCommit();\n  }\n  _normalizeZeros(value) {\n    const parts = this._removeThousandsSeparators(value).split(this.radix);\n\n    // remove leading zeros\n    parts[0] = parts[0].replace(/^(\\D*)(0*)(\\d*)/, (match, sign, zeros, num) => sign + num);\n    // add leading zero\n    if (value.length && !/\\d$/.test(parts[0])) parts[0] = parts[0] + '0';\n    if (parts.length > 1) {\n      parts[1] = parts[1].replace(/0*$/, ''); // remove trailing zeros\n      if (!parts[1].length) parts.length = 1; // remove fractional\n    }\n    return this._insertThousandsSeparators(parts.join(this.radix));\n  }\n  _padFractionalZeros(value) {\n    if (!value) return value;\n    const parts = value.split(this.radix);\n    if (parts.length < 2) parts.push('');\n    parts[1] = parts[1].padEnd(this.scale, '0');\n    return parts.join(this.radix);\n  }\n  doSkipInvalid(ch, flags, checkTail) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const dropFractional = this.scale === 0 && ch !== this.thousandsSeparator && (ch === this.radix || ch === MaskedNumber.UNMASKED_RADIX || this.mapToRadix.includes(ch));\n    return super.doSkipInvalid(ch, flags, checkTail) && !dropFractional;\n  }\n  get unmaskedValue() {\n    return this._removeThousandsSeparators(this._normalizeZeros(this.value)).replace(this.radix, MaskedNumber.UNMASKED_RADIX);\n  }\n  set unmaskedValue(unmaskedValue) {\n    super.unmaskedValue = unmaskedValue;\n  }\n  get typedValue() {\n    return this.parse(this.unmaskedValue, this);\n  }\n  set typedValue(n) {\n    this.rawInputValue = this.format(n, this).replace(MaskedNumber.UNMASKED_RADIX, this.radix);\n  }\n\n  /** Parsed Number */\n  get number() {\n    return this.typedValue;\n  }\n  set number(number) {\n    this.typedValue = number;\n  }\n  get allowNegative() {\n    return this.min != null && this.min < 0 || this.max != null && this.max < 0;\n  }\n  get allowPositive() {\n    return this.min != null && this.min > 0 || this.max != null && this.max > 0;\n  }\n  typedValueEquals(value) {\n    // handle  0 -> '' case (typed = 0 even if value = '')\n    // for details see https://github.com/uNmAnNeR/imaskjs/issues/134\n    return (super.typedValueEquals(value) || MaskedNumber.EMPTY_VALUES.includes(value) && MaskedNumber.EMPTY_VALUES.includes(this.typedValue)) && !(value === 0 && this.value === '');\n  }\n}\n_MaskedNumber = MaskedNumber;\nMaskedNumber.UNMASKED_RADIX = '.';\nMaskedNumber.EMPTY_VALUES = [...Masked.EMPTY_VALUES, 0];\nMaskedNumber.DEFAULTS = {\n  mask: Number,\n  radix: ',',\n  thousandsSeparator: '',\n  mapToRadix: [_MaskedNumber.UNMASKED_RADIX],\n  min: Number.MIN_SAFE_INTEGER,\n  max: Number.MAX_SAFE_INTEGER,\n  scale: 2,\n  normalizeZeros: true,\n  padFractionalZeros: false,\n  parse: Number,\n  format: n => n.toLocaleString('en-US', {\n    useGrouping: false,\n    maximumFractionDigits: 20\n  })\n};\nIMask.MaskedNumber = MaskedNumber;\n\nexport { MaskedNumber as default };\n","import Masked from './base.js';\nimport IMask from '../core/holder.js';\nimport '../core/change-details.js';\nimport '../core/continuous-tail-details.js';\nimport '../core/utils.js';\n\n/** Masking by custom Function */\nclass MaskedFunction extends Masked {\n  /** */\n\n  /** Enable characters overwriting */\n\n  /** */\n\n  /** */\n\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    super._update({\n      ...opts,\n      validate: opts.mask\n    });\n  }\n}\nIMask.MaskedFunction = MaskedFunction;\n\nexport { MaskedFunction as default };\n","import createMask from './factory.js';\nimport IMask from '../core/holder.js';\nimport '../core/utils.js';\n\n/** Mask pipe source and destination types */\nconst PIPE_TYPE = {\n  MASKED: 'value',\n  UNMASKED: 'unmaskedValue',\n  TYPED: 'typedValue'\n};\n/** Creates new pipe function depending on mask type, source and destination options */\nfunction createPipe(arg, from, to) {\n  if (from === void 0) {\n    from = PIPE_TYPE.MASKED;\n  }\n  if (to === void 0) {\n    to = PIPE_TYPE.MASKED;\n  }\n  const masked = createMask(arg);\n  return value => masked.runIsolated(m => {\n    m[from] = value;\n    return m[to];\n  });\n}\n\n/** Pipes value through mask depending on mask type, source and destination options */\nfunction pipe(value, mask, from, to) {\n  return createPipe(mask, from, to)(value);\n}\nIMask.PIPE_TYPE = PIPE_TYPE;\nIMask.createPipe = createPipe;\nIMask.pipe = pipe;\n\nexport { PIPE_TYPE, createPipe, pipe };\n","import ChangeDetails from '../core/change-details.js';\nimport IMask from '../core/holder.js';\nimport createMask, { normalizeOpts } from './factory.js';\nimport MaskedPattern from './pattern.js';\nimport '../core/utils.js';\nimport './base.js';\nimport '../core/continuous-tail-details.js';\nimport './pattern/chunk-tail-details.js';\nimport './pattern/cursor.js';\nimport './pattern/fixed-definition.js';\nimport './pattern/input-definition.js';\nimport './regexp.js';\n\n/** Pattern mask */\nclass RepeatBlock extends MaskedPattern {\n  get repeatFrom() {\n    var _ref;\n    return (_ref = Array.isArray(this.repeat) ? this.repeat[0] : this.repeat === Infinity ? 0 : this.repeat) != null ? _ref : 0;\n  }\n  get repeatTo() {\n    var _ref2;\n    return (_ref2 = Array.isArray(this.repeat) ? this.repeat[1] : this.repeat) != null ? _ref2 : Infinity;\n  }\n  constructor(opts) {\n    super(opts);\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    var _ref3, _ref4, _this$_blocks;\n    const {\n      repeat,\n      ...blockOpts\n    } = normalizeOpts(opts); // TODO type\n    this._blockOpts = Object.assign({}, this._blockOpts, blockOpts);\n    const block = createMask(this._blockOpts);\n    this.repeat = (_ref3 = (_ref4 = repeat != null ? repeat : block.repeat) != null ? _ref4 : this.repeat) != null ? _ref3 : Infinity; // TODO type\n\n    super._update({\n      mask: 'm'.repeat(Math.max(this.repeatTo === Infinity && ((_this$_blocks = this._blocks) == null ? void 0 : _this$_blocks.length) || 0, this.repeatFrom)),\n      blocks: {\n        m: block\n      },\n      eager: block.eager,\n      overwrite: block.overwrite,\n      skipInvalid: block.skipInvalid,\n      lazy: block.lazy,\n      placeholderChar: block.placeholderChar,\n      displayChar: block.displayChar\n    });\n  }\n  _allocateBlock(bi) {\n    if (bi < this._blocks.length) return this._blocks[bi];\n    if (this.repeatTo === Infinity || this._blocks.length < this.repeatTo) {\n      this._blocks.push(createMask(this._blockOpts));\n      this.mask += 'm';\n      return this._blocks[this._blocks.length - 1];\n    }\n  }\n  _appendCharRaw(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const details = new ChangeDetails();\n    for (let bi = (_this$_mapPosToBlock$ = (_this$_mapPosToBlock = this._mapPosToBlock(this.displayValue.length)) == null ? void 0 : _this$_mapPosToBlock.index) != null ? _this$_mapPosToBlock$ : Math.max(this._blocks.length - 1, 0), block, allocated;\n    // try to get a block or\n    // try to allocate a new block if not allocated already\n    block = (_this$_blocks$bi = this._blocks[bi]) != null ? _this$_blocks$bi : allocated = !allocated && this._allocateBlock(bi); ++bi) {\n      var _this$_mapPosToBlock$, _this$_mapPosToBlock, _this$_blocks$bi, _flags$_beforeTailSta;\n      const blockDetails = block._appendChar(ch, {\n        ...flags,\n        _beforeTailState: (_flags$_beforeTailSta = flags._beforeTailState) == null || (_flags$_beforeTailSta = _flags$_beforeTailSta._blocks) == null ? void 0 : _flags$_beforeTailSta[bi]\n      });\n      if (blockDetails.skip && allocated) {\n        // remove the last allocated block and break\n        this._blocks.pop();\n        this.mask = this.mask.slice(1);\n        break;\n      }\n      details.aggregate(blockDetails);\n      if (blockDetails.consumed) break; // go next char\n    }\n    return details;\n  }\n  _trimEmptyTail(fromPos, toPos) {\n    var _this$_mapPosToBlock2, _this$_mapPosToBlock3;\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    const firstBlockIndex = Math.max(((_this$_mapPosToBlock2 = this._mapPosToBlock(fromPos)) == null ? void 0 : _this$_mapPosToBlock2.index) || 0, this.repeatFrom, 0);\n    let lastBlockIndex;\n    if (toPos != null) lastBlockIndex = (_this$_mapPosToBlock3 = this._mapPosToBlock(toPos)) == null ? void 0 : _this$_mapPosToBlock3.index;\n    if (lastBlockIndex == null) lastBlockIndex = this._blocks.length - 1;\n    let removeCount = 0;\n    for (let blockIndex = lastBlockIndex; firstBlockIndex <= blockIndex; --blockIndex, ++removeCount) {\n      if (this._blocks[blockIndex].unmaskedValue) break;\n    }\n    if (removeCount) {\n      this._blocks.splice(lastBlockIndex - removeCount + 1, removeCount);\n      this.mask = this.mask.slice(removeCount);\n    }\n  }\n  reset() {\n    super.reset();\n    this._trimEmptyTail();\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    const removeDetails = super.remove(fromPos, toPos);\n    this._trimEmptyTail(fromPos, toPos);\n    return removeDetails;\n  }\n  totalInputPositions(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos == null && this.repeatTo === Infinity) return Infinity;\n    return super.totalInputPositions(fromPos, toPos);\n  }\n  get state() {\n    return super.state;\n  }\n  set state(state) {\n    this._blocks.length = state._blocks.length;\n    this.mask = this.mask.slice(0, this._blocks.length);\n    super.state = state;\n  }\n}\nIMask.RepeatBlock = RepeatBlock;\n\nexport { RepeatBlock as default };\n","export { default as InputMask } from './controls/input.js';\nimport IMask from './core/holder.js';\nexport { default as HTMLContenteditableMaskElement } from './controls/html-contenteditable-mask-element.js';\nexport { default as HTMLInputMaskElement } from './controls/html-input-mask-element.js';\nexport { default as HTMLMaskElement } from './controls/html-mask-element.js';\nexport { default as MaskElement } from './controls/mask-element.js';\nexport { default as ChangeDetails } from './core/change-details.js';\nexport { DIRECTION, forceDirection } from './core/utils.js';\nexport { default as Masked } from './masked/base.js';\nexport { default as MaskedDate } from './masked/date.js';\nexport { default as MaskedDynamic } from './masked/dynamic.js';\nexport { default as MaskedEnum } from './masked/enum.js';\nexport { default as createMask, normalizeOpts } from './masked/factory.js';\nexport { default as MaskedFunction } from './masked/function.js';\nexport { default as MaskedNumber } from './masked/number.js';\nexport { default as MaskedPattern } from './masked/pattern.js';\nexport { default as ChunksTailDetails } from './masked/pattern/chunk-tail-details.js';\nexport { default as PatternFixedDefinition } from './masked/pattern/fixed-definition.js';\nexport { default as PatternInputDefinition } from './masked/pattern/input-definition.js';\nexport { PIPE_TYPE, createPipe, pipe } from './masked/pipe.js';\nexport { default as MaskedRange } from './masked/range.js';\nexport { default as MaskedRegExp } from './masked/regexp.js';\nexport { default as RepeatBlock } from './masked/repeat.js';\nimport './core/action-details.js';\nimport './controls/input-history.js';\nimport './core/continuous-tail-details.js';\nimport './masked/pattern/cursor.js';\n\ntry {\n  globalThis.IMask = IMask;\n} catch {}\n\nexport { IMask as default };\n","import IMask from 'imask';\nconst phoneInput = document.getElementById('phone');\nconst maskOptions = {\n  mask: '+38 (000) 000 00 00',\n};\nconst mask = new IMask(phoneInput, maskOptions);\n"],"names":["$7f8f9e4cb1731024$export$2e2bcd8739ae039","el","opts","InputMask","$b9f82b1f38a24931$export$844ec244b1367d54","str","String","$b9f82b1f38a24931$export$a6cdc56e425d0d0a","obj","_obj$constructor","constructor","name","$b9f82b1f38a24931$export$357523c63a2253b9","keys","Array","isArray","_","k","includes","Object","entries","reduce","acc","_ref","v","$b9f82b1f38a24931$export$9106728c49045482","NONE","LEFT","FORCE_LEFT","RIGHT","FORCE_RIGHT","$b9f82b1f38a24931$export$32af4dafed14c8ce","direction","$b9f82b1f38a24931$export$7c57da42ce8e346f","replace","$b9f82b1f38a24931$export$7aeb68f71172641d","b","a","arrA","arrB","i","length","dateA","Date","dateB","getTime","regexpA","RegExp","regexpB","toString","prototype","hasOwnProperty","call","$6d3a752202397b67$export$2e2bcd8739ae039","startChangePos","Math","min","this","cursorPos","oldSelection","start","insertedCount","inserted","value","substr","removedCount","max","end","oldValue","removed","head","substring","tail","removeDirection","assign","slice","$4679688fec8214a0$export$2e2bcd8739ae039","currentState","states","currentIndex","isEmpty","push","state","MAX_LENGTH","shift","go","steps","undo","redo","clear","$81952e4a4da5ff65$export$2e2bcd8739ae039","extend","appendTo","masked","append","aggregate","_appendPlaceholder","from","stop","unshift","beforePos","shiftChar","$9a02baa154032bcf$export$2e2bcd8739ae039","block","_blocks","index","pos","_blockStartPos","offset","ok","s","pushState","_log","popState","pop","bindBlock","displayValue","_pushLeft","fn","_this$block","_pushRight","pushLeftBeforeFilled","isFixed","nearestInputPos","pushLeftBeforeInput","pushLeftBeforeRequired","isOptional","pushRightBeforeFilled","pushRightBeforeInput","pushRightBeforeRequired","_mapPosToBlock","$9b2a7934382d129f$export$81ad4b1539a22420","mask","Error","MaskedRegExp","MaskedPattern","MaskedDate","Number","MaskedNumber","MaskedDynamic","Masked","Function","MaskedFunction","console","warn","$9b2a7934382d129f$export$a213ae1c699d7230","instanceOpts","_mask","startsWith","$9b2a7934382d129f$export$2e2bcd8739ae039","nOpts","MaskedClass","createMask","$600250ccf0419caa$export$2e2bcd8739ae039","selectionStart","_unsafeSelectionStart","selectionEnd","_unsafeSelectionEnd","select","_unsafeSelect","isActive","MaskElement","$910b09fe2b01933a$export$2e2bcd8739ae039","rootElement","_this$input$getRootNo","_this$input$getRootNo2","_this$input","input","getRootNode","document","activeElement","bindEvents","handlers","addEventListener","_onKeydown","_onInput","_onBeforeinput","_onCompositionEnd","drop","click","focus","commit","_handlers","e","keyCode","shiftKey","metaKey","ctrlKey","preventDefault","isComposing","selectionChange","inputType","unbindEvents","removeEventListener","super","bind","HTMLMaskElement","$26232c39b47ea1e1$export$2e2bcd8739ae039","setSelectionRange","$1102251dbd92a30c$export$2e2bcd8739ae039","root","selection","getSelection","anchorOffset","focusOffset","createRange","range","setStart","firstChild","setEnd","lastChild","removeAllRanges","addRange","textContent","HTMLContenteditableMaskElement","maskEquals","_this$masked","updateOptions","unmaskedValue","_value","updateControl","_unmaskedValue","rawInputValue","_rawInputValue","alignCursor","typedValue","val","typedValueEquals","_bindEvents","_saveSelection","_onDrop","_onClick","_onFocus","_onChange","_onUndo","_onRedo","_unbindEvents","_fireEvent","ev","listeners","_listeners","forEach","l","_cursorChanging","_changingCursorPos","_selection","updateValue","newUnmaskedValue","newValue","newRawInputValue","newDisplayValue","isChanged","_fireChangeEvents","_historyChanging","history","restOpts","updateMask","updateOpts","optionsIsChanged","updateCursor","_delayUpdateCursor","_abortUpdateCursor","setTimeout","_inputEvent","isComplete","clearTimeout","alignCursorFriendly","on","handler","off","hIndex","indexOf","splice","details","oldRawValue","raw","doCommit","stopPropagation","_applyHistoryState","destroy","isContentEditable","tagName","$bd3b02e030d373d5$export$2e2bcd8739ae039","static","prep","rawInserted","tailShift","skip","consumed","Boolean","ChangeDetails","$18a6c62942791a59$export$2e2bcd8739ae039","withValueRefresh","_update","reset","resolve","flags","parse","format","extractInput","isFilled","totalInputPositions","fromPos","toPos","extractTail","appendTail","_appendCharRaw","ch","_appendChar","checkTail","consistentState","doPrepareChar","consistentTail","appended","doValidate","beforeTailState","overwrite","tailDetails","_appendEager","_beforeTailState","doPrepare","ci","d","doSkipInvalid","eager","remove","_refreshing","_initialized","rawInput","ret","runIsolated","_isolated","skipInvalid","normalize","prepare","prepareChar","validate","parent","deleteCount","tailPos","eagerRemove","valLength","tval","EMPTY_VALUES","DEFAULTS","undefined","$987e1259c87a2a38$export$2e2bcd8739ae039","chunks","map","join","tailChunk","lastChunk","extendLast","firstTailChunk","blockIndex","chunk","lastBlockIter","chunkBlock","_stops","remainChars","c","props","cstate","chunkShiftPos","$1fb2c7b048288f37$export$2e2bcd8739ae039","isUnmasking","_isRawInput","maxPos","appendEager","isResolved","char","$82a2e1550ae7feb1$export$2e2bcd8739ae039","placeholderChar","displayChar","currentMaskFlags","lazy","boundPos","_flags$_beforeTailSta","maskOpts","DEFAULT_DEFINITIONS","search","$a593d1cc05cf62bc$export$2e2bcd8739ae039","definitions","_rebuildMask","defs","exposeBlock","_maskedBlocks","pattern","unmaskingBlock","optionalBlock","blocks","p","bNames","filter","bName","sort","bName1","expose","repeat","bOpts","blockOpts","maskedBlock","RepeatBlock","isInput","STOP_CHAR","ESCAPE_CHAR","def","maskedState","bi","every","_this$_mapPosToBlock","startBlockIndex","blockIter","blockDetails","chunkTail","_forEachBlocksInRange","bFromPos","bToPos","blockChunk","_findStopBefore","fromPos1","toPos1","stopBefore","si","toBlockIndex","startBlockIter","endBlockIndex","_blocks2","accVal","blockStartPos","fromBlockIter","toBlockIter","isSameBlock","fromBlockStartPos","fromBlockEndPos","removeDetails","cursor","total","maskedBlocks","indices","gi","InputDefinition","FixedDefinition","$1fecf9d7bab406f0$export$2e2bcd8739ae039","_matchFrom","maxLength","to","autofix","patternOpts","fromStr","padStart","toStr","sameCharsCount","boundaries","minstr","maxstr","placeholder","num","match","padEnd","nextVal","MaskedRange","$dc338e4b295b7779$export$2e2bcd8739ae039","patternBlocks","GET_DEFAULT_BLOCKS","Y","getFullYear","m","getMonth","getDate","bk","date","isDateExist","extractPatternOptions","day","month","year","split","$7d499f714d762607$export$2e2bcd8739ae039","exposeMask","compiledMasks","_overwrite","_eager","_skipInvalid","_applyDispatch","currentMask","prevValueBeforeTail","inputValue","insertValue","tailValue","prevMask","prevMaskState","doDispatch","_flags$_beforeTailSta2","currentMaskRef","dispatch","currentDetails","_this$currentMask","_this$currentMask2","_this$currentMask3","_this$currentMask4","mi","oldMask","_this$currentMask5","inputs","isCurrent","startInputPos","weight","i1","i2","MaskedEnum","enum","_enum","eopts","lengths","requiredLength","optionalLength","some","$8a2fcbb913c2ebd8$var$_MaskedNumber","$8a2fcbb913c2ebd8$export$2e2bcd8739ae039","_updateRegExps","allowNegative","scale","radix","_numberRegExp","_mapToRadixRegExp","mapToRadix","_thousandsSeparatorRegExp","thousandsSeparator","_removeThousandsSeparators","_insertThousandsSeparators","parts","prepCh","allowPositive","_separatorsCount","extendOnSeparators","count","_separatorsCountFromSlice","_adjustRangeWithSeparators","prevBeforeTailValue","prevBeforeTailSeparatorsCount","number","appendDetails","accepted","isNaN","fixedNum","UNMASKED_RADIX","beforeTailValue","beforeTailSeparatorsCount","_findSeparatorAround","searchFrom","separatorPos","separatorAroundFromPos","separatorAroundToPos","valueBeforePos","valueAfterPos","separatorAtLeftPos","separatorAtLeftEndPos","separatorAtRightPos","validnum","formatted","normalizeZeros","_normalizeZeros","padFractionalZeros","_padFractionalZeros","sign","zeros","test","dropFractional","n","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","toLocaleString","useGrouping","maximumFractionDigits","$e50cd5fa4d277691$export$90dab59c3d4b6e03","MASKED","UNMASKED","TYPED","$e50cd5fa4d277691$export$a504d53a5b99e1b9","arg","PIPE_TYPE","createPipe","pipe","repeatFrom","Infinity","repeatTo","_ref2","_ref3","_ref4","_this$_blocks","_blockOpts","_allocateBlock","allocated","_this$_mapPosToBlock$","_this$_blocks$bi","_trimEmptyTail","_this$_mapPosToBlock2","_this$_mapPosToBlock3","firstBlockIndex","lastBlockIndex","removeCount","globalThis","IMask","getElementById"],"version":3,"file":"index.e17ab3e2.js.map"}